
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SD_4XUpscale_Conditioning
class SD_4XUpscale_ConditioningInputs(InputSlots):
    images: Slot[Image]
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    scale_ratio: Slot[float]
    noise_augmentation: Slot[float]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "negative", 'CONDITIONING')
        self.scale_ratio = Slot[float](node, "scale_ratio", 'FLOAT')
        self.noise_augmentation = Slot[float](node, "noise_augmentation", 'FLOAT')

class SD_4XUpscale_ConditioningOutputs(OutputSlots):
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "negative", 'CONDITIONING')
        self.latent = Slot[Latent](node, "latent", 'LATENT')

class SD_4XUpscale_Conditioning(Node[SD_4XUpscale_ConditioningInputs, SD_4XUpscale_ConditioningOutputs]):
    """
    Original name: SD_4XUpscale_Conditioning
    Category: conditioning/upscale_diffusion
    

    Inputs:
        - images (Image)
        - positive (Conditioning)
        - negative (Conditioning)
        - scale_ratio (float) (default: 4.0)
        - noise_augmentation (float) (default: 0.0)

    Outputs:
        - positive (Conditioning)
        - negative (Conditioning)
        - latent (Latent)
    """
    _original_name: str = 'SD_4XUpscale_Conditioning'

    def __init__(self, images: Slot[Image], positive: Slot[Conditioning], negative: Slot[Conditioning], scale_ratio: float = 4.0, noise_augmentation: float = 0.0):
        super().__init__(**{"images": images, "positive": positive, "negative": negative, "scale_ratio": scale_ratio, "noise_augmentation": noise_augmentation})
        self.inputs = SD_4XUpscale_ConditioningInputs(self)
        self.outputs = SD_4XUpscale_ConditioningOutputs(self)
