
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for TimerNodeKJ
class TimerNodeKJInputs(InputSlots):
    any_input: Slot[Any]
    mode: Slot[str]
    name: Slot[str]
    def __init__(self, node: "Node"):
        self.any_input = Slot[Any](node, "any_input", '*')
        self.mode = Slot[str](node, "mode", ['start', 'stop'])
        self.name = Slot[str](node, "name", 'STRING')

class TimerNodeKJOutputs(OutputSlots):
    any_output: Slot[Any]
    timer: Slot[Any]
    time: Slot[int]
    def __init__(self, node: "Node"):
        self.any_output = Slot[Any](node, "any_output", '*')
        self.timer = Slot[Any](node, "timer", 'TIMER')
        self.time = Slot[int](node, "time", 'INT')

class TimerNodeKJ(Node[TimerNodeKJInputs, TimerNodeKJOutputs]):
    """
    Original name: TimerNodeKJ
    No description available.
    """
    _original_name: str = 'TimerNodeKJ'

    def __init__(self, any_input: Slot[Any], mode: str, name: str = 'Timer'):
        super().__init__(**{"any_input": any_input, "mode": mode, "name": name})
        self.inputs = TimerNodeKJInputs(self)
        self.outputs = TimerNodeKJOutputs(self)
