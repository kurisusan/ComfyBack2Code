
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for BasicGuider
class BasicGuiderInputs(InputSlots):
    model: Slot[Model]
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.conditioning = Slot[Conditioning](node, "conditioning", 'CONDITIONING')

class BasicGuiderOutputs(OutputSlots):
    guider: Slot[Any]
    def __init__(self, node: "Node"):
        self.guider = Slot[Any](node, "GUIDER", 'GUIDER')

class BasicGuider(Node[BasicGuiderInputs, BasicGuiderOutputs]):
    """
    Original name: BasicGuider
    No description available.
    """
    _original_name: str = 'BasicGuider'

    def __init__(self, model: Slot[Model], conditioning: Slot[Conditioning]):
        super().__init__(**{"model": model, "conditioning": conditioning})
        self.inputs = BasicGuiderInputs(self)
        self.outputs = BasicGuiderOutputs(self)
