
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LoraSave
class LoraSaveInputs(InputSlots):
    filename_prefix: Slot[str]
    rank: Slot[int]
    lora_type: Slot[str]
    bias_diff: Slot[bool]
    def __init__(self, node: "Node"):
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')
        self.rank = Slot[int](node, "rank", 'INT')
        self.lora_type = Slot[str](node, "lora_type", ['standard', 'full_diff'])
        self.bias_diff = Slot[bool](node, "bias_diff", 'BOOLEAN')

class LoraSaveOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class LoraSave(Node[LoraSaveInputs, LoraSaveOutputs]):
    """
    Original name: LoraSave
    No description available.
    """
    _original_name: str = 'LoraSave'

    def __init__(self, lora_type: str, filename_prefix: str = 'loras/ComfyUI_extracted_lora', rank: int = 8, bias_diff: bool = True):
        super().__init__(**{"filename_prefix": filename_prefix, "rank": rank, "lora_type": lora_type, "bias_diff": bias_diff})
        self.inputs = LoraSaveInputs(self)
        self.outputs = LoraSaveOutputs(self)
