
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SaveLatent
class SaveLatentInputs(InputSlots):
    samples: Slot[Latent]
    filename_prefix: Slot[str]
    def __init__(self, node: "Node"):
        self.samples = Slot[Latent](node, "samples", 'LATENT')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')

class SaveLatentOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class SaveLatent(Node[SaveLatentInputs, SaveLatentOutputs]):
    """
    Original name: SaveLatent
    No description available.
    """
    _original_name: str = 'SaveLatent'

    def __init__(self, samples: Slot[Latent], filename_prefix: str = 'latents/ComfyUI'):
        super().__init__(**{"samples": samples, "filename_prefix": filename_prefix})
        self.inputs = SaveLatentInputs(self)
        self.outputs = SaveLatentOutputs(self)
