
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ExtractStartFramesForContinuations
class ExtractStartFramesForContinuationsInputs(InputSlots):
    input_video_frames: Slot[Image]
    num_frames: Slot[int]
    def __init__(self, node: "Node"):
        self.input_video_frames = Slot[Image](node, "input_video_frames", 'IMAGE')
        self.num_frames = Slot[int](node, "num_frames", 'INT')

class ExtractStartFramesForContinuationsOutputs(OutputSlots):
    start_frames: Slot[Image]
    def __init__(self, node: "Node"):
        self.start_frames = Slot[Image](node, "start_frames", 'IMAGE')

class ExtractStartFramesForContinuations(Node[ExtractStartFramesForContinuationsInputs, ExtractStartFramesForContinuationsOutputs]):
    """
    Original name: ExtractStartFramesForContinuations
    Category: WanVideoWrapper
    Extracts the first N frames from a video sequence for continuations.

    Inputs:
        - input_video_frames (Image)
          Input video frames to extract the start frames from.
        - num_frames (int) (default: 10)
          Number of frames to get from the start of the video.

    Outputs:
        - start_frames (Image)
    """
    _original_name: str = 'ExtractStartFramesForContinuations'

    def __init__(self, input_video_frames: Slot[Image], num_frames: int = 10):
        super().__init__(**{"input_video_frames": input_video_frames, "num_frames": num_frames})
        self.inputs = ExtractStartFramesForContinuationsInputs(self)
        self.outputs = ExtractStartFramesForContinuationsOutputs(self)
