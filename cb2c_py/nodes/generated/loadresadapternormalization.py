
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LoadResAdapterNormalization
class LoadResAdapterNormalizationInputs(InputSlots):
    model: Slot[Model]
    resadapter_path: Slot[str]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.resadapter_path = Slot[str](node, "resadapter_path", ['v1-5-pruned-emaonly.safetensors'])

class LoadResAdapterNormalizationOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class LoadResAdapterNormalization(Node[LoadResAdapterNormalizationInputs, LoadResAdapterNormalizationOutputs]):
    """
    Original name: LoadResAdapterNormalization
    Category: KJNodes/experimental
    

    Inputs:
        - model (Model)
        - resadapter_path (str)

    Outputs:
        - model (Model)
    """
    _original_name: str = 'LoadResAdapterNormalization'

    def __init__(self, model: Slot[Model], resadapter_path: str):
        super().__init__(**{"model": model, "resadapter_path": resadapter_path})
        self.inputs = LoadResAdapterNormalizationInputs(self)
        self.outputs = LoadResAdapterNormalizationOutputs(self)
