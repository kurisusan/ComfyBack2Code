
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for PikaScenesV2_2
class PikaScenesV2_2Inputs(InputSlots):
    prompt_text: Slot[str]
    negative_prompt: Slot[str]
    seed: Slot[int]
    resolution: Slot[Any]
    duration: Slot[Any]
    ingredients_mode: Slot[Any]
    aspect_ratio: Slot[float]
    def __init__(self, node: "Node"):
        self.prompt_text = Slot[str](node, "prompt_text", 'STRING')
        self.negative_prompt = Slot[str](node, "negative_prompt", 'STRING')
        self.seed = Slot[int](node, "seed", 'INT')
        self.resolution = Slot[Any](node, "resolution", 'COMBO')
        self.duration = Slot[Any](node, "duration", 'COMBO')
        self.ingredients_mode = Slot[Any](node, "ingredients_mode", 'COMBO')
        self.aspect_ratio = Slot[float](node, "aspect_ratio", 'FLOAT')

class PikaScenesV2_2Outputs(OutputSlots):
    video: Slot[Any]
    def __init__(self, node: "Node"):
        self.video = Slot[Any](node, "VIDEO", 'VIDEO')

class PikaScenesV2_2(Node[PikaScenesV2_2Inputs, PikaScenesV2_2Outputs]):
    """
    Original name: PikaScenesV2_2
    No description available.
    """
    _original_name: str = 'PikaScenesV2_2'

    def __init__(self, prompt_text: str = None, negative_prompt: str = None, seed: int = None, resolution: Slot[Any] = '1080p', duration: Slot[Any] = 5, ingredients_mode: Slot[Any] = 'creative', aspect_ratio: float = 1.7777777777777777):
        super().__init__(**{"prompt_text": prompt_text, "negative_prompt": negative_prompt, "seed": seed, "resolution": resolution, "duration": duration, "ingredients_mode": ingredients_mode, "aspect_ratio": aspect_ratio})
        self.inputs = PikaScenesV2_2Inputs(self)
        self.outputs = PikaScenesV2_2Outputs(self)
