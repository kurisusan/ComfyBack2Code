
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for RenormCFG
class RenormCFGInputs(InputSlots):
    model: Slot[Model]
    cfg_trunc: Slot[float]
    renorm_cfg: Slot[float]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.cfg_trunc = Slot[float](node, "cfg_trunc", 'FLOAT')
        self.renorm_cfg = Slot[float](node, "renorm_cfg", 'FLOAT')

class RenormCFGOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class RenormCFG(Node[RenormCFGInputs, RenormCFGOutputs]):
    """
    Original name: RenormCFG
    No description available.
    """
    _original_name: str = 'RenormCFG'

    def __init__(self, model: Slot[Model], cfg_trunc: float = 100, renorm_cfg: float = 1.0):
        super().__init__(**{"model": model, "cfg_trunc": cfg_trunc, "renorm_cfg": renorm_cfg})
        self.inputs = RenormCFGInputs(self)
        self.outputs = RenormCFGOutputs(self)
