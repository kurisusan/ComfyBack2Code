
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ModelPatchTorchSettings
class ModelPatchTorchSettingsInputs(InputSlots):
    model: Slot[Model]
    enable_fp16_accumulation: Slot[bool]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.enable_fp16_accumulation = Slot[bool](node, "enable_fp16_accumulation", 'BOOLEAN')

class ModelPatchTorchSettingsOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class ModelPatchTorchSettings(Node[ModelPatchTorchSettingsInputs, ModelPatchTorchSettingsOutputs]):
    """
    Original name: ModelPatchTorchSettings
    No description available.
    """
    _original_name: str = 'ModelPatchTorchSettings'

    def __init__(self, model: Slot[Model], enable_fp16_accumulation: bool = False):
        super().__init__(**{"model": model, "enable_fp16_accumulation": enable_fp16_accumulation})
        self.inputs = ModelPatchTorchSettingsInputs(self)
        self.outputs = ModelPatchTorchSettingsOutputs(self)
