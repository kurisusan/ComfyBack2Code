
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoExperimentalArgs
class WanVideoExperimentalArgsInputs(InputSlots):
    video_attention_split_steps: Slot[str]
    cfg_zero_star: Slot[bool]
    use_zero_init: Slot[bool]
    zero_star_steps: Slot[int]
    use_fresca: Slot[bool]
    fresca_scale_low: Slot[float]
    fresca_scale_high: Slot[float]
    fresca_freq_cutoff: Slot[int]
    def __init__(self, node: "Node"):
        self.video_attention_split_steps = Slot[str](node, "video_attention_split_steps", 'STRING')
        self.cfg_zero_star = Slot[bool](node, "cfg_zero_star", 'BOOLEAN')
        self.use_zero_init = Slot[bool](node, "use_zero_init", 'BOOLEAN')
        self.zero_star_steps = Slot[int](node, "zero_star_steps", 'INT')
        self.use_fresca = Slot[bool](node, "use_fresca", 'BOOLEAN')
        self.fresca_scale_low = Slot[float](node, "fresca_scale_low", 'FLOAT')
        self.fresca_scale_high = Slot[float](node, "fresca_scale_high", 'FLOAT')
        self.fresca_freq_cutoff = Slot[int](node, "fresca_freq_cutoff", 'INT')

class WanVideoExperimentalArgsOutputs(OutputSlots):
    exp_args: Slot[Any]
    def __init__(self, node: "Node"):
        self.exp_args = Slot[Any](node, "exp_args", 'EXPERIMENTALARGS')

class WanVideoExperimentalArgs(Node[WanVideoExperimentalArgsInputs, WanVideoExperimentalArgsOutputs]):
    """
    Original name: WanVideoExperimentalArgs
    Category: WanVideoWrapper
    Experimental stuff

    Inputs:
        - video_attention_split_steps (str) (default: '')
          Steps to split self attention when using multiple prompts
        - cfg_zero_star (bool) (default: False)
          https://github.com/WeichenFan/CFG-Zero-star
        - use_zero_init (bool) (default: False)
        - zero_star_steps (int) (default: 0)
          Steps to split self attention when using multiple prompts
        - use_fresca (bool) (default: False)
          https://github.com/WikiChao/FreSca
        - fresca_scale_low (float) (default: 1.0)
        - fresca_scale_high (float) (default: 1.25)
        - fresca_freq_cutoff (int) (default: 20)

    Outputs:
        - exp_args (Any)
    """
    _original_name: str = 'WanVideoExperimentalArgs'

    def __init__(self, video_attention_split_steps: str = '', cfg_zero_star: bool = False, use_zero_init: bool = False, zero_star_steps: int = 0, use_fresca: bool = False, fresca_scale_low: float = 1.0, fresca_scale_high: float = 1.25, fresca_freq_cutoff: int = 20):
        super().__init__(**{"video_attention_split_steps": video_attention_split_steps, "cfg_zero_star": cfg_zero_star, "use_zero_init": use_zero_init, "zero_star_steps": zero_star_steps, "use_fresca": use_fresca, "fresca_scale_low": fresca_scale_low, "fresca_scale_high": fresca_scale_high, "fresca_freq_cutoff": fresca_freq_cutoff})
        self.inputs = WanVideoExperimentalArgsInputs(self)
        self.outputs = WanVideoExperimentalArgsOutputs(self)
