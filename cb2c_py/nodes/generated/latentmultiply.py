
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LatentMultiply
class LatentMultiplyInputs(InputSlots):
    samples: Slot[Latent]
    multiplier: Slot[float]
    def __init__(self, node: "Node"):
        self.samples = Slot[Latent](node, "samples", 'LATENT')
        self.multiplier = Slot[float](node, "multiplier", 'FLOAT')

class LatentMultiplyOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class LatentMultiply(Node[LatentMultiplyInputs, LatentMultiplyOutputs]):
    """
    Original name: LatentMultiply
    No description available.
    """
    _original_name: str = 'LatentMultiply'

    def __init__(self, samples: Slot[Latent], multiplier: float = 1.0):
        super().__init__(**{"samples": samples, "multiplier": multiplier})
        self.inputs = LatentMultiplyInputs(self)
        self.outputs = LatentMultiplyOutputs(self)
