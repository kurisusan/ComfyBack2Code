
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoATITracksVisualize
class WanVideoATITracksVisualizeInputs(InputSlots):
    images: Slot[Image]
    tracks: Slot[str]
    min_radius: Slot[int]
    max_radius: Slot[int]
    max_retain: Slot[int]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.tracks = Slot[str](node, "tracks", 'STRING')
        self.min_radius = Slot[int](node, "min_radius", 'INT')
        self.max_radius = Slot[int](node, "max_radius", 'INT')
        self.max_retain = Slot[int](node, "max_retain", 'INT')

class WanVideoATITracksVisualizeOutputs(OutputSlots):
    images: Slot[Image]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')

class WanVideoATITracksVisualize(Node[WanVideoATITracksVisualizeInputs, WanVideoATITracksVisualizeOutputs]):
    """
    Original name: WanVideoATITracksVisualize
    No description available.
    """
    _original_name: str = 'WanVideoATITracksVisualize'

    def __init__(self, images: Slot[Image], tracks: str, min_radius: int = 1, max_radius: int = 6, max_retain: int = 50):
        super().__init__(**{"images": images, "tracks": tracks, "min_radius": min_radius, "max_radius": max_radius, "max_retain": max_retain})
        self.inputs = WanVideoATITracksVisualizeInputs(self)
        self.outputs = WanVideoATITracksVisualizeOutputs(self)
