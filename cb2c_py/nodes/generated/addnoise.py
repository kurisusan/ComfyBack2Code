
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for AddNoise
class AddNoiseInputs(InputSlots):
    model: Slot[Model]
    noise: Slot[Any]
    sigmas: Slot[Any]
    latent_image: Slot[Latent]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.noise = Slot[Any](node, "noise", 'NOISE')
        self.sigmas = Slot[Any](node, "sigmas", 'SIGMAS')
        self.latent_image = Slot[Latent](node, "latent_image", 'LATENT')

class AddNoiseOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class AddNoise(Node[AddNoiseInputs, AddNoiseOutputs]):
    """
    Original name: AddNoise
    No description available.
    """
    _original_name: str = 'AddNoise'

    def __init__(self, model: Slot[Model], noise: Slot[Any], sigmas: Slot[Any], latent_image: Slot[Latent]):
        super().__init__(**{"model": model, "noise": noise, "sigmas": sigmas, "latent_image": latent_image})
        self.inputs = AddNoiseInputs(self)
        self.outputs = AddNoiseOutputs(self)
