
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for KlingLipSyncAudioToVideoNode
class KlingLipSyncAudioToVideoNodeInputs(InputSlots):
    video: Slot[Any]
    audio: Slot[Any]
    voice_language: Slot[str]
    def __init__(self, node: "Node"):
        self.video = Slot[Any](node, "video", 'VIDEO')
        self.audio = Slot[Any](node, "audio", 'AUDIO')
        self.voice_language = Slot[str](node, "voice_language", 'COMBO')

class KlingLipSyncAudioToVideoNodeOutputs(OutputSlots):
    video: Slot[Any]
    video_id: Slot[str]
    duration: Slot[str]
    def __init__(self, node: "Node"):
        self.video = Slot[Any](node, "VIDEO", 'VIDEO')
        self.video_id = Slot[str](node, "video_id", 'STRING')
        self.duration = Slot[str](node, "duration", 'STRING')

class KlingLipSyncAudioToVideoNode(Node[KlingLipSyncAudioToVideoNodeInputs, KlingLipSyncAudioToVideoNodeOutputs]):
    """
    Original name: KlingLipSyncAudioToVideoNode
    No description available.
    """
    _original_name: str = 'KlingLipSyncAudioToVideoNode'

    def __init__(self, video: Slot[Any], audio: Slot[Any], voice_language: str = 'en'):
        super().__init__(**{"video": video, "audio": audio, "voice_language": voice_language})
        self.inputs = KlingLipSyncAudioToVideoNodeInputs(self)
        self.outputs = KlingLipSyncAudioToVideoNodeOutputs(self)
