
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_LoadImagePath
class VHS_LoadImagePathInputs(InputSlots):
    image: Slot[str]
    custom_width: Slot[int]
    custom_height: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[str](node, "image", 'STRING')
        self.custom_width = Slot[int](node, "custom_width", 'INT')
        self.custom_height = Slot[int](node, "custom_height", 'INT')

class VHS_LoadImagePathOutputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "mask", 'MASK')

class VHS_LoadImagePath(Node[VHS_LoadImagePathInputs, VHS_LoadImagePathOutputs]):
    """
    Original name: VHS_LoadImagePath
    No description available.
    """
    _original_name: str = 'VHS_LoadImagePath'

    def __init__(self, image: str, custom_width: int = 0, custom_height: int = 0):
        super().__init__(**{"image": image, "custom_width": custom_width, "custom_height": custom_height})
        self.inputs = VHS_LoadImagePathInputs(self)
        self.outputs = VHS_LoadImagePathOutputs(self)
