
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_AudioToVHSAudio
class VHS_AudioToVHSAudioInputs(InputSlots):
    audio: Slot[Any]
    def __init__(self, node: "Node"):
        self.audio = Slot[Any](node, "audio", 'AUDIO')

class VHS_AudioToVHSAudioOutputs(OutputSlots):
    vhs_audio: Slot[Any]
    def __init__(self, node: "Node"):
        self.vhs_audio = Slot[Any](node, "vhs_audio", 'VHS_AUDIO')

class VHS_AudioToVHSAudio(Node[VHS_AudioToVHSAudioInputs, VHS_AudioToVHSAudioOutputs]):
    """
    Original name: VHS_AudioToVHSAudio
    Category: Video Helper Suite ðŸŽ¥ðŸ…¥ðŸ…—ðŸ…¢/audio
    Audio to legacy VHS_AUDIO ðŸŽ¥ðŸ…¥ðŸ…—ðŸ…¢<div style="font-size: 0.8em"><div id=VHS_shortdesc>utility function for compatibility with external nodes</div></div><div style="font-size: 0.8em">VHS used to use an internal VHS_AUDIO format for routing audio between inputs and outputs. This format was intended to only be used internally and was designed with a focus on performance over ease of use. Since ComfyUI now has an internal AUDIO format, VHS now uses this format. However, some custom node packs were made that are external to both ComfyUI and VHS that use VHS_AUDIO. This node was added so that those external nodes can still function</div><div style="font-size: 0.8em"><div vhs_title="Inputs" style="display: flex; font-size: 0.8em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">Inputs: <div vhs_title="audio" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">audio: An input in the standardized AUDIO format</div></div></div></div><div vhs_title="Outputs" style="display: flex; font-size: 0.8em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">Outputs: <div vhs_title="vhs_audio" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">vhs_audio: An output in the legacy VHS_AUDIO format for use with external nodes</div></div></div></div></div>

    Inputs:
        - audio (Any)

    Outputs:
        - vhs_audio (Any)
    """
    _original_name: str = 'VHS_AudioToVHSAudio'

    def __init__(self, audio: Slot[Any]):
        super().__init__(**{"audio": audio})
        self.inputs = VHS_AudioToVHSAudioInputs(self)
        self.outputs = VHS_AudioToVHSAudioOutputs(self)
