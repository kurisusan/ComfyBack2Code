
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for NormalizedAmplitudeToMask
class NormalizedAmplitudeToMaskInputs(InputSlots):
    normalized_amp: Slot[Any]
    width: Slot[int]
    height: Slot[int]
    frame_offset: Slot[int]
    location_x: Slot[int]
    location_y: Slot[int]
    size: Slot[int]
    shape: Slot[str]
    color: Slot[str]
    def __init__(self, node: "Node"):
        self.normalized_amp = Slot[Any](node, "normalized_amp", 'NORMALIZED_AMPLITUDE')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.frame_offset = Slot[int](node, "frame_offset", 'INT')
        self.location_x = Slot[int](node, "location_x", 'INT')
        self.location_y = Slot[int](node, "location_y", 'INT')
        self.size = Slot[int](node, "size", 'INT')
        self.shape = Slot[str](node, "shape", ['none', 'circle', 'square', 'triangle'])
        self.color = Slot[str](node, "color", ['white', 'amplitude'])

class NormalizedAmplitudeToMaskOutputs(OutputSlots):
    mask: Slot[Any]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "MASK", 'MASK')

class NormalizedAmplitudeToMask(Node[NormalizedAmplitudeToMaskInputs, NormalizedAmplitudeToMaskOutputs]):
    """
    Original name: NormalizedAmplitudeToMask
    No description available.
    """
    _original_name: str = 'NormalizedAmplitudeToMask'

    def __init__(self, normalized_amp: Slot[Any], width: int = 512, height: int = 512, frame_offset: int = 0, location_x: int = 256, location_y: int = 256, size: int = 128, shape: str = 'none', color: str = 'amplitude'):
        super().__init__(**{"normalized_amp": normalized_amp, "width": width, "height": height, "frame_offset": frame_offset, "location_x": location_x, "location_y": location_y, "size": size, "shape": shape, "color": color})
        self.inputs = NormalizedAmplitudeToMaskInputs(self)
        self.outputs = NormalizedAmplitudeToMaskOutputs(self)
