
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for Sleep
class SleepInputs(InputSlots):
    input: Slot[Any]
    minutes: Slot[int]
    seconds: Slot[float]
    def __init__(self, node: "Node"):
        self.input = Slot[Any](node, "input", '*')
        self.minutes = Slot[int](node, "minutes", 'INT')
        self.seconds = Slot[float](node, "seconds", 'FLOAT')

class SleepOutputs(OutputSlots):
    _: Slot[Any]
    def __init__(self, node: "Node"):
        self._ = Slot[Any](node, "*", '*')

class Sleep(Node[SleepInputs, SleepOutputs]):
    """
    Original name: Sleep
    No description available.
    """
    _original_name: str = 'Sleep'

    def __init__(self, input: Slot[Any], minutes: int = 0, seconds: float = 0.0):
        super().__init__(**{"input": input, "minutes": minutes, "seconds": seconds})
        self.inputs = SleepInputs(self)
        self.outputs = SleepOutputs(self)
