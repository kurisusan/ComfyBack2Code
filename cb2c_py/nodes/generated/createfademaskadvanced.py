
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CreateFadeMaskAdvanced
class CreateFadeMaskAdvancedInputs(InputSlots):
    points_string: Slot[str]
    invert: Slot[bool]
    frames: Slot[int]
    width: Slot[int]
    height: Slot[int]
    interpolation: Slot[str]
    def __init__(self, node: "Node"):
        self.points_string = Slot[str](node, "points_string", 'STRING')
        self.invert = Slot[bool](node, "invert", 'BOOLEAN')
        self.frames = Slot[int](node, "frames", 'INT')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.interpolation = Slot[str](node, "interpolation", ['linear', 'ease_in', 'ease_out', 'ease_in_out', 'none', 'default_to_black'])

class CreateFadeMaskAdvancedOutputs(OutputSlots):
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "MASK", 'MASK')

class CreateFadeMaskAdvanced(Node[CreateFadeMaskAdvancedInputs, CreateFadeMaskAdvancedOutputs]):
    """
    Original name: CreateFadeMaskAdvanced
    Category: KJNodes/masking/generate
    
Create a batch of masks interpolated between given frames and values. 
Uses same syntax as Fizz' BatchValueSchedule.
First value is the frame index (not that this starts from 0, not 1) 
and the second value inside the brackets is the float value of the mask in range 0.0 - 1.0  

For example the default values:  
0:(0.0)  
7:(1.0)  
15:(0.0)  
  
Would create a mask batch fo 16 frames, starting from black, 
interpolating with the chosen curve to fully white at the 8th frame, 
and interpolating from that to fully black at the 16th frame.


    Inputs:
        - points_string (str) (default: '0:(0.0),\n7:(1.0),\n15:(0.0)\n')
        - invert (bool) (default: False)
        - frames (int) (default: 16)
        - width (int) (default: 512)
        - height (int) (default: 512)
        - interpolation (str)

    Outputs:
        - mask (Image)
    """
    _original_name: str = 'CreateFadeMaskAdvanced'

    def __init__(self, interpolation: str, points_string: str = '0:(0.0),\n7:(1.0),\n15:(0.0)\n', invert: bool = False, frames: int = 16, width: int = 512, height: int = 512):
        super().__init__(**{"points_string": points_string, "invert": invert, "frames": frames, "width": width, "height": height, "interpolation": interpolation})
        self.inputs = CreateFadeMaskAdvancedInputs(self)
        self.outputs = CreateFadeMaskAdvancedOutputs(self)
