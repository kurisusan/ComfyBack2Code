
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for Hunyuan3Dv2Conditioning
class Hunyuan3Dv2ConditioningInputs(InputSlots):
    clip_vision_output: Slot[Any]
    def __init__(self, node: "Node"):
        self.clip_vision_output = Slot[Any](node, "clip_vision_output", 'CLIP_VISION_OUTPUT')

class Hunyuan3Dv2ConditioningOutputs(OutputSlots):
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "negative", 'CONDITIONING')

class Hunyuan3Dv2Conditioning(Node[Hunyuan3Dv2ConditioningInputs, Hunyuan3Dv2ConditioningOutputs]):
    """
    Original name: Hunyuan3Dv2Conditioning
    Category: conditioning/video_models
    

    Inputs:
        - clip_vision_output (Any)

    Outputs:
        - positive (Conditioning)
        - negative (Conditioning)
    """
    _original_name: str = 'Hunyuan3Dv2Conditioning'

    def __init__(self, clip_vision_output: Slot[Any]):
        super().__init__(**{"clip_vision_output": clip_vision_output})
        self.inputs = Hunyuan3Dv2ConditioningInputs(self)
        self.outputs = Hunyuan3Dv2ConditioningOutputs(self)
