
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for SplitImageChannels
class SplitImageChannelsInputs(InputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')

class SplitImageChannelsOutputs(OutputSlots):
    red: Slot[Image]
    green: Slot[Image]
    blue: Slot[Image]
    mask: Slot[Any]
    def __init__(self, node: "Node"):
        self.red = Slot[Image](node, "red", 'IMAGE')
        self.green = Slot[Image](node, "green", 'IMAGE')
        self.blue = Slot[Image](node, "blue", 'IMAGE')
        self.mask = Slot[Any](node, "mask", 'MASK')

class SplitImageChannels(Node[SplitImageChannelsInputs, SplitImageChannelsOutputs]):
    """
    Original name: SplitImageChannels
    No description available.
    """
    _original_name: str = 'SplitImageChannels'

    def __init__(self, image: Slot[Image]):
        super().__init__(**{"image": image})
        self.inputs = SplitImageChannelsInputs(self)
        self.outputs = SplitImageChannelsOutputs(self)
