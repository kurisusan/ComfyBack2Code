
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for RecraftStyleV3LogoRaster
class RecraftStyleV3LogoRasterInputs(InputSlots):
    substyle: Slot[str]
    def __init__(self, node: "Node"):
        self.substyle = Slot[str](node, "substyle", ['emblem_graffiti', 'emblem_pop_art', 'emblem_punk', 'emblem_stamp', 'emblem_vintage'])

class RecraftStyleV3LogoRasterOutputs(OutputSlots):
    recraft_style: Slot[Any]
    def __init__(self, node: "Node"):
        self.recraft_style = Slot[Any](node, "recraft_style", 'RECRAFT_V3_STYLE')

class RecraftStyleV3LogoRaster(Node[RecraftStyleV3LogoRasterInputs, RecraftStyleV3LogoRasterOutputs]):
    """
    Original name: RecraftStyleV3LogoRaster
    No description available.
    """
    _original_name: str = 'RecraftStyleV3LogoRaster'

    def __init__(self, substyle: str):
        super().__init__(**{"substyle": substyle})
        self.inputs = RecraftStyleV3LogoRasterInputs(self)
        self.outputs = RecraftStyleV3LogoRasterOutputs(self)
