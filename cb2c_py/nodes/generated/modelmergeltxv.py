
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ModelMergeLTXV
class ModelMergeLTXVInputs(InputSlots):
    model1: Slot[Model]
    model2: Slot[Model]
    patchify_proj_: Slot[float]
    adaln_single_: Slot[float]
    caption_projection_: Slot[float]
    transformer_blocks_0_: Slot[float]
    transformer_blocks_1_: Slot[float]
    transformer_blocks_2_: Slot[float]
    transformer_blocks_3_: Slot[float]
    transformer_blocks_4_: Slot[float]
    transformer_blocks_5_: Slot[float]
    transformer_blocks_6_: Slot[float]
    transformer_blocks_7_: Slot[float]
    transformer_blocks_8_: Slot[float]
    transformer_blocks_9_: Slot[float]
    transformer_blocks_10_: Slot[float]
    transformer_blocks_11_: Slot[float]
    transformer_blocks_12_: Slot[float]
    transformer_blocks_13_: Slot[float]
    transformer_blocks_14_: Slot[float]
    transformer_blocks_15_: Slot[float]
    transformer_blocks_16_: Slot[float]
    transformer_blocks_17_: Slot[float]
    transformer_blocks_18_: Slot[float]
    transformer_blocks_19_: Slot[float]
    transformer_blocks_20_: Slot[float]
    transformer_blocks_21_: Slot[float]
    transformer_blocks_22_: Slot[float]
    transformer_blocks_23_: Slot[float]
    transformer_blocks_24_: Slot[float]
    transformer_blocks_25_: Slot[float]
    transformer_blocks_26_: Slot[float]
    transformer_blocks_27_: Slot[float]
    scale_shift_table: Slot[float]
    proj_out_: Slot[float]
    def __init__(self, node: "Node"):
        self.model1 = Slot[Model](node, "model1", 'MODEL')
        self.model2 = Slot[Model](node, "model2", 'MODEL')
        self.patchify_proj_ = Slot[float](node, "patchify_proj_", 'FLOAT')
        self.adaln_single_ = Slot[float](node, "adaln_single_", 'FLOAT')
        self.caption_projection_ = Slot[float](node, "caption_projection_", 'FLOAT')
        self.transformer_blocks_0_ = Slot[float](node, "transformer_blocks_0_", 'FLOAT')
        self.transformer_blocks_1_ = Slot[float](node, "transformer_blocks_1_", 'FLOAT')
        self.transformer_blocks_2_ = Slot[float](node, "transformer_blocks_2_", 'FLOAT')
        self.transformer_blocks_3_ = Slot[float](node, "transformer_blocks_3_", 'FLOAT')
        self.transformer_blocks_4_ = Slot[float](node, "transformer_blocks_4_", 'FLOAT')
        self.transformer_blocks_5_ = Slot[float](node, "transformer_blocks_5_", 'FLOAT')
        self.transformer_blocks_6_ = Slot[float](node, "transformer_blocks_6_", 'FLOAT')
        self.transformer_blocks_7_ = Slot[float](node, "transformer_blocks_7_", 'FLOAT')
        self.transformer_blocks_8_ = Slot[float](node, "transformer_blocks_8_", 'FLOAT')
        self.transformer_blocks_9_ = Slot[float](node, "transformer_blocks_9_", 'FLOAT')
        self.transformer_blocks_10_ = Slot[float](node, "transformer_blocks_10_", 'FLOAT')
        self.transformer_blocks_11_ = Slot[float](node, "transformer_blocks_11_", 'FLOAT')
        self.transformer_blocks_12_ = Slot[float](node, "transformer_blocks_12_", 'FLOAT')
        self.transformer_blocks_13_ = Slot[float](node, "transformer_blocks_13_", 'FLOAT')
        self.transformer_blocks_14_ = Slot[float](node, "transformer_blocks_14_", 'FLOAT')
        self.transformer_blocks_15_ = Slot[float](node, "transformer_blocks_15_", 'FLOAT')
        self.transformer_blocks_16_ = Slot[float](node, "transformer_blocks_16_", 'FLOAT')
        self.transformer_blocks_17_ = Slot[float](node, "transformer_blocks_17_", 'FLOAT')
        self.transformer_blocks_18_ = Slot[float](node, "transformer_blocks_18_", 'FLOAT')
        self.transformer_blocks_19_ = Slot[float](node, "transformer_blocks_19_", 'FLOAT')
        self.transformer_blocks_20_ = Slot[float](node, "transformer_blocks_20_", 'FLOAT')
        self.transformer_blocks_21_ = Slot[float](node, "transformer_blocks_21_", 'FLOAT')
        self.transformer_blocks_22_ = Slot[float](node, "transformer_blocks_22_", 'FLOAT')
        self.transformer_blocks_23_ = Slot[float](node, "transformer_blocks_23_", 'FLOAT')
        self.transformer_blocks_24_ = Slot[float](node, "transformer_blocks_24_", 'FLOAT')
        self.transformer_blocks_25_ = Slot[float](node, "transformer_blocks_25_", 'FLOAT')
        self.transformer_blocks_26_ = Slot[float](node, "transformer_blocks_26_", 'FLOAT')
        self.transformer_blocks_27_ = Slot[float](node, "transformer_blocks_27_", 'FLOAT')
        self.scale_shift_table = Slot[float](node, "scale_shift_table", 'FLOAT')
        self.proj_out_ = Slot[float](node, "proj_out_", 'FLOAT')

class ModelMergeLTXVOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class ModelMergeLTXV(Node[ModelMergeLTXVInputs, ModelMergeLTXVOutputs]):
    """
    Original name: ModelMergeLTXV
    No description available.
    """
    _original_name: str = 'ModelMergeLTXV'

    def __init__(self, model1: Slot[Model], model2: Slot[Model], patchify_proj_: float = 1.0, adaln_single_: float = 1.0, caption_projection_: float = 1.0, transformer_blocks_0_: float = 1.0, transformer_blocks_1_: float = 1.0, transformer_blocks_2_: float = 1.0, transformer_blocks_3_: float = 1.0, transformer_blocks_4_: float = 1.0, transformer_blocks_5_: float = 1.0, transformer_blocks_6_: float = 1.0, transformer_blocks_7_: float = 1.0, transformer_blocks_8_: float = 1.0, transformer_blocks_9_: float = 1.0, transformer_blocks_10_: float = 1.0, transformer_blocks_11_: float = 1.0, transformer_blocks_12_: float = 1.0, transformer_blocks_13_: float = 1.0, transformer_blocks_14_: float = 1.0, transformer_blocks_15_: float = 1.0, transformer_blocks_16_: float = 1.0, transformer_blocks_17_: float = 1.0, transformer_blocks_18_: float = 1.0, transformer_blocks_19_: float = 1.0, transformer_blocks_20_: float = 1.0, transformer_blocks_21_: float = 1.0, transformer_blocks_22_: float = 1.0, transformer_blocks_23_: float = 1.0, transformer_blocks_24_: float = 1.0, transformer_blocks_25_: float = 1.0, transformer_blocks_26_: float = 1.0, transformer_blocks_27_: float = 1.0, scale_shift_table: float = 1.0, proj_out_: float = 1.0):
        super().__init__(**{"model1": model1, "model2": model2, "patchify_proj.": patchify_proj_, "adaln_single.": adaln_single_, "caption_projection.": caption_projection_, "transformer_blocks.0.": transformer_blocks_0_, "transformer_blocks.1.": transformer_blocks_1_, "transformer_blocks.2.": transformer_blocks_2_, "transformer_blocks.3.": transformer_blocks_3_, "transformer_blocks.4.": transformer_blocks_4_, "transformer_blocks.5.": transformer_blocks_5_, "transformer_blocks.6.": transformer_blocks_6_, "transformer_blocks.7.": transformer_blocks_7_, "transformer_blocks.8.": transformer_blocks_8_, "transformer_blocks.9.": transformer_blocks_9_, "transformer_blocks.10.": transformer_blocks_10_, "transformer_blocks.11.": transformer_blocks_11_, "transformer_blocks.12.": transformer_blocks_12_, "transformer_blocks.13.": transformer_blocks_13_, "transformer_blocks.14.": transformer_blocks_14_, "transformer_blocks.15.": transformer_blocks_15_, "transformer_blocks.16.": transformer_blocks_16_, "transformer_blocks.17.": transformer_blocks_17_, "transformer_blocks.18.": transformer_blocks_18_, "transformer_blocks.19.": transformer_blocks_19_, "transformer_blocks.20.": transformer_blocks_20_, "transformer_blocks.21.": transformer_blocks_21_, "transformer_blocks.22.": transformer_blocks_22_, "transformer_blocks.23.": transformer_blocks_23_, "transformer_blocks.24.": transformer_blocks_24_, "transformer_blocks.25.": transformer_blocks_25_, "transformer_blocks.26.": transformer_blocks_26_, "transformer_blocks.27.": transformer_blocks_27_, "scale_shift_table": scale_shift_table, "proj_out.": proj_out_})
        self.inputs = ModelMergeLTXVInputs(self)
        self.outputs = ModelMergeLTXVOutputs(self)
