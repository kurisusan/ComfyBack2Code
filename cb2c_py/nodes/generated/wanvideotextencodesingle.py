
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoTextEncodeSingle
class WanVideoTextEncodeSingleInputs(InputSlots):
    t5: Slot[Any]
    prompt: Slot[str]
    def __init__(self, node: "Node"):
        self.t5 = Slot[Any](node, "t5", 'WANTEXTENCODER')
        self.prompt = Slot[str](node, "prompt", 'STRING')

class WanVideoTextEncodeSingleOutputs(OutputSlots):
    text_embeds: Slot[Any]
    def __init__(self, node: "Node"):
        self.text_embeds = Slot[Any](node, "text_embeds", 'WANVIDEOTEXTEMBEDS')

class WanVideoTextEncodeSingle(Node[WanVideoTextEncodeSingleInputs, WanVideoTextEncodeSingleOutputs]):
    """
    Original name: WanVideoTextEncodeSingle
    No description available.
    """
    _original_name: str = 'WanVideoTextEncodeSingle'

    def __init__(self, t5: Slot[Any], prompt: str = ''):
        super().__init__(**{"t5": t5, "prompt": prompt})
        self.inputs = WanVideoTextEncodeSingleInputs(self)
        self.outputs = WanVideoTextEncodeSingleOutputs(self)
