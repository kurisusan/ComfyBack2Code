
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LTXVImgToVideo
class LTXVImgToVideoInputs(InputSlots):
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    vae: Slot[Vae]
    image: Slot[Image]
    width: Slot[int]
    height: Slot[int]
    length: Slot[int]
    batch_size: Slot[int]
    strength: Slot[float]
    def __init__(self, node: "Node"):
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "negative", 'CONDITIONING')
        self.vae = Slot[Vae](node, "vae", 'VAE')
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.length = Slot[int](node, "length", 'INT')
        self.batch_size = Slot[int](node, "batch_size", 'INT')
        self.strength = Slot[float](node, "strength", 'FLOAT')

class LTXVImgToVideoOutputs(OutputSlots):
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "negative", 'CONDITIONING')
        self.latent = Slot[Latent](node, "latent", 'LATENT')

class LTXVImgToVideo(Node[LTXVImgToVideoInputs, LTXVImgToVideoOutputs]):
    """
    Original name: LTXVImgToVideo
    Category: conditioning/video_models
    

    Inputs:
        - positive (Conditioning)
        - negative (Conditioning)
        - vae (Vae)
        - image (Image)
        - width (int) (default: 768)
        - height (int) (default: 512)
        - length (int) (default: 97)
        - batch_size (int) (default: 1)
        - strength (float) (default: 1.0)

    Outputs:
        - positive (Conditioning)
        - negative (Conditioning)
        - latent (Latent)
    """
    _original_name: str = 'LTXVImgToVideo'

    def __init__(self, positive: Slot[Conditioning], negative: Slot[Conditioning], vae: Slot[Vae], image: Slot[Image], width: int = 768, height: int = 512, length: int = 97, batch_size: int = 1, strength: float = 1.0):
        super().__init__(**{"positive": positive, "negative": negative, "vae": vae, "image": image, "width": width, "height": height, "length": length, "batch_size": batch_size, "strength": strength})
        self.inputs = LTXVImgToVideoInputs(self)
        self.outputs = LTXVImgToVideoOutputs(self)
