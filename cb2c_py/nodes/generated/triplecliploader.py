
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for TripleCLIPLoader
class TripleCLIPLoaderInputs(InputSlots):
    clip_name1: Slot[str]
    clip_name2: Slot[str]
    clip_name3: Slot[str]
    def __init__(self, node: "Node"):
        self.clip_name1 = Slot[str](node, "clip_name1", [])
        self.clip_name2 = Slot[str](node, "clip_name2", [])
        self.clip_name3 = Slot[str](node, "clip_name3", [])

class TripleCLIPLoaderOutputs(OutputSlots):
    clip: Slot[Clip]
    def __init__(self, node: "Node"):
        self.clip = Slot[Clip](node, "CLIP", 'CLIP')

class TripleCLIPLoader(Node[TripleCLIPLoaderInputs, TripleCLIPLoaderOutputs]):
    """
    Original name: TripleCLIPLoader
    No description available.
    """
    _original_name: str = 'TripleCLIPLoader'

    def __init__(self, clip_name1: str, clip_name2: str, clip_name3: str):
        super().__init__(**{"clip_name1": clip_name1, "clip_name2": clip_name2, "clip_name3": clip_name3})
        self.inputs = TripleCLIPLoaderInputs(self)
        self.outputs = TripleCLIPLoaderOutputs(self)
