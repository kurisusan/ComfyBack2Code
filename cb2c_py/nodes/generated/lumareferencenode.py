
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LumaReferenceNode
class LumaReferenceNodeInputs(InputSlots):
    image: Slot[Image]
    weight: Slot[float]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.weight = Slot[float](node, "weight", 'FLOAT')

class LumaReferenceNodeOutputs(OutputSlots):
    luma_ref: Slot[Any]
    def __init__(self, node: "Node"):
        self.luma_ref = Slot[Any](node, "luma_ref", 'LUMA_REF')

class LumaReferenceNode(Node[LumaReferenceNodeInputs, LumaReferenceNodeOutputs]):
    """
    Original name: LumaReferenceNode
    No description available.
    """
    _original_name: str = 'LumaReferenceNode'

    def __init__(self, image: Slot[Image], weight: float = 1.0):
        super().__init__(**{"image": image, "weight": weight})
        self.inputs = LumaReferenceNodeInputs(self)
        self.outputs = LumaReferenceNodeOutputs(self)
