
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for AppendInstanceDiffusionTracking
class AppendInstanceDiffusionTrackingInputs(InputSlots):
    tracking_1: Slot[Any]
    tracking_2: Slot[Any]
    def __init__(self, node: "Node"):
        self.tracking_1 = Slot[Any](node, "tracking_1", 'TRACKING')
        self.tracking_2 = Slot[Any](node, "tracking_2", 'TRACKING')

class AppendInstanceDiffusionTrackingOutputs(OutputSlots):
    tracking: Slot[Any]
    prompt: Slot[str]
    def __init__(self, node: "Node"):
        self.tracking = Slot[Any](node, "tracking", 'TRACKING')
        self.prompt = Slot[str](node, "prompt", 'STRING')

class AppendInstanceDiffusionTracking(Node[AppendInstanceDiffusionTrackingInputs, AppendInstanceDiffusionTrackingOutputs]):
    """
    Original name: AppendInstanceDiffusionTracking
    No description available.
    """
    _original_name: str = 'AppendInstanceDiffusionTracking'

    def __init__(self, tracking_1: Slot[Any], tracking_2: Slot[Any]):
        super().__init__(**{"tracking_1": tracking_1, "tracking_2": tracking_2})
        self.inputs = AppendInstanceDiffusionTrackingInputs(self)
        self.outputs = AppendInstanceDiffusionTrackingOutputs(self)
