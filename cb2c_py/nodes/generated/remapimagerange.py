
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for RemapImageRange
class RemapImageRangeInputs(InputSlots):
    image: Slot[Image]
    min: Slot[float]
    max: Slot[float]
    clamp: Slot[bool]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.min = Slot[float](node, "min", 'FLOAT')
        self.max = Slot[float](node, "max", 'FLOAT')
        self.clamp = Slot[bool](node, "clamp", 'BOOLEAN')

class RemapImageRangeOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class RemapImageRange(Node[RemapImageRangeInputs, RemapImageRangeOutputs]):
    """
    Original name: RemapImageRange
    No description available.
    """
    _original_name: str = 'RemapImageRange'

    def __init__(self, image: Slot[Image], min: float = 0.0, max: float = 1.0, clamp: bool = True):
        super().__init__(**{"image": image, "min": min, "max": max, "clamp": clamp})
        self.inputs = RemapImageRangeInputs(self)
        self.outputs = RemapImageRangeOutputs(self)
