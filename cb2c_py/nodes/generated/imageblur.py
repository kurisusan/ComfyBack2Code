
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageBlur
class ImageBlurInputs(InputSlots):
    image: Slot[Image]
    blur_radius: Slot[int]
    sigma: Slot[float]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.blur_radius = Slot[int](node, "blur_radius", 'INT')
        self.sigma = Slot[float](node, "sigma", 'FLOAT')

class ImageBlurOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageBlur(Node[ImageBlurInputs, ImageBlurOutputs]):
    """
    Original name: ImageBlur
    Category: image/postprocessing
    

    Inputs:
        - image (Image)
        - blur_radius (int) (default: 1)
        - sigma (float) (default: 1.0)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'ImageBlur'

    def __init__(self, image: Slot[Image], blur_radius: int = 1, sigma: float = 1.0):
        super().__init__(**{"image": image, "blur_radius": blur_radius, "sigma": sigma})
        self.inputs = ImageBlurInputs(self)
        self.outputs = ImageBlurOutputs(self)
