
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for DownloadAndLoadCLIPSeg
class DownloadAndLoadCLIPSegInputs(InputSlots):
    model: Slot[str]
    def __init__(self, node: "Node"):
        self.model = Slot[str](node, "model", ['Kijai/clipseg-rd64-refined-fp16', 'CIDAS/clipseg-rd64-refined'])

class DownloadAndLoadCLIPSegOutputs(OutputSlots):
    clipseg_model: Slot[Any]
    def __init__(self, node: "Node"):
        self.clipseg_model = Slot[Any](node, "clipseg_model", 'CLIPSEGMODEL')

class DownloadAndLoadCLIPSeg(Node[DownloadAndLoadCLIPSegInputs, DownloadAndLoadCLIPSegOutputs]):
    """
    Original name: DownloadAndLoadCLIPSeg
    Category: KJNodes/masking
    
Downloads and loads CLIPSeg model with huggingface_hub,  
to ComfyUI/models/clip_seg


    Inputs:
        - model (str)

    Outputs:
        - clipseg_model (Any)
    """
    _original_name: str = 'DownloadAndLoadCLIPSeg'

    def __init__(self, model: str):
        super().__init__(**{"model": model})
        self.inputs = DownloadAndLoadCLIPSegInputs(self)
        self.outputs = DownloadAndLoadCLIPSegOutputs(self)
