
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class KlingCameraControlI2VNode(Node):
    """
    Original name: KlingCameraControlI2VNode
    No description available.
    """
    _inputs = {
    "start_frame": [
        "IMAGE",
        {
            "default": None,
            "tooltip": "Reference Image - URL or Base64 encoded string, cannot exceed 10MB, resolution not less than 300*300px, aspect ratio between 1:2.5 ~ 2.5:1. Base64 should not include data:image prefix."
        }
    ],
    "prompt": [
        "STRING",
        {
            "default": None,
            "tooltip": "Positive text prompt",
            "multiline": True
        }
    ],
    "negative_prompt": [
        "STRING",
        {
            "default": None,
            "tooltip": "Negative text prompt",
            "multiline": True
        }
    ],
    "cfg_scale": [
        "FLOAT",
        {
            "default": 0.75,
            "min": 0.0,
            "max": 1.0
        }
    ],
    "aspect_ratio": [
        "COMBO",
        {
            "options": [
                "16:9",
                "9:16",
                "1:1"
            ],
            "default": "16:9"
        }
    ],
    "camera_control": [
        "CAMERA_CONTROL",
        {
            "tooltip": "Can be created using the Kling Camera Controls node. Controls the camera movement and motion during the video generation."
        }
    ]
}
    _outputs = [
    "VIDEO",
    "STRING",
    "STRING"
]
    _original_name = "KlingCameraControlI2VNode"

    def __init__(self, camera_control, start_frame=None, prompt=None, negative_prompt=None, cfg_scale=0.75, aspect_ratio="16:9"):
        super().__init__(start_frame=start_frame, prompt=prompt, negative_prompt=negative_prompt, cfg_scale=cfg_scale, aspect_ratio=aspect_ratio, camera_control=camera_control)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
