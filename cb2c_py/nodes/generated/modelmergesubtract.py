
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ModelMergeSubtract
class ModelMergeSubtractInputs(InputSlots):
    model1: Slot[Model]
    model2: Slot[Model]
    multiplier: Slot[float]
    def __init__(self, node: "Node"):
        self.model1 = Slot[Model](node, "model1", 'MODEL')
        self.model2 = Slot[Model](node, "model2", 'MODEL')
        self.multiplier = Slot[float](node, "multiplier", 'FLOAT')

class ModelMergeSubtractOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class ModelMergeSubtract(Node[ModelMergeSubtractInputs, ModelMergeSubtractOutputs]):
    """
    Original name: ModelMergeSubtract
    No description available.
    """
    _original_name: str = 'ModelMergeSubtract'

    def __init__(self, model1: Slot[Model], model2: Slot[Model], multiplier: float = 1.0):
        super().__init__(**{"model1": model1, "model2": model2, "multiplier": multiplier})
        self.inputs = ModelMergeSubtractInputs(self)
        self.outputs = ModelMergeSubtractOutputs(self)
