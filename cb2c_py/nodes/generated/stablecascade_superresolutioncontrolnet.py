
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for StableCascade_SuperResolutionControlnet
class StableCascade_SuperResolutionControlnetInputs(InputSlots):
    image: Slot[Image]
    vae: Slot[Vae]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.vae = Slot[Vae](node, "vae", 'VAE')

class StableCascade_SuperResolutionControlnetOutputs(OutputSlots):
    controlnet_input: Slot[Image]
    stage_c: Slot[Latent]
    stage_b: Slot[Latent]
    def __init__(self, node: "Node"):
        self.controlnet_input = Slot[Image](node, "controlnet_input", 'IMAGE')
        self.stage_c = Slot[Latent](node, "stage_c", 'LATENT')
        self.stage_b = Slot[Latent](node, "stage_b", 'LATENT')

class StableCascade_SuperResolutionControlnet(Node[StableCascade_SuperResolutionControlnetInputs, StableCascade_SuperResolutionControlnetOutputs]):
    """
    Original name: StableCascade_SuperResolutionControlnet
    No description available.
    """
    _original_name: str = 'StableCascade_SuperResolutionControlnet'

    def __init__(self, image: Slot[Image], vae: Slot[Vae]):
        super().__init__(**{"image": image, "vae": vae})
        self.inputs = StableCascade_SuperResolutionControlnetInputs(self)
        self.outputs = StableCascade_SuperResolutionControlnetOutputs(self)
