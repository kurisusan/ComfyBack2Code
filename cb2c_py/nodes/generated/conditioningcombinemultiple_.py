
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ConditioningCombineMultiple_
class ConditioningCombineMultiple_Inputs(InputSlots):
    conditioning_1: Slot[Conditioning]
    conditioning_2: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning_1 = Slot[Conditioning](node, "conditioning_1", 'CONDITIONING')
        self.conditioning_2 = Slot[Conditioning](node, "conditioning_2", 'CONDITIONING')

class ConditioningCombineMultiple_Outputs(OutputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "CONDITIONING", 'CONDITIONING')

class ConditioningCombineMultiple_(Node[ConditioningCombineMultiple_Inputs, ConditioningCombineMultiple_Outputs]):
    """
    Original name: ConditioningCombineMultiple+
    No description available.
    """
    _original_name: str = 'ConditioningCombineMultiple+'

    def __init__(self, conditioning_1: Slot[Conditioning], conditioning_2: Slot[Conditioning]):
        super().__init__(**{"conditioning_1": conditioning_1, "conditioning_2": conditioning_2})
        self.inputs = ConditioningCombineMultiple_Inputs(self)
        self.outputs = ConditioningCombineMultiple_Outputs(self)
