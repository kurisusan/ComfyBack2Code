
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for VHS_BatchManager
class VHS_BatchManagerInputs(InputSlots):
    frames_per_batch: Slot[int]
    def __init__(self, node: "Node"):
        self.frames_per_batch = Slot[int](node, "frames_per_batch", 'INT')

class VHS_BatchManagerOutputs(OutputSlots):
    meta_batch: Slot[Any]
    def __init__(self, node: "Node"):
        self.meta_batch = Slot[Any](node, "meta_batch", 'VHS_BatchManager')

class VHS_BatchManager(Node[VHS_BatchManagerInputs, VHS_BatchManagerOutputs]):
    """
    Original name: VHS_BatchManager
    No description available.
    """
    _original_name: str = 'VHS_BatchManager'

    def __init__(self, frames_per_batch: int = 16):
        super().__init__(**{"frames_per_batch": frames_per_batch})
        self.inputs = VHS_BatchManagerInputs(self)
        self.outputs = VHS_BatchManagerOutputs(self)
