
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for BboxVisualize
class BboxVisualizeInputs(InputSlots):
    images: Slot[Image]
    bboxes: Slot[Any]
    line_width: Slot[int]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.bboxes = Slot[Any](node, "bboxes", 'BBOX')
        self.line_width = Slot[int](node, "line_width", 'INT')

class BboxVisualizeOutputs(OutputSlots):
    images: Slot[Image]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')

class BboxVisualize(Node[BboxVisualizeInputs, BboxVisualizeOutputs]):
    """
    Original name: BboxVisualize
    No description available.
    """
    _original_name: str = 'BboxVisualize'

    def __init__(self, images: Slot[Image], bboxes: Slot[Any], line_width: int = 1):
        super().__init__(**{"images": images, "bboxes": bboxes, "line_width": line_width})
        self.inputs = BboxVisualizeInputs(self)
        self.outputs = BboxVisualizeOutputs(self)
