
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for Image_or_Latent_Size__rgthree_
class Image_or_Latent_Size__rgthree_Inputs(InputSlots):

    def __init__(self, node: "Node"):
        pass

class Image_or_Latent_Size__rgthree_Outputs(OutputSlots):
    width: Slot[int]
    height: Slot[int]
    def __init__(self, node: "Node"):
        self.width = Slot[int](node, "WIDTH", 'INT')
        self.height = Slot[int](node, "HEIGHT", 'INT')

class Image_or_Latent_Size__rgthree_(Node[Image_or_Latent_Size__rgthree_Inputs, Image_or_Latent_Size__rgthree_Outputs]):
    """
    Original name: Image or Latent Size (rgthree)
    No description available.
    """
    _original_name: str = 'Image or Latent Size (rgthree)'

    def __init__(self, ):
        super().__init__(**{})
        self.inputs = Image_or_Latent_Size__rgthree_Inputs(self)
        self.outputs = Image_or_Latent_Size__rgthree_Outputs(self)
