
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_LoadVideo
class VHS_LoadVideoInputs(InputSlots):
    video: Slot[str]
    force_rate: Slot[Union[float, int]]
    custom_width: Slot[int]
    custom_height: Slot[int]
    frame_load_cap: Slot[int]
    skip_first_frames: Slot[int]
    select_every_nth: Slot[int]
    def __init__(self, node: "Node"):
        self.video = Slot[str](node, "video", [])
        self.force_rate = Slot[Union[float, int]](node, "force_rate", 'FLOAT')
        self.custom_width = Slot[int](node, "custom_width", 'INT')
        self.custom_height = Slot[int](node, "custom_height", 'INT')
        self.frame_load_cap = Slot[int](node, "frame_load_cap", 'INT')
        self.skip_first_frames = Slot[int](node, "skip_first_frames", 'INT')
        self.select_every_nth = Slot[int](node, "select_every_nth", 'INT')

class VHS_LoadVideoOutputs(OutputSlots):
    image: Slot[Image]
    frame_count: Slot[int]
    audio: Slot[Any]
    video_info: Slot[Any]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.frame_count = Slot[int](node, "frame_count", 'INT')
        self.audio = Slot[Any](node, "audio", 'AUDIO')
        self.video_info = Slot[Any](node, "video_info", 'VHS_VIDEOINFO')

class VHS_LoadVideo(Node[VHS_LoadVideoInputs, VHS_LoadVideoOutputs]):
    """
    Original name: VHS_LoadVideo
    No description available.
    """
    _original_name: str = 'VHS_LoadVideo'

    def __init__(self, video: str, force_rate: Union[float, int] = 0, custom_width: int = 0, custom_height: int = 0, frame_load_cap: int = 0, skip_first_frames: int = 0, select_every_nth: int = 1):
        super().__init__(**{"video": video, "force_rate": force_rate, "custom_width": custom_width, "custom_height": custom_height, "frame_load_cap": frame_load_cap, "skip_first_frames": skip_first_frames, "select_every_nth": select_every_nth})
        self.inputs = VHS_LoadVideoInputs(self)
        self.outputs = VHS_LoadVideoOutputs(self)
