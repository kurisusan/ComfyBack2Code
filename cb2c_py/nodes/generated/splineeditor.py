
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class SplineEditor(Node):
    """
    Original name: SplineEditor
    No description available.
    """
    _inputs = {
    "points_store": [
        "STRING",
        {
            "multiline": False
        }
    ],
    "coordinates": [
        "STRING",
        {
            "multiline": False
        }
    ],
    "mask_width": [
        "INT",
        {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 8
        }
    ],
    "mask_height": [
        "INT",
        {
            "default": 512,
            "min": 8,
            "max": 4096,
            "step": 8
        }
    ],
    "points_to_sample": [
        "INT",
        {
            "default": 16,
            "min": 2,
            "max": 1000,
            "step": 1
        }
    ],
    "sampling_method": [
        [
            "path",
            "time",
            "controlpoints",
            "speed"
        ],
        {
            "default": "time"
        }
    ],
    "interpolation": [
        [
            "cardinal",
            "monotone",
            "basis",
            "linear",
            "step-before",
            "step-after",
            "polar",
            "polar-reverse"
        ],
        {
            "default": "cardinal"
        }
    ],
    "tension": [
        "FLOAT",
        {
            "default": 0.5,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "repeat_output": [
        "INT",
        {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
        }
    ],
    "float_output_type": [
        [
            "list",
            "pandas series",
            "tensor"
        ],
        {
            "default": "list"
        }
    ]
}
    _outputs = [
    "MASK",
    "STRING",
    "FLOAT",
    "INT",
    "STRING"
]
    _original_name = "SplineEditor"

    def __init__(self, points_store, coordinates, mask_width=512, mask_height=512, points_to_sample=16, sampling_method="time", interpolation="cardinal", tension=0.5, repeat_output=1, float_output_type="list"):
        super().__init__(points_store=points_store, coordinates=coordinates, mask_width=mask_width, mask_height=mask_height, points_to_sample=points_to_sample, sampling_method=sampling_method, interpolation=interpolation, tension=tension, repeat_output=repeat_output, float_output_type=float_output_type)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
