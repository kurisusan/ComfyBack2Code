
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for SplineEditor
class SplineEditorInputs(InputSlots):
    points_store: Slot[str]
    coordinates: Slot[str]
    mask_width: Slot[int]
    mask_height: Slot[int]
    points_to_sample: Slot[int]
    sampling_method: Slot[str]
    interpolation: Slot[str]
    tension: Slot[float]
    repeat_output: Slot[int]
    float_output_type: Slot[str]
    def __init__(self, node: "Node"):
        self.points_store = Slot[str](node, "points_store", 'STRING')
        self.coordinates = Slot[str](node, "coordinates", 'STRING')
        self.mask_width = Slot[int](node, "mask_width", 'INT')
        self.mask_height = Slot[int](node, "mask_height", 'INT')
        self.points_to_sample = Slot[int](node, "points_to_sample", 'INT')
        self.sampling_method = Slot[str](node, "sampling_method", ['path', 'time', 'controlpoints', 'speed'])
        self.interpolation = Slot[str](node, "interpolation", ['cardinal', 'monotone', 'basis', 'linear', 'step-before', 'step-after', 'polar', 'polar-reverse'])
        self.tension = Slot[float](node, "tension", 'FLOAT')
        self.repeat_output = Slot[int](node, "repeat_output", 'INT')
        self.float_output_type = Slot[str](node, "float_output_type", ['list', 'pandas series', 'tensor'])

class SplineEditorOutputs(OutputSlots):
    mask: Slot[Any]
    coord_str: Slot[str]
    float: Slot[float]
    count: Slot[int]
    normalized_str: Slot[str]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "mask", 'MASK')
        self.coord_str = Slot[str](node, "coord_str", 'STRING')
        self.float = Slot[float](node, "float", 'FLOAT')
        self.count = Slot[int](node, "count", 'INT')
        self.normalized_str = Slot[str](node, "normalized_str", 'STRING')

class SplineEditor(Node[SplineEditorInputs, SplineEditorOutputs]):
    """
    Original name: SplineEditor
    No description available.
    """
    _original_name: str = 'SplineEditor'

    def __init__(self, points_store: str, coordinates: str, mask_width: int = 512, mask_height: int = 512, points_to_sample: int = 16, sampling_method: str = 'time', interpolation: str = 'cardinal', tension: float = 0.5, repeat_output: int = 1, float_output_type: str = 'list'):
        super().__init__(**{"points_store": points_store, "coordinates": coordinates, "mask_width": mask_width, "mask_height": mask_height, "points_to_sample": points_to_sample, "sampling_method": sampling_method, "interpolation": interpolation, "tension": tension, "repeat_output": repeat_output, "float_output_type": float_output_type})
        self.inputs = SplineEditorInputs(self)
        self.outputs = SplineEditorOutputs(self)
