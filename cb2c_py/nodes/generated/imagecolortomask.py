
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageColorToMask
class ImageColorToMaskInputs(InputSlots):
    image: Slot[Image]
    color: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.color = Slot[int](node, "color", 'INT')

class ImageColorToMaskOutputs(OutputSlots):
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "MASK", 'MASK')

class ImageColorToMask(Node[ImageColorToMaskInputs, ImageColorToMaskOutputs]):
    """
    Original name: ImageColorToMask
    No description available.
    """
    _original_name: str = 'ImageColorToMask'

    def __init__(self, image: Slot[Image], color: int = 0):
        super().__init__(**{"image": image, "color": color})
        self.inputs = ImageColorToMaskInputs(self)
        self.outputs = ImageColorToMaskOutputs(self)
