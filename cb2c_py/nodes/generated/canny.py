
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for Canny
class CannyInputs(InputSlots):
    image: Slot[Image]
    low_threshold: Slot[float]
    high_threshold: Slot[float]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.low_threshold = Slot[float](node, "low_threshold", 'FLOAT')
        self.high_threshold = Slot[float](node, "high_threshold", 'FLOAT')

class CannyOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class Canny(Node[CannyInputs, CannyOutputs]):
    """
    Original name: Canny
    No description available.
    """
    _original_name: str = 'Canny'

    def __init__(self, image: Slot[Image], low_threshold: float = 0.4, high_threshold: float = 0.8):
        super().__init__(**{"image": image, "low_threshold": low_threshold, "high_threshold": high_threshold})
        self.inputs = CannyInputs(self)
        self.outputs = CannyOutputs(self)
