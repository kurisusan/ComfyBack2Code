
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

class DrawText+:
    def __init__(self, **kwargs):
        self.name = "DrawText+"
        self.inputs = kwargs

    @classmethod
    def get_docs(cls):
        return "No description available."

    @classmethod
    def get_inputs(cls):
        return {
    "text": [
        "STRING",
        {
            "multiline": true,
            "dynamicPrompts": true,
            "default": "Hello, World!"
        }
    ],
    "font": [
        [
            "ShareTechMono-Regular.ttf"
        ]
    ],
    "size": [
        "INT",
        {
            "default": 56,
            "min": 1,
            "max": 9999,
            "step": 1
        }
    ],
    "color": [
        "STRING",
        {
            "multiline": false,
            "default": "#FFFFFF"
        }
    ],
    "background_color": [
        "STRING",
        {
            "multiline": false,
            "default": "#00000000"
        }
    ],
    "shadow_distance": [
        "INT",
        {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
        }
    ],
    "shadow_blur": [
        "INT",
        {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
        }
    ],
    "shadow_color": [
        "STRING",
        {
            "multiline": false,
            "default": "#000000"
        }
    ],
    "horizontal_align": [
        [
            "left",
            "center",
            "right"
        ]
    ],
    "vertical_align": [
        [
            "top",
            "center",
            "bottom"
        ]
    ],
    "offset_x": [
        "INT",
        {
            "default": 0,
            "min": -16384,
            "max": 16384,
            "step": 1
        }
    ],
    "offset_y": [
        "INT",
        {
            "default": 0,
            "min": -16384,
            "max": 16384,
            "step": 1
        }
    ],
    "direction": [
        [
            "ltr",
            "rtl"
        ]
    ]
}

    @classmethod
    def get_outputs(cls):
        return [
    "IMAGE",
    "MASK"
]
