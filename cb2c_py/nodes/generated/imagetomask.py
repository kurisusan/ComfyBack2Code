
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ImageToMask
class ImageToMaskInputs(InputSlots):
    image: Slot[Image]
    channel: Slot[str]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.channel = Slot[str](node, "channel", ['red', 'green', 'blue', 'alpha'])

class ImageToMaskOutputs(OutputSlots):
    mask: Slot[Any]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "MASK", 'MASK')

class ImageToMask(Node[ImageToMaskInputs, ImageToMaskOutputs]):
    """
    Original name: ImageToMask
    No description available.
    """
    _original_name: str = 'ImageToMask'

    def __init__(self, image: Slot[Image], channel: str):
        super().__init__(**{"image": image, "channel": channel})
        self.inputs = ImageToMaskInputs(self)
        self.outputs = ImageToMaskOutputs(self)
