
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for WanVideoFlowEdit
class WanVideoFlowEditInputs(InputSlots):
    source_embeds: Slot[Any]
    skip_steps: Slot[int]
    drift_steps: Slot[int]
    drift_flow_shift: Slot[float]
    source_cfg: Slot[float]
    drift_cfg: Slot[float]
    def __init__(self, node: "Node"):
        self.source_embeds = Slot[Any](node, "source_embeds", 'WANVIDEOTEXTEMBEDS')
        self.skip_steps = Slot[int](node, "skip_steps", 'INT')
        self.drift_steps = Slot[int](node, "drift_steps", 'INT')
        self.drift_flow_shift = Slot[float](node, "drift_flow_shift", 'FLOAT')
        self.source_cfg = Slot[float](node, "source_cfg", 'FLOAT')
        self.drift_cfg = Slot[float](node, "drift_cfg", 'FLOAT')

class WanVideoFlowEditOutputs(OutputSlots):
    flowedit_args: Slot[Any]
    def __init__(self, node: "Node"):
        self.flowedit_args = Slot[Any](node, "flowedit_args", 'FLOWEDITARGS')

class WanVideoFlowEdit(Node[WanVideoFlowEditInputs, WanVideoFlowEditOutputs]):
    """
    Original name: WanVideoFlowEdit
    No description available.
    """
    _original_name: str = 'WanVideoFlowEdit'

    def __init__(self, source_embeds: Slot[Any], skip_steps: int = 4, drift_steps: int = 0, drift_flow_shift: float = 3.0, source_cfg: float = 6.0, drift_cfg: float = 6.0):
        super().__init__(**{"source_embeds": source_embeds, "skip_steps": skip_steps, "drift_steps": drift_steps, "drift_flow_shift": drift_flow_shift, "source_cfg": source_cfg, "drift_cfg": drift_cfg})
        self.inputs = WanVideoFlowEditInputs(self)
        self.outputs = WanVideoFlowEditOutputs(self)
