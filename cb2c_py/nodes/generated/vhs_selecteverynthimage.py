
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_SelectEveryNthImage
class VHS_SelectEveryNthImageInputs(InputSlots):
    images: Slot[Image]
    select_every_nth: Slot[int]
    skip_first_images: Slot[int]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.select_every_nth = Slot[int](node, "select_every_nth", 'INT')
        self.skip_first_images = Slot[int](node, "skip_first_images", 'INT')

class VHS_SelectEveryNthImageOutputs(OutputSlots):
    image: Slot[Image]
    count: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.count = Slot[int](node, "count", 'INT')

class VHS_SelectEveryNthImage(Node[VHS_SelectEveryNthImageInputs, VHS_SelectEveryNthImageOutputs]):
    """
    Original name: VHS_SelectEveryNthImage
    Category: Video Helper Suite ðŸŽ¥ðŸ…¥ðŸ…—ðŸ…¢/image
    Select Every Nth Image ðŸŽ¥ðŸ…¥ðŸ…—ðŸ…¢<div style="font-size: 0.8em"><div id=VHS_shortdesc>Keep only 1 image for every interval</div></div><div style="font-size: 0.8em"><div vhs_title="Inputs" style="display: flex; font-size: 0.8em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">Inputs: <div vhs_title="images" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">images: The input image</div></div></div></div><div vhs_title="Outputs" style="display: flex; font-size: 0.8em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">Outputs: <div vhs_title="IMAGE" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">IMAGE: The output images</div></div><div vhs_title="count" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">count: The number of images in the input</div></div></div></div><div vhs_title="Widgets" style="display: flex; font-size: 0.8em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">Widgets: <div vhs_title="select_every_nth" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">select_every_nth: The interval from which one frame is kept. 1 means no frames are skipped.</div></div><div vhs_title="skip_first_images" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">skip_first_images: A number of frames which that is skipped from the start. This applies before select_every_nth. As a result, multiple copies of the node can each have a different skip_first_frames to divide the image into groups</div></div></div></div></div>

    Inputs:
        - images (Image)
        - select_every_nth (int) (default: 1)
        - skip_first_images (int) (default: 0)

    Outputs:
        - image (Image)
        - count (int)
    """
    _original_name: str = 'VHS_SelectEveryNthImage'

    def __init__(self, images: Slot[Image], select_every_nth: int = 1, skip_first_images: int = 0):
        super().__init__(**{"images": images, "select_every_nth": select_every_nth, "skip_first_images": skip_first_images})
        self.inputs = VHS_SelectEveryNthImageInputs(self)
        self.outputs = VHS_SelectEveryNthImageOutputs(self)
