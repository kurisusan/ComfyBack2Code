
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageRemoveBackground_
class ImageRemoveBackground_Inputs(InputSlots):
    rembg_session: Slot[Any]
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.rembg_session = Slot[Any](node, "rembg_session", 'REMBG_SESSION')
        self.image = Slot[Image](node, "image", 'IMAGE')

class ImageRemoveBackground_Outputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "MASK", 'MASK')

class ImageRemoveBackground_(Node[ImageRemoveBackground_Inputs, ImageRemoveBackground_Outputs]):
    """
    Original name: ImageRemoveBackground+
    No description available.
    """
    _original_name: str = 'ImageRemoveBackground+'

    def __init__(self, rembg_session: Slot[Any], image: Slot[Image]):
        super().__init__(**{"rembg_session": rembg_session, "image": image})
        self.inputs = ImageRemoveBackground_Inputs(self)
        self.outputs = ImageRemoveBackground_Outputs(self)
