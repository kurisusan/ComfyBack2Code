
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for JoinStringMulti
class JoinStringMultiInputs(InputSlots):
    inputcount: Slot[int]
    string_1: Slot[str]
    string_2: Slot[str]
    delimiter: Slot[str]
    return_list: Slot[bool]
    def __init__(self, node: "Node"):
        self.inputcount = Slot[int](node, "inputcount", 'INT')
        self.string_1 = Slot[str](node, "string_1", 'STRING')
        self.string_2 = Slot[str](node, "string_2", 'STRING')
        self.delimiter = Slot[str](node, "delimiter", 'STRING')
        self.return_list = Slot[bool](node, "return_list", 'BOOLEAN')

class JoinStringMultiOutputs(OutputSlots):
    string: Slot[str]
    def __init__(self, node: "Node"):
        self.string = Slot[str](node, "string", 'STRING')

class JoinStringMulti(Node[JoinStringMultiInputs, JoinStringMultiOutputs]):
    """
    Original name: JoinStringMulti
    No description available.
    """
    _original_name: str = 'JoinStringMulti'

    def __init__(self, inputcount: int = 2, string_1: str = '', string_2: str = '', delimiter: str = ' ', return_list: bool = False):
        super().__init__(**{"inputcount": inputcount, "string_1": string_1, "string_2": string_2, "delimiter": delimiter, "return_list": return_list})
        self.inputs = JoinStringMultiInputs(self)
        self.outputs = JoinStringMultiOutputs(self)
