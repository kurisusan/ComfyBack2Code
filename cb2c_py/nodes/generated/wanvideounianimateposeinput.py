
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoUniAnimatePoseInput
class WanVideoUniAnimatePoseInputInputs(InputSlots):
    pose_images: Slot[Image]
    strength: Slot[float]
    start_percent: Slot[float]
    end_percent: Slot[float]
    def __init__(self, node: "Node"):
        self.pose_images = Slot[Image](node, "pose_images", 'IMAGE')
        self.strength = Slot[float](node, "strength", 'FLOAT')
        self.start_percent = Slot[float](node, "start_percent", 'FLOAT')
        self.end_percent = Slot[float](node, "end_percent", 'FLOAT')

class WanVideoUniAnimatePoseInputOutputs(OutputSlots):
    unianimate_poses: Slot[Any]
    def __init__(self, node: "Node"):
        self.unianimate_poses = Slot[Any](node, "unianimate_poses", 'UNIANIMATE_POSE')

class WanVideoUniAnimatePoseInput(Node[WanVideoUniAnimatePoseInputInputs, WanVideoUniAnimatePoseInputOutputs]):
    """
    Original name: WanVideoUniAnimatePoseInput
    Category: WanVideoWrapper
    

    Inputs:
        - pose_images (Image)
          Pose images
        - strength (float) (default: 1.0)
          Strength of the pose control
        - start_percent (float) (default: 0.0)
          Start percentage for the pose control
        - end_percent (float) (default: 1.0)
          End percentage for the pose control

    Outputs:
        - unianimate_poses (Any)
    """
    _original_name: str = 'WanVideoUniAnimatePoseInput'

    def __init__(self, pose_images: Slot[Image], strength: float = 1.0, start_percent: float = 0.0, end_percent: float = 1.0):
        super().__init__(**{"pose_images": pose_images, "strength": strength, "start_percent": start_percent, "end_percent": end_percent})
        self.inputs = WanVideoUniAnimatePoseInputInputs(self)
        self.outputs = WanVideoUniAnimatePoseInputOutputs(self)
