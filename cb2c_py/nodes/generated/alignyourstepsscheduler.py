
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for AlignYourStepsScheduler
class AlignYourStepsSchedulerInputs(InputSlots):
    model_type: Slot[str]
    steps: Slot[int]
    denoise: Slot[float]
    def __init__(self, node: "Node"):
        self.model_type = Slot[str](node, "model_type", ['SD1', 'SDXL', 'SVD'])
        self.steps = Slot[int](node, "steps", 'INT')
        self.denoise = Slot[float](node, "denoise", 'FLOAT')

class AlignYourStepsSchedulerOutputs(OutputSlots):
    sigmas: Slot[Any]
    def __init__(self, node: "Node"):
        self.sigmas = Slot[Any](node, "SIGMAS", 'SIGMAS')

class AlignYourStepsScheduler(Node[AlignYourStepsSchedulerInputs, AlignYourStepsSchedulerOutputs]):
    """
    Original name: AlignYourStepsScheduler
    Category: sampling/custom_sampling/schedulers
    

    Inputs:
        - model_type (str)
        - steps (int) (default: 10)
        - denoise (float) (default: 1.0)

    Outputs:
        - sigmas (Any)
    """
    _original_name: str = 'AlignYourStepsScheduler'

    def __init__(self, model_type: str, steps: int = 10, denoise: float = 1.0):
        super().__init__(**{"model_type": model_type, "steps": steps, "denoise": denoise})
        self.inputs = AlignYourStepsSchedulerInputs(self)
        self.outputs = AlignYourStepsSchedulerOutputs(self)
