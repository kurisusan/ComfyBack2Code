
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for MergeImageChannels
class MergeImageChannelsInputs(InputSlots):
    red: Slot[Image]
    green: Slot[Image]
    blue: Slot[Image]
    def __init__(self, node: "Node"):
        self.red = Slot[Image](node, "red", 'IMAGE')
        self.green = Slot[Image](node, "green", 'IMAGE')
        self.blue = Slot[Image](node, "blue", 'IMAGE')

class MergeImageChannelsOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')

class MergeImageChannels(Node[MergeImageChannelsInputs, MergeImageChannelsOutputs]):
    """
    Original name: MergeImageChannels
    No description available.
    """
    _original_name: str = 'MergeImageChannels'

    def __init__(self, red: Slot[Image], green: Slot[Image], blue: Slot[Image]):
        super().__init__(**{"red": red, "green": green, "blue": blue})
        self.inputs = MergeImageChannelsInputs(self)
        self.outputs = MergeImageChannelsOutputs(self)
