
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for MaskPreview
class MaskPreviewInputs(InputSlots):
    mask: Slot[Any]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "mask", 'MASK')

class MaskPreviewOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class MaskPreview(Node[MaskPreviewInputs, MaskPreviewOutputs]):
    """
    Original name: MaskPreview
    No description available.
    """
    _original_name: str = 'MaskPreview'

    def __init__(self, mask: Slot[Any]):
        super().__init__(**{"mask": mask})
        self.inputs = MaskPreviewInputs(self)
        self.outputs = MaskPreviewOutputs(self)
