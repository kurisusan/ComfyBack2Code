
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class WanVideoClipVisionEncode(Node):
    """
    Original name: WanVideoClipVisionEncode
    No description available.
    """
    _inputs = {
    "clip_vision": [
        "CLIP_VISION"
    ],
    "image_1": [
        "IMAGE",
        {
            "tooltip": "Image to encode"
        }
    ],
    "strength_1": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001,
            "tooltip": "Additional clip embed multiplier"
        }
    ],
    "strength_2": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.001,
            "tooltip": "Additional clip embed multiplier"
        }
    ],
    "crop": [
        [
            "center",
            "disabled"
        ],
        {
            "default": "center",
            "tooltip": "Crop image to 224x224 before encoding"
        }
    ],
    "combine_embeds": [
        [
            "average",
            "sum",
            "concat",
            "batch"
        ],
        {
            "default": "average",
            "tooltip": "Method to combine multiple clip embeds"
        }
    ],
    "force_offload": [
        "BOOLEAN",
        {
            "default": True
        }
    ]
}
    _outputs = [
    "WANVIDIMAGE_CLIPEMBEDS"
]
    _original_name = "WanVideoClipVisionEncode"

    def __init__(self, clip_vision, image_1, strength_1=1.0, strength_2=1.0, crop="center", combine_embeds="average", force_offload=True):
        super().__init__(clip_vision=clip_vision, image_1=image_1, strength_1=strength_1, strength_2=strength_2, crop=crop, combine_embeds=combine_embeds, force_offload=force_offload)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
