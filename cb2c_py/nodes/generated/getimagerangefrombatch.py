
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for GetImageRangeFromBatch
class GetImageRangeFromBatchInputs(InputSlots):
    start_index: Slot[int]
    num_frames: Slot[int]
    def __init__(self, node: "Node"):
        self.start_index = Slot[int](node, "start_index", 'INT')
        self.num_frames = Slot[int](node, "num_frames", 'INT')

class GetImageRangeFromBatchOutputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "MASK", 'MASK')

class GetImageRangeFromBatch(Node[GetImageRangeFromBatchInputs, GetImageRangeFromBatchOutputs]):
    """
    Original name: GetImageRangeFromBatch
    No description available.
    """
    _original_name: str = 'GetImageRangeFromBatch'

    def __init__(self, start_index: int = 0, num_frames: int = 1):
        super().__init__(**{"start_index": start_index, "num_frames": num_frames})
        self.inputs = GetImageRangeFromBatchInputs(self)
        self.outputs = GetImageRangeFromBatchOutputs(self)
