
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ReplaceImagesInBatch
class ReplaceImagesInBatchInputs(InputSlots):
    start_index: Slot[int]
    def __init__(self, node: "Node"):
        self.start_index = Slot[int](node, "start_index", 'INT')

class ReplaceImagesInBatchOutputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "MASK", 'MASK')

class ReplaceImagesInBatch(Node[ReplaceImagesInBatchInputs, ReplaceImagesInBatchOutputs]):
    """
    Original name: ReplaceImagesInBatch
    Category: KJNodes/image
    
Replaces the images in a batch, starting from the specified start index,  
with the replacement images.


    Inputs:
        - start_index (int) (default: 1)

    Outputs:
        - image (Image)
        - mask (Image)
    """
    _original_name: str = 'ReplaceImagesInBatch'

    def __init__(self, start_index: int = 1):
        super().__init__(**{"start_index": start_index})
        self.inputs = ReplaceImagesInBatchInputs(self)
        self.outputs = ReplaceImagesInBatchOutputs(self)
