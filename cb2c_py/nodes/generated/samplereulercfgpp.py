
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SamplerEulerCFGpp
class SamplerEulerCFGppInputs(InputSlots):
    version: Slot[str]
    def __init__(self, node: "Node"):
        self.version = Slot[str](node, "version", ['regular', 'alternative'])

class SamplerEulerCFGppOutputs(OutputSlots):
    sampler: Slot[Any]
    def __init__(self, node: "Node"):
        self.sampler = Slot[Any](node, "SAMPLER", 'SAMPLER')

class SamplerEulerCFGpp(Node[SamplerEulerCFGppInputs, SamplerEulerCFGppOutputs]):
    """
    Original name: SamplerEulerCFGpp
    Category: _for_testing
    

    Inputs:
        - version (str)

    Outputs:
        - sampler (Any)
    """
    _original_name: str = 'SamplerEulerCFGpp'

    def __init__(self, version: str):
        super().__init__(**{"version": version})
        self.inputs = SamplerEulerCFGppInputs(self)
        self.outputs = SamplerEulerCFGppOutputs(self)
