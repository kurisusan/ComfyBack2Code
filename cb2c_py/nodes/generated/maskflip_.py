
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for MaskFlip_
class MaskFlip_Inputs(InputSlots):
    mask: Slot[Any]
    axis: Slot[str]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "mask", 'MASK')
        self.axis = Slot[str](node, "axis", ['x', 'y', 'xy'])

class MaskFlip_Outputs(OutputSlots):
    mask: Slot[Any]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "MASK", 'MASK')

class MaskFlip_(Node[MaskFlip_Inputs, MaskFlip_Outputs]):
    """
    Original name: MaskFlip+
    No description available.
    """
    _original_name: str = 'MaskFlip+'

    def __init__(self, mask: Slot[Any], axis: str):
        super().__init__(**{"mask": mask, "axis": axis})
        self.inputs = MaskFlip_Inputs(self)
        self.outputs = MaskFlip_Outputs(self)
