
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for LTXVCropGuides
class LTXVCropGuidesInputs(InputSlots):
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "negative", 'CONDITIONING')
        self.latent = Slot[Latent](node, "latent", 'LATENT')

class LTXVCropGuidesOutputs(OutputSlots):
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "negative", 'CONDITIONING')
        self.latent = Slot[Latent](node, "latent", 'LATENT')

class LTXVCropGuides(Node[LTXVCropGuidesInputs, LTXVCropGuidesOutputs]):
    """
    Original name: LTXVCropGuides
    No description available.
    """
    _original_name: str = 'LTXVCropGuides'

    def __init__(self, positive: Slot[Conditioning], negative: Slot[Conditioning], latent: Slot[Latent]):
        super().__init__(**{"positive": positive, "negative": negative, "latent": latent})
        self.inputs = LTXVCropGuidesInputs(self)
        self.outputs = LTXVCropGuidesOutputs(self)
