
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for CreateInstanceDiffusionTracking
class CreateInstanceDiffusionTrackingInputs(InputSlots):
    coordinates: Slot[str]
    width: Slot[int]
    height: Slot[int]
    bbox_width: Slot[int]
    bbox_height: Slot[int]
    class_name: Slot[str]
    class_id: Slot[int]
    prompt: Slot[str]
    def __init__(self, node: "Node"):
        self.coordinates = Slot[str](node, "coordinates", 'STRING')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.bbox_width = Slot[int](node, "bbox_width", 'INT')
        self.bbox_height = Slot[int](node, "bbox_height", 'INT')
        self.class_name = Slot[str](node, "class_name", 'STRING')
        self.class_id = Slot[int](node, "class_id", 'INT')
        self.prompt = Slot[str](node, "prompt", 'STRING')

class CreateInstanceDiffusionTrackingOutputs(OutputSlots):
    tracking: Slot[Any]
    prompt: Slot[str]
    width: Slot[int]
    height: Slot[int]
    bbox_width: Slot[int]
    bbox_height: Slot[int]
    def __init__(self, node: "Node"):
        self.tracking = Slot[Any](node, "tracking", 'TRACKING')
        self.prompt = Slot[str](node, "prompt", 'STRING')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.bbox_width = Slot[int](node, "bbox_width", 'INT')
        self.bbox_height = Slot[int](node, "bbox_height", 'INT')

class CreateInstanceDiffusionTracking(Node[CreateInstanceDiffusionTrackingInputs, CreateInstanceDiffusionTrackingOutputs]):
    """
    Original name: CreateInstanceDiffusionTracking
    No description available.
    """
    _original_name: str = 'CreateInstanceDiffusionTracking'

    def __init__(self, coordinates: str, width: int = 512, height: int = 512, bbox_width: int = 512, bbox_height: int = 512, class_name: str = 'class_name', class_id: int = 0, prompt: str = 'prompt'):
        super().__init__(**{"coordinates": coordinates, "width": width, "height": height, "bbox_width": bbox_width, "bbox_height": bbox_height, "class_name": class_name, "class_id": class_id, "prompt": prompt})
        self.inputs = CreateInstanceDiffusionTrackingInputs(self)
        self.outputs = CreateInstanceDiffusionTrackingOutputs(self)
