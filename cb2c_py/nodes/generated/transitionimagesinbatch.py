
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for TransitionImagesInBatch
class TransitionImagesInBatchInputs(InputSlots):
    images: Slot[Image]
    interpolation: Slot[str]
    transition_type: Slot[str]
    transitioning_frames: Slot[int]
    blur_radius: Slot[float]
    reverse: Slot[bool]
    device: Slot[str]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.interpolation = Slot[str](node, "interpolation", ['linear', 'ease_in', 'ease_out', 'ease_in_out', 'bounce', 'elastic', 'glitchy', 'exponential_ease_out'])
        self.transition_type = Slot[str](node, "transition_type", ['horizontal slide', 'vertical slide', 'box', 'circle', 'horizontal door', 'vertical door', 'fade'])
        self.transitioning_frames = Slot[int](node, "transitioning_frames", 'INT')
        self.blur_radius = Slot[float](node, "blur_radius", 'FLOAT')
        self.reverse = Slot[bool](node, "reverse", 'BOOLEAN')
        self.device = Slot[str](node, "device", ['CPU', 'GPU'])

class TransitionImagesInBatchOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class TransitionImagesInBatch(Node[TransitionImagesInBatchInputs, TransitionImagesInBatchOutputs]):
    """
    Original name: TransitionImagesInBatch
    No description available.
    """
    _original_name: str = 'TransitionImagesInBatch'

    def __init__(self, images: Slot[Image], interpolation: str, transition_type: str, transitioning_frames: int = 1, blur_radius: float = 0.0, reverse: bool = False, device: str = 'CPU'):
        super().__init__(**{"images": images, "interpolation": interpolation, "transition_type": transition_type, "transitioning_frames": transitioning_frames, "blur_radius": blur_radius, "reverse": reverse, "device": device})
        self.inputs = TransitionImagesInBatchInputs(self)
        self.outputs = TransitionImagesInBatchOutputs(self)
