
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for PointsEditor
class PointsEditorInputs(InputSlots):
    points_store: Slot[str]
    coordinates: Slot[str]
    neg_coordinates: Slot[str]
    bbox_store: Slot[str]
    bboxes: Slot[str]
    bbox_format: Slot[str]
    width: Slot[int]
    height: Slot[int]
    normalize: Slot[bool]
    def __init__(self, node: "Node"):
        self.points_store = Slot[str](node, "points_store", 'STRING')
        self.coordinates = Slot[str](node, "coordinates", 'STRING')
        self.neg_coordinates = Slot[str](node, "neg_coordinates", 'STRING')
        self.bbox_store = Slot[str](node, "bbox_store", 'STRING')
        self.bboxes = Slot[str](node, "bboxes", 'STRING')
        self.bbox_format = Slot[str](node, "bbox_format", ['xyxy', 'xywh'])
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.normalize = Slot[bool](node, "normalize", 'BOOLEAN')

class PointsEditorOutputs(OutputSlots):
    positive_coords: Slot[str]
    negative_coords: Slot[str]
    bbox: Slot[Any]
    bbox_mask: Slot[Image]
    cropped_image: Slot[Image]
    def __init__(self, node: "Node"):
        self.positive_coords = Slot[str](node, "positive_coords", 'STRING')
        self.negative_coords = Slot[str](node, "negative_coords", 'STRING')
        self.bbox = Slot[Any](node, "bbox", 'BBOX')
        self.bbox_mask = Slot[Image](node, "bbox_mask", 'MASK')
        self.cropped_image = Slot[Image](node, "cropped_image", 'IMAGE')

class PointsEditor(Node[PointsEditorInputs, PointsEditorOutputs]):
    """
    Original name: PointsEditor
    Category: KJNodes/experimental
    
# WORK IN PROGRESS  
Do not count on this as part of your workflow yet,  
probably contains lots of bugs and stability is not  
guaranteed!!  
  
## Graphical editor to create coordinates

**Shift + click** to add a positive (green) point.
**Shift + right click** to add a negative (red) point.
**Ctrl + click** to draw a box.  
**Right click on a point** to delete it.    
Note that you can't delete from start/end of the points array.  
  
To add an image select the node and copy/paste or drag in the image.  
Or from the bg_image input on queue (first frame of the batch).  

**THE IMAGE IS SAVED TO THE NODE AND WORKFLOW METADATA**  
you can clear the image from the context menu by right clicking on the canvas  



    Inputs:
        - points_store (str)
        - coordinates (str)
        - neg_coordinates (str)
        - bbox_store (str)
        - bboxes (str)
        - bbox_format (str)
        - width (int) (default: 512)
        - height (int) (default: 512)
        - normalize (bool) (default: False)

    Outputs:
        - positive_coords (str)
        - negative_coords (str)
        - bbox (Any)
        - bbox_mask (Image)
        - cropped_image (Image)
    """
    _original_name: str = 'PointsEditor'

    def __init__(self, points_store: str, coordinates: str, neg_coordinates: str, bbox_store: str, bboxes: str, bbox_format: str, width: int = 512, height: int = 512, normalize: bool = False):
        super().__init__(**{"points_store": points_store, "coordinates": coordinates, "neg_coordinates": neg_coordinates, "bbox_store": bbox_store, "bboxes": bboxes, "bbox_format": bbox_format, "width": width, "height": height, "normalize": normalize})
        self.inputs = PointsEditorInputs(self)
        self.outputs = PointsEditorOutputs(self)
