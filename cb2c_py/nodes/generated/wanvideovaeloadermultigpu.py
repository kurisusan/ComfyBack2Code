
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoVAELoaderMultiGPU
class WanVideoVAELoaderMultiGPUInputs(InputSlots):
    model_name: Slot[str]
    def __init__(self, node: "Node"):
        self.model_name = Slot[str](node, "model_name", ['wan_2.1_vae.safetensors'])

class WanVideoVAELoaderMultiGPUOutputs(OutputSlots):
    vae: Slot[Any]
    def __init__(self, node: "Node"):
        self.vae = Slot[Any](node, "vae", 'WANVAE')

class WanVideoVAELoaderMultiGPU(Node[WanVideoVAELoaderMultiGPUInputs, WanVideoVAELoaderMultiGPUOutputs]):
    """
    Original name: WanVideoVAELoaderMultiGPU
    Category: multigpu
    Loads Wan VAE model from 'ComfyUI/models/vae'

    Inputs:
        - model_name (str)
          These models are loaded from 'ComfyUI/models/vae'

    Outputs:
        - vae (Any)
    """
    _original_name: str = 'WanVideoVAELoaderMultiGPU'

    def __init__(self, model_name: str):
        super().__init__(**{"model_name": model_name})
        self.inputs = WanVideoVAELoaderMultiGPUInputs(self)
        self.outputs = WanVideoVAELoaderMultiGPUOutputs(self)
