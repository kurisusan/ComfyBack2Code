
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for GetImagesFromBatchIndexed
class GetImagesFromBatchIndexedInputs(InputSlots):
    images: Slot[Image]
    indexes: Slot[str]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.indexes = Slot[str](node, "indexes", 'STRING')

class GetImagesFromBatchIndexedOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class GetImagesFromBatchIndexed(Node[GetImagesFromBatchIndexedInputs, GetImagesFromBatchIndexedOutputs]):
    """
    Original name: GetImagesFromBatchIndexed
    No description available.
    """
    _original_name: str = 'GetImagesFromBatchIndexed'

    def __init__(self, images: Slot[Image], indexes: str = '0, 1, 2'):
        super().__init__(**{"images": images, "indexes": indexes})
        self.inputs = GetImagesFromBatchIndexedInputs(self)
        self.outputs = GetImagesFromBatchIndexedOutputs(self)
