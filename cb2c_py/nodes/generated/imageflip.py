
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageFlip
class ImageFlipInputs(InputSlots):
    image: Slot[Image]
    flip_method: Slot[str]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.flip_method = Slot[str](node, "flip_method", ['x-axis: vertically', 'y-axis: horizontally'])

class ImageFlipOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageFlip(Node[ImageFlipInputs, ImageFlipOutputs]):
    """
    Original name: ImageFlip
    Category: image/transform
    

    Inputs:
        - image (Image)
        - flip_method (str)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'ImageFlip'

    def __init__(self, image: Slot[Image], flip_method: str):
        super().__init__(**{"image": image, "flip_method": flip_method})
        self.inputs = ImageFlipInputs(self)
        self.outputs = ImageFlipOutputs(self)
