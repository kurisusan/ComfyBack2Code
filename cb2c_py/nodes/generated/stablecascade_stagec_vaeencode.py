
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for StableCascade_StageC_VAEEncode
class StableCascade_StageC_VAEEncodeInputs(InputSlots):
    image: Slot[Image]
    vae: Slot[Vae]
    compression: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.vae = Slot[Vae](node, "vae", 'VAE')
        self.compression = Slot[int](node, "compression", 'INT')

class StableCascade_StageC_VAEEncodeOutputs(OutputSlots):
    stage_c: Slot[Latent]
    stage_b: Slot[Latent]
    def __init__(self, node: "Node"):
        self.stage_c = Slot[Latent](node, "stage_c", 'LATENT')
        self.stage_b = Slot[Latent](node, "stage_b", 'LATENT')

class StableCascade_StageC_VAEEncode(Node[StableCascade_StageC_VAEEncodeInputs, StableCascade_StageC_VAEEncodeOutputs]):
    """
    Original name: StableCascade_StageC_VAEEncode
    Category: latent/stable_cascade
    

    Inputs:
        - image (Image)
        - vae (Vae)
        - compression (int) (default: 42)

    Outputs:
        - stage_c (Latent)
        - stage_b (Latent)
    """
    _original_name: str = 'StableCascade_StageC_VAEEncode'

    def __init__(self, image: Slot[Image], vae: Slot[Vae], compression: int = 42):
        super().__init__(**{"image": image, "vae": vae, "compression": compression})
        self.inputs = StableCascade_StageC_VAEEncodeInputs(self)
        self.outputs = StableCascade_StageC_VAEEncodeOutputs(self)
