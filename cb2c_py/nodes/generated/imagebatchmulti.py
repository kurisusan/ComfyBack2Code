
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageBatchMulti
class ImageBatchMultiInputs(InputSlots):
    inputcount: Slot[int]
    image_1: Slot[Image]
    image_2: Slot[Image]
    def __init__(self, node: "Node"):
        self.inputcount = Slot[int](node, "inputcount", 'INT')
        self.image_1 = Slot[Image](node, "image_1", 'IMAGE')
        self.image_2 = Slot[Image](node, "image_2", 'IMAGE')

class ImageBatchMultiOutputs(OutputSlots):
    images: Slot[Image]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')

class ImageBatchMulti(Node[ImageBatchMultiInputs, ImageBatchMultiOutputs]):
    """
    Original name: ImageBatchMulti
    Category: KJNodes/image
    
Creates an image batch from multiple images.  
You can set how many inputs the node has,  
with the **inputcount** and clicking update.


    Inputs:
        - inputcount (int) (default: 2)
        - image_1 (Image)
        - image_2 (Image)

    Outputs:
        - images (Image)
    """
    _original_name: str = 'ImageBatchMulti'

    def __init__(self, image_1: Slot[Image], image_2: Slot[Image], inputcount: int = 2):
        super().__init__(**{"inputcount": inputcount, "image_1": image_1, "image_2": image_2})
        self.inputs = ImageBatchMultiInputs(self)
        self.outputs = ImageBatchMultiOutputs(self)
