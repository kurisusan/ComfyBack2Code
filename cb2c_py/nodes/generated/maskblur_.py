
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for MaskBlur_
class MaskBlur_Inputs(InputSlots):
    mask: Slot[Image]
    amount: Slot[int]
    device: Slot[str]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')
        self.amount = Slot[int](node, "amount", 'INT')
        self.device = Slot[str](node, "device", ['auto', 'cpu', 'gpu'])

class MaskBlur_Outputs(OutputSlots):
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "MASK", 'MASK')

class MaskBlur_(Node[MaskBlur_Inputs, MaskBlur_Outputs]):
    """
    Original name: MaskBlur+
    Category: essentials/mask
    

    Inputs:
        - mask (Image)
        - amount (int) (default: 6)
        - device (str)

    Outputs:
        - mask (Image)
    """
    _original_name: str = 'MaskBlur+'

    def __init__(self, mask: Slot[Image], device: str, amount: int = 6):
        super().__init__(**{"mask": mask, "amount": amount, "device": device})
        self.inputs = MaskBlur_Inputs(self)
        self.outputs = MaskBlur_Outputs(self)
