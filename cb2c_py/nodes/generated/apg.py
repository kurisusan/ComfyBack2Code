
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class APG(Node):
    """
    Original name: APG
    No description available.
    """
    _inputs = {
    "model": [
        "MODEL"
    ],
    "eta": [
        "FLOAT",
        {
            "default": 1.0,
            "min": -10.0,
            "max": 10.0,
            "step": 0.01,
            "tooltip": "Controls the scale of the parallel guidance vector. Default CFG behavior at a setting of 1."
        }
    ],
    "norm_threshold": [
        "FLOAT",
        {
            "default": 5.0,
            "min": 0.0,
            "max": 50.0,
            "step": 0.1,
            "tooltip": "Normalize guidance vector to this value, normalization disable at a setting of 0."
        }
    ],
    "momentum": [
        "FLOAT",
        {
            "default": 0.0,
            "min": -5.0,
            "max": 1.0,
            "step": 0.01,
            "tooltip": "Controls a running average of guidance during diffusion, disabled at a setting of 0."
        }
    ]
}
    _outputs = [
    "MODEL"
]
    _original_name = "APG"

    def __init__(self, model, eta=1.0, norm_threshold=5.0, momentum=0.0):
        super().__init__(model=model, eta=eta, norm_threshold=norm_threshold, momentum=momentum)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
