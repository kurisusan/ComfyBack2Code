
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for OpenAIChatNode
class OpenAIChatNodeInputs(InputSlots):
    prompt: Slot[str]
    persist_context: Slot[bool]
    model: Slot[Any]
    def __init__(self, node: "Node"):
        self.prompt = Slot[str](node, "prompt", 'STRING')
        self.persist_context = Slot[bool](node, "persist_context", 'BOOLEAN')
        self.model = Slot[Any](node, "model", 'COMBO')

class OpenAIChatNodeOutputs(OutputSlots):
    string: Slot[str]
    def __init__(self, node: "Node"):
        self.string = Slot[str](node, "STRING", 'STRING')

class OpenAIChatNode(Node[OpenAIChatNodeInputs, OpenAIChatNodeOutputs]):
    """
    Original name: OpenAIChatNode
    No description available.
    """
    _original_name: str = 'OpenAIChatNode'

    def __init__(self, prompt: str = '', persist_context: bool = True, model: Slot[Any] = None):
        super().__init__(**{"prompt": prompt, "persist_context": persist_context, "model": model})
        self.inputs = OpenAIChatNodeInputs(self)
        self.outputs = OpenAIChatNodeOutputs(self)
