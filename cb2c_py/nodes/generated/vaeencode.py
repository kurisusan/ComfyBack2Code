
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VAEEncode
class VAEEncodeInputs(InputSlots):
    pixels: Slot[Image]
    vae: Slot[Vae]
    def __init__(self, node: "Node"):
        self.pixels = Slot[Image](node, "pixels", 'IMAGE')
        self.vae = Slot[Vae](node, "vae", 'VAE')

class VAEEncodeOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class VAEEncode(Node[VAEEncodeInputs, VAEEncodeOutputs]):
    """
    Original name: VAEEncode
    Category: latent
    

    Inputs:
        - pixels (Image)
        - vae (Vae)

    Outputs:
        - latent (Latent)
    """
    _original_name: str = 'VAEEncode'

    def __init__(self, pixels: Slot[Image], vae: Slot[Vae]):
        super().__init__(**{"pixels": pixels, "vae": vae})
        self.inputs = VAEEncodeInputs(self)
        self.outputs = VAEEncodeOutputs(self)
