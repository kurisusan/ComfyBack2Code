
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for FantasyTalkingModelLoader
class FantasyTalkingModelLoaderInputs(InputSlots):
    model: Slot[str]
    base_precision: Slot[str]
    def __init__(self, node: "Node"):
        self.model = Slot[str](node, "model", [])
        self.base_precision = Slot[str](node, "base_precision", ['fp32', 'bf16', 'fp16'])

class FantasyTalkingModelLoaderOutputs(OutputSlots):
    model: Slot[Any]
    def __init__(self, node: "Node"):
        self.model = Slot[Any](node, "model", 'FANTASYTALKINGMODEL')

class FantasyTalkingModelLoader(Node[FantasyTalkingModelLoaderInputs, FantasyTalkingModelLoaderOutputs]):
    """
    Original name: FantasyTalkingModelLoader
    No description available.
    """
    _original_name: str = 'FantasyTalkingModelLoader'

    def __init__(self, model: str, base_precision: str = 'fp16'):
        super().__init__(**{"model": model, "base_precision": base_precision})
        self.inputs = FantasyTalkingModelLoaderInputs(self)
        self.outputs = FantasyTalkingModelLoaderOutputs(self)
