
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for EmptyImage
class EmptyImageInputs(InputSlots):
    width: Slot[int]
    height: Slot[int]
    batch_size: Slot[int]
    color: Slot[int]
    def __init__(self, node: "Node"):
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.batch_size = Slot[int](node, "batch_size", 'INT')
        self.color = Slot[int](node, "color", 'INT')

class EmptyImageOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class EmptyImage(Node[EmptyImageInputs, EmptyImageOutputs]):
    """
    Original name: EmptyImage
    No description available.
    """
    _original_name: str = 'EmptyImage'

    def __init__(self, width: int = 512, height: int = 512, batch_size: int = 1, color: int = 0):
        super().__init__(**{"width": width, "height": height, "batch_size": batch_size, "color": color})
        self.inputs = EmptyImageInputs(self)
        self.outputs = EmptyImageOutputs(self)
