
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SaveGLB
class SaveGLBInputs(InputSlots):
    mesh: Slot[Any]
    filename_prefix: Slot[str]
    def __init__(self, node: "Node"):
        self.mesh = Slot[Any](node, "mesh", 'MESH')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')

class SaveGLBOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class SaveGLB(Node[SaveGLBInputs, SaveGLBOutputs]):
    """
    Original name: SaveGLB
    No description available.
    """
    _original_name: str = 'SaveGLB'

    def __init__(self, mesh: Slot[Any], filename_prefix: str = 'mesh/ComfyUI'):
        super().__init__(**{"mesh": mesh, "filename_prefix": filename_prefix})
        self.inputs = SaveGLBInputs(self)
        self.outputs = SaveGLBOutputs(self)
