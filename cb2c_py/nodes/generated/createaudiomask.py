
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CreateAudioMask
class CreateAudioMaskInputs(InputSlots):
    invert: Slot[bool]
    frames: Slot[int]
    scale: Slot[float]
    audio_path: Slot[str]
    width: Slot[int]
    height: Slot[int]
    def __init__(self, node: "Node"):
        self.invert = Slot[bool](node, "invert", 'BOOLEAN')
        self.frames = Slot[int](node, "frames", 'INT')
        self.scale = Slot[float](node, "scale", 'FLOAT')
        self.audio_path = Slot[str](node, "audio_path", 'STRING')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')

class CreateAudioMaskOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class CreateAudioMask(Node[CreateAudioMaskInputs, CreateAudioMaskOutputs]):
    """
    Original name: CreateAudioMask
    Category: KJNodes/deprecated
    

    Inputs:
        - invert (bool) (default: False)
        - frames (int) (default: 16)
        - scale (float) (default: 0.5)
        - audio_path (str) (default: 'audio.wav')
        - width (int) (default: 256)
        - height (int) (default: 256)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'CreateAudioMask'

    def __init__(self, invert: bool = False, frames: int = 16, scale: float = 0.5, audio_path: str = 'audio.wav', width: int = 256, height: int = 256):
        super().__init__(**{"invert": invert, "frames": frames, "scale": scale, "audio_path": audio_path, "width": width, "height": height})
        self.inputs = CreateAudioMaskInputs(self)
        self.outputs = CreateAudioMaskOutputs(self)
