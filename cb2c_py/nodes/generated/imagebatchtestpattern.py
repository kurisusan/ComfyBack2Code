
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageBatchTestPattern
class ImageBatchTestPatternInputs(InputSlots):
    batch_size: Slot[int]
    start_from: Slot[int]
    text_x: Slot[int]
    text_y: Slot[int]
    width: Slot[int]
    height: Slot[int]
    font: Slot[str]
    font_size: Slot[int]
    def __init__(self, node: "Node"):
        self.batch_size = Slot[int](node, "batch_size", 'INT')
        self.start_from = Slot[int](node, "start_from", 'INT')
        self.text_x = Slot[int](node, "text_x", 'INT')
        self.text_y = Slot[int](node, "text_y", 'INT')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.font = Slot[str](node, "font", ['FreeMono.ttf', 'FreeMonoBoldOblique.otf', 'TTNorms-Black.otf'])
        self.font_size = Slot[int](node, "font_size", 'INT')

class ImageBatchTestPatternOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageBatchTestPattern(Node[ImageBatchTestPatternInputs, ImageBatchTestPatternOutputs]):
    """
    Original name: ImageBatchTestPattern
    Category: KJNodes/text
    

    Inputs:
        - batch_size (int) (default: 1)
        - start_from (int) (default: 0)
        - text_x (int) (default: 256)
        - text_y (int) (default: 256)
        - width (int) (default: 512)
        - height (int) (default: 512)
        - font (str)
        - font_size (int) (default: 255)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'ImageBatchTestPattern'

    def __init__(self, font: str, batch_size: int = 1, start_from: int = 0, text_x: int = 256, text_y: int = 256, width: int = 512, height: int = 512, font_size: int = 255):
        super().__init__(**{"batch_size": batch_size, "start_from": start_from, "text_x": text_x, "text_y": text_y, "width": width, "height": height, "font": font, "font_size": font_size})
        self.inputs = ImageBatchTestPatternInputs(self)
        self.outputs = ImageBatchTestPatternOutputs(self)
