
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_LoadAudioUpload
class VHS_LoadAudioUploadInputs(InputSlots):
    audio: Slot[str]
    start_time: Slot[Union[float, int]]
    duration: Slot[Union[float, int]]
    def __init__(self, node: "Node"):
        self.audio = Slot[str](node, "audio", [])
        self.start_time = Slot[Union[float, int]](node, "start_time", 'FLOAT')
        self.duration = Slot[Union[float, int]](node, "duration", 'FLOAT')

class VHS_LoadAudioUploadOutputs(OutputSlots):
    audio: Slot[Any]
    def __init__(self, node: "Node"):
        self.audio = Slot[Any](node, "audio", 'AUDIO')

class VHS_LoadAudioUpload(Node[VHS_LoadAudioUploadInputs, VHS_LoadAudioUploadOutputs]):
    """
    Original name: VHS_LoadAudioUpload
    Category: Video Helper Suite ðŸŽ¥ðŸ…¥ðŸ…—ðŸ…¢/audio
    Load Audio (Upload) ðŸŽ¥ðŸ…¥ðŸ…—ðŸ…¢<div style="font-size: 0.8em"><div id=VHS_shortdesc>Loads an audio file from the input directory</div></div><div style="font-size: 0.8em">Very similar in functionality to the built-in LoadAudio. It was originally added before VHS swapped to use Comfy's internal AUDIO format, but provides the additional options for start time and duration</div><div style="font-size: 0.8em"><div vhs_title="Outputs" style="display: flex; font-size: 0.8em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">Outputs: <div vhs_title="audio" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">audio: The loaded audio</div></div></div></div><div vhs_title="Widgets" style="display: flex; font-size: 0.8em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">Widgets: <div vhs_title="audio" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">audio: The audio file to be loaded.</div></div><div vhs_title="start_time" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">start_time: An offset from the start of the sound file that the audio should start from</div></div><div vhs_title="duration" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">duration: A maximum limit for the audio. Disabled if 0</div></div><div vhs_title="choose audio to upload" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">choose audio to upload: An upload button is provided to upload an audio file to the input folder</div></div></div></div></div>

    Inputs:
        - audio (str)
        - start_time (float) (default: 0)
        - duration (float) (default: 0)

    Outputs:
        - audio (Any)
    """
    _original_name: str = 'VHS_LoadAudioUpload'

    def __init__(self, audio: str, start_time: Union[float, int] = 0, duration: Union[float, int] = 0):
        super().__init__(**{"audio": audio, "start_time": start_time, "duration": duration})
        self.inputs = VHS_LoadAudioUploadInputs(self)
        self.outputs = VHS_LoadAudioUploadOutputs(self)
