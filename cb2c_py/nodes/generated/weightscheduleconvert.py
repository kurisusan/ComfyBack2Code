
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for WeightScheduleConvert
class WeightScheduleConvertInputs(InputSlots):
    input_values: Slot[float]
    output_type: Slot[str]
    invert: Slot[bool]
    repeat: Slot[int]
    def __init__(self, node: "Node"):
        self.input_values = Slot[float](node, "input_values", 'FLOAT')
        self.output_type = Slot[str](node, "output_type", ['match_input', 'list', 'pandas series', 'tensor'])
        self.invert = Slot[bool](node, "invert", 'BOOLEAN')
        self.repeat = Slot[int](node, "repeat", 'INT')

class WeightScheduleConvertOutputs(OutputSlots):
    float: Slot[float]
    string: Slot[str]
    int: Slot[int]
    def __init__(self, node: "Node"):
        self.float = Slot[float](node, "FLOAT", 'FLOAT')
        self.string = Slot[str](node, "STRING", 'STRING')
        self.int = Slot[int](node, "INT", 'INT')

class WeightScheduleConvert(Node[WeightScheduleConvertInputs, WeightScheduleConvertOutputs]):
    """
    Original name: WeightScheduleConvert
    No description available.
    """
    _original_name: str = 'WeightScheduleConvert'

    def __init__(self, input_values: float = 0.0, output_type: str = 'list', invert: bool = False, repeat: int = 1):
        super().__init__(**{"input_values": input_values, "output_type": output_type, "invert": invert, "repeat": repeat})
        self.inputs = WeightScheduleConvertInputs(self)
        self.outputs = WeightScheduleConvertOutputs(self)
