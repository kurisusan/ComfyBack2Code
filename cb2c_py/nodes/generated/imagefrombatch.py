
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ImageFromBatch
class ImageFromBatchInputs(InputSlots):
    image: Slot[Image]
    batch_index: Slot[int]
    length: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.batch_index = Slot[int](node, "batch_index", 'INT')
        self.length = Slot[int](node, "length", 'INT')

class ImageFromBatchOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageFromBatch(Node[ImageFromBatchInputs, ImageFromBatchOutputs]):
    """
    Original name: ImageFromBatch
    No description available.
    """
    _original_name: str = 'ImageFromBatch'

    def __init__(self, image: Slot[Image], batch_index: int = 0, length: int = 1):
        super().__init__(**{"image": image, "batch_index": batch_index, "length": length})
        self.inputs = ImageFromBatchInputs(self)
        self.outputs = ImageFromBatchOutputs(self)
