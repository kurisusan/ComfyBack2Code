
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class CreateFluidMask(Node):
    """
    Original name: CreateFluidMask
    No description available.
    """
    _inputs = {
    "invert": [
        "BOOLEAN",
        {
            "default": False
        }
    ],
    "frames": [
        "INT",
        {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
        }
    ],
    "width": [
        "INT",
        {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
        }
    ],
    "height": [
        "INT",
        {
            "default": 256,
            "min": 16,
            "max": 4096,
            "step": 1
        }
    ],
    "inflow_count": [
        "INT",
        {
            "default": 3,
            "min": 0,
            "max": 255,
            "step": 1
        }
    ],
    "inflow_velocity": [
        "INT",
        {
            "default": 1,
            "min": 0,
            "max": 255,
            "step": 1
        }
    ],
    "inflow_radius": [
        "INT",
        {
            "default": 8,
            "min": 0,
            "max": 255,
            "step": 1
        }
    ],
    "inflow_padding": [
        "INT",
        {
            "default": 50,
            "min": 0,
            "max": 255,
            "step": 1
        }
    ],
    "inflow_duration": [
        "INT",
        {
            "default": 60,
            "min": 0,
            "max": 255,
            "step": 1
        }
    ]
}
    _outputs = [
    "IMAGE",
    "MASK"
]
    _original_name = "CreateFluidMask"

    def __init__(self, invert=False, frames=1, width=256, height=256, inflow_count=3, inflow_velocity=1, inflow_radius=8, inflow_padding=50, inflow_duration=60):
        super().__init__(invert=invert, frames=frames, width=width, height=height, inflow_count=inflow_count, inflow_velocity=inflow_velocity, inflow_radius=inflow_radius, inflow_padding=inflow_padding, inflow_duration=inflow_duration)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
