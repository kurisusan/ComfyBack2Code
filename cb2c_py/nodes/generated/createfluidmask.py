
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CreateFluidMask
class CreateFluidMaskInputs(InputSlots):
    invert: Slot[bool]
    frames: Slot[int]
    width: Slot[int]
    height: Slot[int]
    inflow_count: Slot[int]
    inflow_velocity: Slot[int]
    inflow_radius: Slot[int]
    inflow_padding: Slot[int]
    inflow_duration: Slot[int]
    def __init__(self, node: "Node"):
        self.invert = Slot[bool](node, "invert", 'BOOLEAN')
        self.frames = Slot[int](node, "frames", 'INT')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.inflow_count = Slot[int](node, "inflow_count", 'INT')
        self.inflow_velocity = Slot[int](node, "inflow_velocity", 'INT')
        self.inflow_radius = Slot[int](node, "inflow_radius", 'INT')
        self.inflow_padding = Slot[int](node, "inflow_padding", 'INT')
        self.inflow_duration = Slot[int](node, "inflow_duration", 'INT')

class CreateFluidMaskOutputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "MASK", 'MASK')

class CreateFluidMask(Node[CreateFluidMaskInputs, CreateFluidMaskOutputs]):
    """
    Original name: CreateFluidMask
    No description available.
    """
    _original_name: str = 'CreateFluidMask'

    def __init__(self, invert: bool = False, frames: int = 1, width: int = 256, height: int = 256, inflow_count: int = 3, inflow_velocity: int = 1, inflow_radius: int = 8, inflow_padding: int = 50, inflow_duration: int = 60):
        super().__init__(**{"invert": invert, "frames": frames, "width": width, "height": height, "inflow_count": inflow_count, "inflow_velocity": inflow_velocity, "inflow_radius": inflow_radius, "inflow_padding": inflow_padding, "inflow_duration": inflow_duration})
        self.inputs = CreateFluidMaskInputs(self)
        self.outputs = CreateFluidMaskOutputs(self)
