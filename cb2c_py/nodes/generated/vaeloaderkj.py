
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VAELoaderKJ
class VAELoaderKJInputs(InputSlots):
    vae_name: Slot[str]
    device: Slot[str]
    weight_dtype: Slot[str]
    def __init__(self, node: "Node"):
        self.vae_name = Slot[str](node, "vae_name", [])
        self.device = Slot[str](node, "device", ['main_device', 'cpu'])
        self.weight_dtype = Slot[str](node, "weight_dtype", ['bf16', 'fp16', 'fp32'])

class VAELoaderKJOutputs(OutputSlots):
    vae: Slot[Vae]
    def __init__(self, node: "Node"):
        self.vae = Slot[Vae](node, "VAE", 'VAE')

class VAELoaderKJ(Node[VAELoaderKJInputs, VAELoaderKJOutputs]):
    """
    Original name: VAELoaderKJ
    No description available.
    """
    _original_name: str = 'VAELoaderKJ'

    def __init__(self, vae_name: str, device: str, weight_dtype: str):
        super().__init__(**{"vae_name": vae_name, "device": device, "weight_dtype": weight_dtype})
        self.inputs = VAELoaderKJInputs(self)
        self.outputs = VAELoaderKJOutputs(self)
