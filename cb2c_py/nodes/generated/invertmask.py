
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for InvertMask
class InvertMaskInputs(InputSlots):
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')

class InvertMaskOutputs(OutputSlots):
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "MASK", 'MASK')

class InvertMask(Node[InvertMaskInputs, InvertMaskOutputs]):
    """
    Original name: InvertMask
    Category: mask
    

    Inputs:
        - mask (Image)

    Outputs:
        - mask (Image)
    """
    _original_name: str = 'InvertMask'

    def __init__(self, mask: Slot[Image]):
        super().__init__(**{"mask": mask})
        self.inputs = InvertMaskInputs(self)
        self.outputs = InvertMaskOutputs(self)
