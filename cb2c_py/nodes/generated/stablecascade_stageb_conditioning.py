
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for StableCascade_StageB_Conditioning
class StableCascade_StageB_ConditioningInputs(InputSlots):
    conditioning: Slot[Conditioning]
    stage_c: Slot[Latent]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "conditioning", 'CONDITIONING')
        self.stage_c = Slot[Latent](node, "stage_c", 'LATENT')

class StableCascade_StageB_ConditioningOutputs(OutputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "CONDITIONING", 'CONDITIONING')

class StableCascade_StageB_Conditioning(Node[StableCascade_StageB_ConditioningInputs, StableCascade_StageB_ConditioningOutputs]):
    """
    Original name: StableCascade_StageB_Conditioning
    No description available.
    """
    _original_name: str = 'StableCascade_StageB_Conditioning'

    def __init__(self, conditioning: Slot[Conditioning], stage_c: Slot[Latent]):
        super().__init__(**{"conditioning": conditioning, "stage_c": stage_c})
        self.inputs = StableCascade_StageB_ConditioningInputs(self)
        self.outputs = StableCascade_StageB_ConditioningOutputs(self)
