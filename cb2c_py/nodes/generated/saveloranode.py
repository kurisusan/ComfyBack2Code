
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SaveLoRANode
class SaveLoRANodeInputs(InputSlots):
    lora: Slot[Any]
    prefix: Slot[str]
    def __init__(self, node: "Node"):
        self.lora = Slot[Any](node, "lora", 'LORA_MODEL')
        self.prefix = Slot[str](node, "prefix", 'STRING')

class SaveLoRANodeOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class SaveLoRANode(Node[SaveLoRANodeInputs, SaveLoRANodeOutputs]):
    """
    Original name: SaveLoRANode
    Category: loaders
    

    Inputs:
        - lora (Any)
          The LoRA model to save. Do not use the model with LoRA layers.
        - prefix (str) (default: 'loras/ComfyUI_trained_lora')
          The prefix to use for the saved LoRA file.

    Outputs:
        No outputs.
    """
    _original_name: str = 'SaveLoRANode'

    def __init__(self, lora: Slot[Any], prefix: str = 'loras/ComfyUI_trained_lora'):
        super().__init__(**{"lora": lora, "prefix": prefix})
        self.inputs = SaveLoRANodeInputs(self)
        self.outputs = SaveLoRANodeOutputs(self)
