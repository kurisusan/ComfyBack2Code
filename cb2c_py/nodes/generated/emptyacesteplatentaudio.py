
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for EmptyAceStepLatentAudio
class EmptyAceStepLatentAudioInputs(InputSlots):
    seconds: Slot[float]
    batch_size: Slot[int]
    def __init__(self, node: "Node"):
        self.seconds = Slot[float](node, "seconds", 'FLOAT')
        self.batch_size = Slot[int](node, "batch_size", 'INT')

class EmptyAceStepLatentAudioOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class EmptyAceStepLatentAudio(Node[EmptyAceStepLatentAudioInputs, EmptyAceStepLatentAudioOutputs]):
    """
    Original name: EmptyAceStepLatentAudio
    No description available.
    """
    _original_name: str = 'EmptyAceStepLatentAudio'

    def __init__(self, seconds: float = 120.0, batch_size: int = 1):
        super().__init__(**{"seconds": seconds, "batch_size": batch_size})
        self.inputs = EmptyAceStepLatentAudioInputs(self)
        self.outputs = EmptyAceStepLatentAudioOutputs(self)
