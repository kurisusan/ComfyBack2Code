
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for Context_Switch__rgthree_
class Context_Switch__rgthree_Inputs(InputSlots):

    def __init__(self, node: "Node"):
        pass

class Context_Switch__rgthree_Outputs(OutputSlots):
    context: Slot[Any]
    model: Slot[Model]
    clip: Slot[Clip]
    vae: Slot[Vae]
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    latent: Slot[Latent]
    image: Slot[Image]
    seed: Slot[int]
    def __init__(self, node: "Node"):
        self.context = Slot[Any](node, "CONTEXT", 'RGTHREE_CONTEXT')
        self.model = Slot[Model](node, "MODEL", 'MODEL')
        self.clip = Slot[Clip](node, "CLIP", 'CLIP')
        self.vae = Slot[Vae](node, "VAE", 'VAE')
        self.positive = Slot[Conditioning](node, "POSITIVE", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "NEGATIVE", 'CONDITIONING')
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.seed = Slot[int](node, "SEED", 'INT')

class Context_Switch__rgthree_(Node[Context_Switch__rgthree_Inputs, Context_Switch__rgthree_Outputs]):
    """
    Original name: Context Switch (rgthree)
    No description available.
    """
    _original_name: str = 'Context Switch (rgthree)'

    def __init__(self, ):
        super().__init__(**{})
        self.inputs = Context_Switch__rgthree_Inputs(self)
        self.outputs = Context_Switch__rgthree_Outputs(self)
