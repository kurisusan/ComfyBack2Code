
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CheckpointPerturbWeights
class CheckpointPerturbWeightsInputs(InputSlots):
    model: Slot[Model]
    joint_blocks: Slot[float]
    final_layer: Slot[float]
    rest_of_the_blocks: Slot[float]
    seed: Slot[int]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.joint_blocks = Slot[float](node, "joint_blocks", 'FLOAT')
        self.final_layer = Slot[float](node, "final_layer", 'FLOAT')
        self.rest_of_the_blocks = Slot[float](node, "rest_of_the_blocks", 'FLOAT')
        self.seed = Slot[int](node, "seed", 'INT')

class CheckpointPerturbWeightsOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class CheckpointPerturbWeights(Node[CheckpointPerturbWeightsInputs, CheckpointPerturbWeightsOutputs]):
    """
    Original name: CheckpointPerturbWeights
    Category: KJNodes/experimental
    

    Inputs:
        - model (Model)
        - joint_blocks (float) (default: 0.02)
        - final_layer (float) (default: 0.02)
        - rest_of_the_blocks (float) (default: 0.02)
        - seed (int) (default: 123)

    Outputs:
        - model (Model)
    """
    _original_name: str = 'CheckpointPerturbWeights'

    def __init__(self, model: Slot[Model], joint_blocks: float = 0.02, final_layer: float = 0.02, rest_of_the_blocks: float = 0.02, seed: int = 123):
        super().__init__(**{"model": model, "joint_blocks": joint_blocks, "final_layer": final_layer, "rest_of_the_blocks": rest_of_the_blocks, "seed": seed})
        self.inputs = CheckpointPerturbWeightsInputs(self)
        self.outputs = CheckpointPerturbWeightsOutputs(self)
