
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for FluxProUltraImageNode
class FluxProUltraImageNodeInputs(InputSlots):
    prompt: Slot[str]
    prompt_upsampling: Slot[bool]
    seed: Slot[int]
    aspect_ratio: Slot[str]
    raw: Slot[bool]
    def __init__(self, node: "Node"):
        self.prompt = Slot[str](node, "prompt", 'STRING')
        self.prompt_upsampling = Slot[bool](node, "prompt_upsampling", 'BOOLEAN')
        self.seed = Slot[int](node, "seed", 'INT')
        self.aspect_ratio = Slot[str](node, "aspect_ratio", 'STRING')
        self.raw = Slot[bool](node, "raw", 'BOOLEAN')

class FluxProUltraImageNodeOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class FluxProUltraImageNode(Node[FluxProUltraImageNodeInputs, FluxProUltraImageNodeOutputs]):
    """
    Original name: FluxProUltraImageNode
    No description available.
    """
    _original_name: str = 'FluxProUltraImageNode'

    def __init__(self, prompt: str = '', prompt_upsampling: bool = False, seed: int = 0, aspect_ratio: str = '16:9', raw: bool = False):
        super().__init__(**{"prompt": prompt, "prompt_upsampling": prompt_upsampling, "seed": seed, "aspect_ratio": aspect_ratio, "raw": raw})
        self.inputs = FluxProUltraImageNodeInputs(self)
        self.outputs = FluxProUltraImageNodeOutputs(self)
