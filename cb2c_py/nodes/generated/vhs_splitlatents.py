
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for VHS_SplitLatents
class VHS_SplitLatentsInputs(InputSlots):
    latents: Slot[Latent]
    split_index: Slot[int]
    def __init__(self, node: "Node"):
        self.latents = Slot[Latent](node, "latents", 'LATENT')
        self.split_index = Slot[int](node, "split_index", 'INT')

class VHS_SplitLatentsOutputs(OutputSlots):
    latent_a: Slot[Latent]
    a_count: Slot[int]
    latent_b: Slot[Latent]
    b_count: Slot[int]
    def __init__(self, node: "Node"):
        self.latent_a = Slot[Latent](node, "LATENT_A", 'LATENT')
        self.a_count = Slot[int](node, "A_count", 'INT')
        self.latent_b = Slot[Latent](node, "LATENT_B", 'LATENT')
        self.b_count = Slot[int](node, "B_count", 'INT')

class VHS_SplitLatents(Node[VHS_SplitLatentsInputs, VHS_SplitLatentsOutputs]):
    """
    Original name: VHS_SplitLatents
    No description available.
    """
    _original_name: str = 'VHS_SplitLatents'

    def __init__(self, latents: Slot[Latent], split_index: int = 0):
        super().__init__(**{"latents": latents, "split_index": split_index})
        self.inputs = VHS_SplitLatentsInputs(self)
        self.outputs = VHS_SplitLatentsOutputs(self)
