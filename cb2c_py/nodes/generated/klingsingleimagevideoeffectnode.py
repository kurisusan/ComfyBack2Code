
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for KlingSingleImageVideoEffectNode
class KlingSingleImageVideoEffectNodeInputs(InputSlots):
    image: Slot[Image]
    effect_scene: Slot[str]
    model_name: Slot[str]
    duration: Slot[str]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.effect_scene = Slot[str](node, "effect_scene", 'COMBO')
        self.model_name = Slot[str](node, "model_name", 'COMBO')
        self.duration = Slot[str](node, "duration", 'COMBO')

class KlingSingleImageVideoEffectNodeOutputs(OutputSlots):
    video: Slot[Any]
    video_id: Slot[str]
    duration: Slot[str]
    def __init__(self, node: "Node"):
        self.video = Slot[Any](node, "VIDEO", 'VIDEO')
        self.video_id = Slot[str](node, "video_id", 'STRING')
        self.duration = Slot[str](node, "duration", 'STRING')

class KlingSingleImageVideoEffectNode(Node[KlingSingleImageVideoEffectNodeInputs, KlingSingleImageVideoEffectNodeOutputs]):
    """
    Original name: KlingSingleImageVideoEffectNode
    No description available.
    """
    _original_name: str = 'KlingSingleImageVideoEffectNode'

    def __init__(self, image: Slot[Image], effect_scene: str, model_name: str, duration: str):
        super().__init__(**{"image": image, "effect_scene": effect_scene, "model_name": model_name, "duration": duration})
        self.inputs = KlingSingleImageVideoEffectNodeInputs(self)
        self.outputs = KlingSingleImageVideoEffectNodeOutputs(self)
