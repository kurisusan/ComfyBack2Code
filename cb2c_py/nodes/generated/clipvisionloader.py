
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CLIPVisionLoader
class CLIPVisionLoaderInputs(InputSlots):
    clip_name: Slot[str]
    def __init__(self, node: "Node"):
        self.clip_name = Slot[str](node, "clip_name", [])

class CLIPVisionLoaderOutputs(OutputSlots):
    clip_vision: Slot[Any]
    def __init__(self, node: "Node"):
        self.clip_vision = Slot[Any](node, "CLIP_VISION", 'CLIP_VISION')

class CLIPVisionLoader(Node[CLIPVisionLoaderInputs, CLIPVisionLoaderOutputs]):
    """
    Original name: CLIPVisionLoader
    Category: loaders
    

    Inputs:
        - clip_name (str)

    Outputs:
        - clip_vision (Any)
    """
    _original_name: str = 'CLIPVisionLoader'

    def __init__(self, clip_name: str):
        super().__init__(**{"clip_name": clip_name})
        self.inputs = CLIPVisionLoaderInputs(self)
        self.outputs = CLIPVisionLoaderOutputs(self)
