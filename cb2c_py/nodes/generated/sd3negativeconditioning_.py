
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SD3NegativeConditioning_
class SD3NegativeConditioning_Inputs(InputSlots):
    conditioning: Slot[Conditioning]
    end: Slot[float]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "conditioning", 'CONDITIONING')
        self.end = Slot[float](node, "end", 'FLOAT')

class SD3NegativeConditioning_Outputs(OutputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "CONDITIONING", 'CONDITIONING')

class SD3NegativeConditioning_(Node[SD3NegativeConditioning_Inputs, SD3NegativeConditioning_Outputs]):
    """
    Original name: SD3NegativeConditioning+
    No description available.
    """
    _original_name: str = 'SD3NegativeConditioning+'

    def __init__(self, conditioning: Slot[Conditioning], end: float = 0.1):
        super().__init__(**{"conditioning": conditioning, "end": end})
        self.inputs = SD3NegativeConditioning_Inputs(self)
        self.outputs = SD3NegativeConditioning_Outputs(self)
