
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageCrop
class ImageCropInputs(InputSlots):
    image: Slot[Image]
    width: Slot[int]
    height: Slot[int]
    x: Slot[int]
    y: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.x = Slot[int](node, "x", 'INT')
        self.y = Slot[int](node, "y", 'INT')

class ImageCropOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageCrop(Node[ImageCropInputs, ImageCropOutputs]):
    """
    Original name: ImageCrop
    Category: image/transform
    

    Inputs:
        - image (Image)
        - width (int) (default: 512)
        - height (int) (default: 512)
        - x (int) (default: 0)
        - y (int) (default: 0)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'ImageCrop'

    def __init__(self, image: Slot[Image], width: int = 512, height: int = 512, x: int = 0, y: int = 0):
        super().__init__(**{"image": image, "width": width, "height": height, "x": x, "y": y})
        self.inputs = ImageCropInputs(self)
        self.outputs = ImageCropOutputs(self)
