
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for CreateVoronoiMask
class CreateVoronoiMaskInputs(InputSlots):
    frames: Slot[int]
    num_points: Slot[int]
    line_width: Slot[int]
    speed: Slot[float]
    frame_width: Slot[int]
    frame_height: Slot[int]
    def __init__(self, node: "Node"):
        self.frames = Slot[int](node, "frames", 'INT')
        self.num_points = Slot[int](node, "num_points", 'INT')
        self.line_width = Slot[int](node, "line_width", 'INT')
        self.speed = Slot[float](node, "speed", 'FLOAT')
        self.frame_width = Slot[int](node, "frame_width", 'INT')
        self.frame_height = Slot[int](node, "frame_height", 'INT')

class CreateVoronoiMaskOutputs(OutputSlots):
    mask: Slot[Any]
    mask_inverted: Slot[Any]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "mask", 'MASK')
        self.mask_inverted = Slot[Any](node, "mask_inverted", 'MASK')

class CreateVoronoiMask(Node[CreateVoronoiMaskInputs, CreateVoronoiMaskOutputs]):
    """
    Original name: CreateVoronoiMask
    No description available.
    """
    _original_name: str = 'CreateVoronoiMask'

    def __init__(self, frames: int = 16, num_points: int = 15, line_width: int = 4, speed: float = 0.5, frame_width: int = 512, frame_height: int = 512):
        super().__init__(**{"frames": frames, "num_points": num_points, "line_width": line_width, "speed": speed, "frame_width": frame_width, "frame_height": frame_height})
        self.inputs = CreateVoronoiMaskInputs(self)
        self.outputs = CreateVoronoiMaskOutputs(self)
