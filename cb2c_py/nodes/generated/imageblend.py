
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ImageBlend
class ImageBlendInputs(InputSlots):
    image1: Slot[Image]
    image2: Slot[Image]
    blend_factor: Slot[float]
    blend_mode: Slot[str]
    def __init__(self, node: "Node"):
        self.image1 = Slot[Image](node, "image1", 'IMAGE')
        self.image2 = Slot[Image](node, "image2", 'IMAGE')
        self.blend_factor = Slot[float](node, "blend_factor", 'FLOAT')
        self.blend_mode = Slot[str](node, "blend_mode", ['normal', 'multiply', 'screen', 'overlay', 'soft_light', 'difference'])

class ImageBlendOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageBlend(Node[ImageBlendInputs, ImageBlendOutputs]):
    """
    Original name: ImageBlend
    No description available.
    """
    _original_name: str = 'ImageBlend'

    def __init__(self, image1: Slot[Image], image2: Slot[Image], blend_mode: str, blend_factor: float = 0.5):
        super().__init__(**{"image1": image1, "image2": image2, "blend_factor": blend_factor, "blend_mode": blend_mode})
        self.inputs = ImageBlendInputs(self)
        self.outputs = ImageBlendOutputs(self)
