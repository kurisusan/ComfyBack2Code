
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LoadWanVideoClipTextEncoder
class LoadWanVideoClipTextEncoderInputs(InputSlots):
    model_name: Slot[str]
    precision: Slot[str]
    def __init__(self, node: "Node"):
        self.model_name = Slot[str](node, "model_name", [])
        self.precision = Slot[str](node, "precision", ['fp16', 'fp32', 'bf16'])

class LoadWanVideoClipTextEncoderOutputs(OutputSlots):
    wan_clip_vision: Slot[Any]
    def __init__(self, node: "Node"):
        self.wan_clip_vision = Slot[Any](node, "wan_clip_vision", 'CLIP_VISION')

class LoadWanVideoClipTextEncoder(Node[LoadWanVideoClipTextEncoderInputs, LoadWanVideoClipTextEncoderOutputs]):
    """
    Original name: LoadWanVideoClipTextEncoder
    No description available.
    """
    _original_name: str = 'LoadWanVideoClipTextEncoder'

    def __init__(self, model_name: str, precision: str = 'fp16'):
        super().__init__(**{"model_name": model_name, "precision": precision})
        self.inputs = LoadWanVideoClipTextEncoderInputs(self)
        self.outputs = LoadWanVideoClipTextEncoderOutputs(self)
