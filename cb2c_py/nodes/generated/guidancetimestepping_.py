
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for GuidanceTimestepping_
class GuidanceTimestepping_Inputs(InputSlots):
    model: Slot[Model]
    value: Slot[float]
    start_at: Slot[float]
    end_at: Slot[float]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.value = Slot[float](node, "value", 'FLOAT')
        self.start_at = Slot[float](node, "start_at", 'FLOAT')
        self.end_at = Slot[float](node, "end_at", 'FLOAT')

class GuidanceTimestepping_Outputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class GuidanceTimestepping_(Node[GuidanceTimestepping_Inputs, GuidanceTimestepping_Outputs]):
    """
    Original name: GuidanceTimestepping+
    No description available.
    """
    _original_name: str = 'GuidanceTimestepping+'

    def __init__(self, model: Slot[Model], value: float = 2.0, start_at: float = 0.2, end_at: float = 0.8):
        super().__init__(**{"model": model, "value": value, "start_at": start_at, "end_at": end_at})
        self.inputs = GuidanceTimestepping_Inputs(self)
        self.outputs = GuidanceTimestepping_Outputs(self)
