
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VAEDecode
class VAEDecodeInputs(InputSlots):
    samples: Slot[Latent]
    vae: Slot[Vae]
    def __init__(self, node: "Node"):
        self.samples = Slot[Latent](node, "samples", 'LATENT')
        self.vae = Slot[Vae](node, "vae", 'VAE')

class VAEDecodeOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class VAEDecode(Node[VAEDecodeInputs, VAEDecodeOutputs]):
    """
    Original name: VAEDecode
    No description available.
    """
    _original_name: str = 'VAEDecode'

    def __init__(self, samples: Slot[Latent], vae: Slot[Vae]):
        super().__init__(**{"samples": samples, "vae": vae})
        self.inputs = VAEDecodeInputs(self)
        self.outputs = VAEDecodeOutputs(self)
