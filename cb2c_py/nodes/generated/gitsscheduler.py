
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for GITSScheduler
class GITSSchedulerInputs(InputSlots):
    coeff: Slot[float]
    steps: Slot[int]
    denoise: Slot[float]
    def __init__(self, node: "Node"):
        self.coeff = Slot[float](node, "coeff", 'FLOAT')
        self.steps = Slot[int](node, "steps", 'INT')
        self.denoise = Slot[float](node, "denoise", 'FLOAT')

class GITSSchedulerOutputs(OutputSlots):
    sigmas: Slot[Any]
    def __init__(self, node: "Node"):
        self.sigmas = Slot[Any](node, "SIGMAS", 'SIGMAS')

class GITSScheduler(Node[GITSSchedulerInputs, GITSSchedulerOutputs]):
    """
    Original name: GITSScheduler
    No description available.
    """
    _original_name: str = 'GITSScheduler'

    def __init__(self, coeff: float = 1.2, steps: int = 10, denoise: float = 1.0):
        super().__init__(**{"coeff": coeff, "steps": steps, "denoise": denoise})
        self.inputs = GITSSchedulerInputs(self)
        self.outputs = GITSSchedulerOutputs(self)
