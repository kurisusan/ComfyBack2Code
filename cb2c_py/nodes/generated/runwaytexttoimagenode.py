
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for RunwayTextToImageNode
class RunwayTextToImageNodeInputs(InputSlots):
    prompt: Slot[str]
    ratio: Slot[Any]
    def __init__(self, node: "Node"):
        self.prompt = Slot[str](node, "prompt", 'STRING')
        self.ratio = Slot[Any](node, "ratio", 'COMBO')

class RunwayTextToImageNodeOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class RunwayTextToImageNode(Node[RunwayTextToImageNodeInputs, RunwayTextToImageNodeOutputs]):
    """
    Original name: RunwayTextToImageNode
    No description available.
    """
    _original_name: str = 'RunwayTextToImageNode'

    def __init__(self, prompt: str, ratio: Slot[Any]):
        super().__init__(**{"prompt": prompt, "ratio": ratio})
        self.inputs = RunwayTextToImageNodeInputs(self)
        self.outputs = RunwayTextToImageNodeOutputs(self)
