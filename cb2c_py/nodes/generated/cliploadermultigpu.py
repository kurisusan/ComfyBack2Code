
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CLIPLoaderMultiGPU
class CLIPLoaderMultiGPUInputs(InputSlots):
    clip_name: Slot[str]
    type: Slot[str]
    def __init__(self, node: "Node"):
        self.clip_name = Slot[str](node, "clip_name", [])
        self.type = Slot[str](node, "type", ['stable_diffusion', 'stable_cascade', 'sd3', 'stable_audio', 'mochi', 'ltxv', 'pixart', 'cosmos', 'lumina2', 'wan', 'hidream', 'chroma', 'ace', 'omnigen2'])

class CLIPLoaderMultiGPUOutputs(OutputSlots):
    clip: Slot[Clip]
    def __init__(self, node: "Node"):
        self.clip = Slot[Clip](node, "CLIP", 'CLIP')

class CLIPLoaderMultiGPU(Node[CLIPLoaderMultiGPUInputs, CLIPLoaderMultiGPUOutputs]):
    """
    Original name: CLIPLoaderMultiGPU
    No description available.
    """
    _original_name: str = 'CLIPLoaderMultiGPU'

    def __init__(self, clip_name: str, type: str):
        super().__init__(**{"clip_name": clip_name, "type": type})
        self.inputs = CLIPLoaderMultiGPUInputs(self)
        self.outputs = CLIPLoaderMultiGPUOutputs(self)
