
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for SamplerLCMUpscale
class SamplerLCMUpscaleInputs(InputSlots):
    scale_ratio: Slot[float]
    scale_steps: Slot[int]
    upscale_method: Slot[str]
    def __init__(self, node: "Node"):
        self.scale_ratio = Slot[float](node, "scale_ratio", 'FLOAT')
        self.scale_steps = Slot[int](node, "scale_steps", 'INT')
        self.upscale_method = Slot[str](node, "upscale_method", ['bislerp', 'nearest-exact', 'bilinear', 'area', 'bicubic'])

class SamplerLCMUpscaleOutputs(OutputSlots):
    sampler: Slot[Any]
    def __init__(self, node: "Node"):
        self.sampler = Slot[Any](node, "SAMPLER", 'SAMPLER')

class SamplerLCMUpscale(Node[SamplerLCMUpscaleInputs, SamplerLCMUpscaleOutputs]):
    """
    Original name: SamplerLCMUpscale
    No description available.
    """
    _original_name: str = 'SamplerLCMUpscale'

    def __init__(self, upscale_method: str, scale_ratio: float = 1.0, scale_steps: int = -1):
        super().__init__(**{"scale_ratio": scale_ratio, "scale_steps": scale_steps, "upscale_method": upscale_method})
        self.inputs = SamplerLCMUpscaleInputs(self)
        self.outputs = SamplerLCMUpscaleOutputs(self)
