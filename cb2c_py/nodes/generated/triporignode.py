
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for TripoRigNode
class TripoRigNodeInputs(InputSlots):
    original_model_task_id: Slot[Any]
    def __init__(self, node: "Node"):
        self.original_model_task_id = Slot[Any](node, "original_model_task_id", 'MODEL_TASK_ID')

class TripoRigNodeOutputs(OutputSlots):
    model_file: Slot[str]
    rig_task_id: Slot[Any]
    def __init__(self, node: "Node"):
        self.model_file = Slot[str](node, "model_file", 'STRING')
        self.rig_task_id = Slot[Any](node, "rig task_id", 'RIG_TASK_ID')

class TripoRigNode(Node[TripoRigNodeInputs, TripoRigNodeOutputs]):
    """
    Original name: TripoRigNode
    Category: api node/3d/Tripo
    

    Inputs:
        - original_model_task_id (Any)

    Outputs:
        - model_file (str)
        - rig_task_id (Any)
    """
    _original_name: str = 'TripoRigNode'

    def __init__(self, original_model_task_id: Slot[Any]):
        super().__init__(**{"original_model_task_id": original_model_task_id})
        self.inputs = TripoRigNodeInputs(self)
        self.outputs = TripoRigNodeOutputs(self)
