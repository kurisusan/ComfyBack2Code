
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for RenderPeopleKps
class RenderPeopleKpsInputs(InputSlots):
    kps: Slot[Any]
    render_body: Slot[bool]
    render_hand: Slot[bool]
    render_face: Slot[bool]
    def __init__(self, node: "Node"):
        self.kps = Slot[Any](node, "kps", 'POSE_KEYPOINT')
        self.render_body = Slot[bool](node, "render_body", 'BOOLEAN')
        self.render_hand = Slot[bool](node, "render_hand", 'BOOLEAN')
        self.render_face = Slot[bool](node, "render_face", 'BOOLEAN')

class RenderPeopleKpsOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class RenderPeopleKps(Node[RenderPeopleKpsInputs, RenderPeopleKpsOutputs]):
    """
    Original name: RenderPeopleKps
    Category: ControlNet Preprocessors/Pose Keypoint Postprocess
    

    Inputs:
        - kps (Any)
        - render_body (bool) (default: True)
        - render_hand (bool) (default: True)
        - render_face (bool) (default: True)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'RenderPeopleKps'

    def __init__(self, kps: Slot[Any], render_body: bool = True, render_hand: bool = True, render_face: bool = True):
        super().__init__(**{"kps": kps, "render_body": render_body, "render_hand": render_hand, "render_face": render_face})
        self.inputs = RenderPeopleKpsInputs(self)
        self.outputs = RenderPeopleKpsOutputs(self)
