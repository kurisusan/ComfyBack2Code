
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for MaskBoundingBox_
class MaskBoundingBox_Inputs(InputSlots):
    mask: Slot[Image]
    padding: Slot[int]
    blur: Slot[int]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')
        self.padding = Slot[int](node, "padding", 'INT')
        self.blur = Slot[int](node, "blur", 'INT')

class MaskBoundingBox_Outputs(OutputSlots):
    mask: Slot[Image]
    image: Slot[Image]
    x: Slot[int]
    y: Slot[int]
    width: Slot[int]
    height: Slot[int]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "MASK", 'MASK')
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.x = Slot[int](node, "x", 'INT')
        self.y = Slot[int](node, "y", 'INT')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')

class MaskBoundingBox_(Node[MaskBoundingBox_Inputs, MaskBoundingBox_Outputs]):
    """
    Original name: MaskBoundingBox+
    Category: essentials/mask
    

    Inputs:
        - mask (Image)
        - padding (int) (default: 0)
        - blur (int) (default: 0)

    Outputs:
        - mask (Image)
        - image (Image)
        - x (int)
        - y (int)
        - width (int)
        - height (int)
    """
    _original_name: str = 'MaskBoundingBox+'

    def __init__(self, mask: Slot[Image], padding: int = 0, blur: int = 0):
        super().__init__(**{"mask": mask, "padding": padding, "blur": blur})
        self.inputs = MaskBoundingBox_Inputs(self)
        self.outputs = MaskBoundingBox_Outputs(self)
