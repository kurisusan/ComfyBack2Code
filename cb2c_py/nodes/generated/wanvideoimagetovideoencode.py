
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoImageToVideoEncode
class WanVideoImageToVideoEncodeInputs(InputSlots):
    vae: Slot[Any]
    width: Slot[int]
    height: Slot[int]
    num_frames: Slot[int]
    noise_aug_strength: Slot[float]
    start_latent_strength: Slot[float]
    end_latent_strength: Slot[float]
    force_offload: Slot[bool]
    def __init__(self, node: "Node"):
        self.vae = Slot[Any](node, "vae", 'WANVAE')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.num_frames = Slot[int](node, "num_frames", 'INT')
        self.noise_aug_strength = Slot[float](node, "noise_aug_strength", 'FLOAT')
        self.start_latent_strength = Slot[float](node, "start_latent_strength", 'FLOAT')
        self.end_latent_strength = Slot[float](node, "end_latent_strength", 'FLOAT')
        self.force_offload = Slot[bool](node, "force_offload", 'BOOLEAN')

class WanVideoImageToVideoEncodeOutputs(OutputSlots):
    image_embeds: Slot[Any]
    def __init__(self, node: "Node"):
        self.image_embeds = Slot[Any](node, "image_embeds", 'WANVIDIMAGE_EMBEDS')

class WanVideoImageToVideoEncode(Node[WanVideoImageToVideoEncodeInputs, WanVideoImageToVideoEncodeOutputs]):
    """
    Original name: WanVideoImageToVideoEncode
    Category: WanVideoWrapper
    

    Inputs:
        - vae (Any)
        - width (int) (default: 832)
          Width of the image to encode
        - height (int) (default: 480)
          Height of the image to encode
        - num_frames (int) (default: 81)
          Number of frames to encode
        - noise_aug_strength (float) (default: 0.0)
          Strength of noise augmentation, helpful for I2V where some noise can add motion and give sharper results
        - start_latent_strength (float) (default: 1.0)
          Additional latent multiplier, helpful for I2V where lower values allow for more motion
        - end_latent_strength (float) (default: 1.0)
          Additional latent multiplier, helpful for I2V where lower values allow for more motion
        - force_offload (bool) (default: True)

    Outputs:
        - image_embeds (Any)
    """
    _original_name: str = 'WanVideoImageToVideoEncode'

    def __init__(self, vae: Slot[Any], width: int = 832, height: int = 480, num_frames: int = 81, noise_aug_strength: float = 0.0, start_latent_strength: float = 1.0, end_latent_strength: float = 1.0, force_offload: bool = True):
        super().__init__(**{"vae": vae, "width": width, "height": height, "num_frames": num_frames, "noise_aug_strength": noise_aug_strength, "start_latent_strength": start_latent_strength, "end_latent_strength": end_latent_strength, "force_offload": force_offload})
        self.inputs = WanVideoImageToVideoEncodeInputs(self)
        self.outputs = WanVideoImageToVideoEncodeOutputs(self)
