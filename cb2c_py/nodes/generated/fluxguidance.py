
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for FluxGuidance
class FluxGuidanceInputs(InputSlots):
    conditioning: Slot[Conditioning]
    guidance: Slot[float]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "conditioning", 'CONDITIONING')
        self.guidance = Slot[float](node, "guidance", 'FLOAT')

class FluxGuidanceOutputs(OutputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "CONDITIONING", 'CONDITIONING')

class FluxGuidance(Node[FluxGuidanceInputs, FluxGuidanceOutputs]):
    """
    Original name: FluxGuidance
    Category: advanced/conditioning/flux
    

    Inputs:
        - conditioning (Conditioning)
        - guidance (float) (default: 3.5)

    Outputs:
        - conditioning (Conditioning)
    """
    _original_name: str = 'FluxGuidance'

    def __init__(self, conditioning: Slot[Conditioning], guidance: float = 3.5):
        super().__init__(**{"conditioning": conditioning, "guidance": guidance})
        self.inputs = FluxGuidanceInputs(self)
        self.outputs = FluxGuidanceOutputs(self)
