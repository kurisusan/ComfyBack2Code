
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class ModelMergeAuraflow(Node):
    """
    Original name: ModelMergeAuraflow
    No description available.
    """
    _inputs = {
    "model1": [
        "MODEL"
    ],
    "model2": [
        "MODEL"
    ],
    "init_x_linear.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "positional_encoding": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "cond_seq_linear.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "register_tokens": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "t_embedder.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "double_layers.0.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "double_layers.1.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "double_layers.2.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "double_layers.3.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.0.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.1.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.2.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.3.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.4.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.5.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.6.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.7.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.8.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.9.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.10.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.11.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.12.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.13.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.14.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.15.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.16.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.17.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.18.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.19.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.20.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.21.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.22.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.23.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.24.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.25.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.26.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.27.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.28.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.29.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.30.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "single_layers.31.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "modF.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ],
    "final_linear.": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.01
        }
    ]
}
    _outputs = [
    "MODEL"
]
    _original_name = "ModelMergeAuraflow"

    def __init__(self, model1, model2, init_x_linear_=1.0, positional_encoding=1.0, cond_seq_linear_=1.0, register_tokens=1.0, t_embedder_=1.0, double_layers_0_=1.0, double_layers_1_=1.0, double_layers_2_=1.0, double_layers_3_=1.0, single_layers_0_=1.0, single_layers_1_=1.0, single_layers_2_=1.0, single_layers_3_=1.0, single_layers_4_=1.0, single_layers_5_=1.0, single_layers_6_=1.0, single_layers_7_=1.0, single_layers_8_=1.0, single_layers_9_=1.0, single_layers_10_=1.0, single_layers_11_=1.0, single_layers_12_=1.0, single_layers_13_=1.0, single_layers_14_=1.0, single_layers_15_=1.0, single_layers_16_=1.0, single_layers_17_=1.0, single_layers_18_=1.0, single_layers_19_=1.0, single_layers_20_=1.0, single_layers_21_=1.0, single_layers_22_=1.0, single_layers_23_=1.0, single_layers_24_=1.0, single_layers_25_=1.0, single_layers_26_=1.0, single_layers_27_=1.0, single_layers_28_=1.0, single_layers_29_=1.0, single_layers_30_=1.0, single_layers_31_=1.0, modF_=1.0, final_linear_=1.0):
        super().__init__(model1=model1, model2=model2, init_x_linear_=init_x_linear_, positional_encoding=positional_encoding, cond_seq_linear_=cond_seq_linear_, register_tokens=register_tokens, t_embedder_=t_embedder_, double_layers_0_=double_layers_0_, double_layers_1_=double_layers_1_, double_layers_2_=double_layers_2_, double_layers_3_=double_layers_3_, single_layers_0_=single_layers_0_, single_layers_1_=single_layers_1_, single_layers_2_=single_layers_2_, single_layers_3_=single_layers_3_, single_layers_4_=single_layers_4_, single_layers_5_=single_layers_5_, single_layers_6_=single_layers_6_, single_layers_7_=single_layers_7_, single_layers_8_=single_layers_8_, single_layers_9_=single_layers_9_, single_layers_10_=single_layers_10_, single_layers_11_=single_layers_11_, single_layers_12_=single_layers_12_, single_layers_13_=single_layers_13_, single_layers_14_=single_layers_14_, single_layers_15_=single_layers_15_, single_layers_16_=single_layers_16_, single_layers_17_=single_layers_17_, single_layers_18_=single_layers_18_, single_layers_19_=single_layers_19_, single_layers_20_=single_layers_20_, single_layers_21_=single_layers_21_, single_layers_22_=single_layers_22_, single_layers_23_=single_layers_23_, single_layers_24_=single_layers_24_, single_layers_25_=single_layers_25_, single_layers_26_=single_layers_26_, single_layers_27_=single_layers_27_, single_layers_28_=single_layers_28_, single_layers_29_=single_layers_29_, single_layers_30_=single_layers_30_, single_layers_31_=single_layers_31_, modF_=modF_, final_linear_=final_linear_)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
