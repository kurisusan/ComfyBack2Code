
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_DuplicateImages
class VHS_DuplicateImagesInputs(InputSlots):
    images: Slot[Image]
    multiply_by: Slot[int]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.multiply_by = Slot[int](node, "multiply_by", 'INT')

class VHS_DuplicateImagesOutputs(OutputSlots):
    image: Slot[Image]
    count: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.count = Slot[int](node, "count", 'INT')

class VHS_DuplicateImages(Node[VHS_DuplicateImagesInputs, VHS_DuplicateImagesOutputs]):
    """
    Original name: VHS_DuplicateImages
    No description available.
    """
    _original_name: str = 'VHS_DuplicateImages'

    def __init__(self, images: Slot[Image], multiply_by: int = 1):
        super().__init__(**{"images": images, "multiply_by": multiply_by})
        self.inputs = VHS_DuplicateImagesInputs(self)
        self.outputs = VHS_DuplicateImagesOutputs(self)
