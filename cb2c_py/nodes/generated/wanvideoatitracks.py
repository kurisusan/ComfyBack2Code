
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoATITracks
class WanVideoATITracksInputs(InputSlots):
    model: Slot[Any]
    tracks: Slot[str]
    width: Slot[int]
    height: Slot[int]
    temperature: Slot[float]
    topk: Slot[int]
    start_percent: Slot[float]
    end_percent: Slot[float]
    def __init__(self, node: "Node"):
        self.model = Slot[Any](node, "model", 'WANVIDEOMODEL')
        self.tracks = Slot[str](node, "tracks", 'STRING')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.temperature = Slot[float](node, "temperature", 'FLOAT')
        self.topk = Slot[int](node, "topk", 'INT')
        self.start_percent = Slot[float](node, "start_percent", 'FLOAT')
        self.end_percent = Slot[float](node, "end_percent", 'FLOAT')

class WanVideoATITracksOutputs(OutputSlots):
    model: Slot[Any]
    def __init__(self, node: "Node"):
        self.model = Slot[Any](node, "model", 'WANVIDEOMODEL')

class WanVideoATITracks(Node[WanVideoATITracksInputs, WanVideoATITracksOutputs]):
    """
    Original name: WanVideoATITracks
    No description available.
    """
    _original_name: str = 'WanVideoATITracks'

    def __init__(self, model: Slot[Any], tracks: str, width: int = 832, height: int = 480, temperature: float = 220.0, topk: int = 2, start_percent: float = 0.0, end_percent: float = 1.0):
        super().__init__(**{"model": model, "tracks": tracks, "width": width, "height": height, "temperature": temperature, "topk": topk, "start_percent": start_percent, "end_percent": end_percent})
        self.inputs = WanVideoATITracksInputs(self)
        self.outputs = WanVideoATITracksOutputs(self)
