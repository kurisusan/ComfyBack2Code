
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for LatentAdd
class LatentAddInputs(InputSlots):
    samples1: Slot[Latent]
    samples2: Slot[Latent]
    def __init__(self, node: "Node"):
        self.samples1 = Slot[Latent](node, "samples1", 'LATENT')
        self.samples2 = Slot[Latent](node, "samples2", 'LATENT')

class LatentAddOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class LatentAdd(Node[LatentAddInputs, LatentAddOutputs]):
    """
    Original name: LatentAdd
    No description available.
    """
    _original_name: str = 'LatentAdd'

    def __init__(self, samples1: Slot[Latent], samples2: Slot[Latent]):
        super().__init__(**{"samples1": samples1, "samples2": samples2})
        self.inputs = LatentAddInputs(self)
        self.outputs = LatentAddOutputs(self)
