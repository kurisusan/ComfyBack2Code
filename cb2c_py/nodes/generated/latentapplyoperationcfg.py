
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for LatentApplyOperationCFG
class LatentApplyOperationCFGInputs(InputSlots):
    model: Slot[Model]
    operation: Slot[Any]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.operation = Slot[Any](node, "operation", 'LATENT_OPERATION')

class LatentApplyOperationCFGOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class LatentApplyOperationCFG(Node[LatentApplyOperationCFGInputs, LatentApplyOperationCFGOutputs]):
    """
    Original name: LatentApplyOperationCFG
    No description available.
    """
    _original_name: str = 'LatentApplyOperationCFG'

    def __init__(self, model: Slot[Model], operation: Slot[Any]):
        super().__init__(**{"model": model, "operation": operation})
        self.inputs = LatentApplyOperationCFGInputs(self)
        self.outputs = LatentApplyOperationCFGOutputs(self)
