
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for QuadrupleCLIPLoaderMultiGPU
class QuadrupleCLIPLoaderMultiGPUInputs(InputSlots):
    clip_name1: Slot[str]
    clip_name2: Slot[str]
    clip_name3: Slot[str]
    clip_name4: Slot[str]
    def __init__(self, node: "Node"):
        self.clip_name1 = Slot[str](node, "clip_name1", ['umt5_xxl_fp8_e4m3fn_scaled.safetensors'])
        self.clip_name2 = Slot[str](node, "clip_name2", ['umt5_xxl_fp8_e4m3fn_scaled.safetensors'])
        self.clip_name3 = Slot[str](node, "clip_name3", ['umt5_xxl_fp8_e4m3fn_scaled.safetensors'])
        self.clip_name4 = Slot[str](node, "clip_name4", ['umt5_xxl_fp8_e4m3fn_scaled.safetensors'])

class QuadrupleCLIPLoaderMultiGPUOutputs(OutputSlots):
    clip: Slot[Clip]
    def __init__(self, node: "Node"):
        self.clip = Slot[Clip](node, "CLIP", 'CLIP')

class QuadrupleCLIPLoaderMultiGPU(Node[QuadrupleCLIPLoaderMultiGPUInputs, QuadrupleCLIPLoaderMultiGPUOutputs]):
    """
    Original name: QuadrupleCLIPLoaderMultiGPU
    Category: multigpu
    [Recipes]

hidream: long clip-l, long clip-g, t5xxl, llama_8b_3.1_instruct

    Inputs:
        - clip_name1 (str)
        - clip_name2 (str)
        - clip_name3 (str)
        - clip_name4 (str)

    Outputs:
        - clip (Clip)
    """
    _original_name: str = 'QuadrupleCLIPLoaderMultiGPU'

    def __init__(self, clip_name1: str, clip_name2: str, clip_name3: str, clip_name4: str):
        super().__init__(**{"clip_name1": clip_name1, "clip_name2": clip_name2, "clip_name3": clip_name3, "clip_name4": clip_name4})
        self.inputs = QuadrupleCLIPLoaderMultiGPUInputs(self)
        self.outputs = QuadrupleCLIPLoaderMultiGPUOutputs(self)
