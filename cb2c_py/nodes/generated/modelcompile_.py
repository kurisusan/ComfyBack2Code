
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ModelCompile_
class ModelCompile_Inputs(InputSlots):
    model: Slot[Model]
    fullgraph: Slot[bool]
    dynamic: Slot[bool]
    mode: Slot[str]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.fullgraph = Slot[bool](node, "fullgraph", 'BOOLEAN')
        self.dynamic = Slot[bool](node, "dynamic", 'BOOLEAN')
        self.mode = Slot[str](node, "mode", ['default', 'reduce-overhead', 'max-autotune', 'max-autotune-no-cudagraphs'])

class ModelCompile_Outputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class ModelCompile_(Node[ModelCompile_Inputs, ModelCompile_Outputs]):
    """
    Original name: ModelCompile+
    No description available.
    """
    _original_name: str = 'ModelCompile+'

    def __init__(self, model: Slot[Model], mode: str, fullgraph: bool = False, dynamic: bool = False):
        super().__init__(**{"model": model, "fullgraph": fullgraph, "dynamic": dynamic, "mode": mode})
        self.inputs = ModelCompile_Inputs(self)
        self.outputs = ModelCompile_Outputs(self)
