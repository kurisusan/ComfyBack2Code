
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LatentApplyOperation
class LatentApplyOperationInputs(InputSlots):
    samples: Slot[Latent]
    operation: Slot[Any]
    def __init__(self, node: "Node"):
        self.samples = Slot[Latent](node, "samples", 'LATENT')
        self.operation = Slot[Any](node, "operation", 'LATENT_OPERATION')

class LatentApplyOperationOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class LatentApplyOperation(Node[LatentApplyOperationInputs, LatentApplyOperationOutputs]):
    """
    Original name: LatentApplyOperation
    Category: latent/advanced/operations
    

    Inputs:
        - samples (Latent)
        - operation (Any)

    Outputs:
        - latent (Latent)
    """
    _original_name: str = 'LatentApplyOperation'

    def __init__(self, samples: Slot[Latent], operation: Slot[Any]):
        super().__init__(**{"samples": samples, "operation": operation})
        self.inputs = LatentApplyOperationInputs(self)
        self.outputs = LatentApplyOperationOutputs(self)
