
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class WanVideoImageToVideoMultiTalk(Node):
    """
    Original name: WanVideoImageToVideoMultiTalk
    No description available.
    """
    _inputs = {
    "vae": [
        "WANVAE"
    ],
    "width": [
        "INT",
        {
            "default": 832,
            "min": 64,
            "max": 2048,
            "step": 8,
            "tooltip": "Width of the image to encode"
        }
    ],
    "height": [
        "INT",
        {
            "default": 480,
            "min": 64,
            "max": 29048,
            "step": 8,
            "tooltip": "Height of the image to encode"
        }
    ],
    "frame_window_size": [
        "INT",
        {
            "default": 81,
            "min": 1,
            "max": 10000,
            "step": 4,
            "tooltip": "Number of frames to encode"
        }
    ],
    "motion_frame": [
        "INT",
        {
            "default": 25,
            "min": 1,
            "max": 10000,
            "step": 1,
            "tooltip": "Driven frame length used in the long video generation."
        }
    ],
    "force_offload": [
        "BOOLEAN",
        {
            "default": True
        }
    ],
    "colormatch": [
        [
            "disabled",
            "mkl",
            "hm",
            "reinhard",
            "mvgd",
            "hm-mvgd-hm",
            "hm-mkl-hm"
        ],
        {
            "default": "disabled"
        }
    ]
}
    _outputs = [
    "WANVIDIMAGE_EMBEDS"
]
    _original_name = "WanVideoImageToVideoMultiTalk"

    def __init__(self, vae, width=832, height=480, frame_window_size=81, motion_frame=25, force_offload=True, colormatch="disabled"):
        super().__init__(vae=vae, width=width, height=height, frame_window_size=frame_window_size, motion_frame=motion_frame, force_offload=force_offload, colormatch=colormatch)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
