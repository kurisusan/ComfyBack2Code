
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoImageToVideoMultiTalk
class WanVideoImageToVideoMultiTalkInputs(InputSlots):
    vae: Slot[Any]
    width: Slot[int]
    height: Slot[int]
    frame_window_size: Slot[int]
    motion_frame: Slot[int]
    force_offload: Slot[bool]
    colormatch: Slot[str]
    def __init__(self, node: "Node"):
        self.vae = Slot[Any](node, "vae", 'WANVAE')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.frame_window_size = Slot[int](node, "frame_window_size", 'INT')
        self.motion_frame = Slot[int](node, "motion_frame", 'INT')
        self.force_offload = Slot[bool](node, "force_offload", 'BOOLEAN')
        self.colormatch = Slot[str](node, "colormatch", ['disabled', 'mkl', 'hm', 'reinhard', 'mvgd', 'hm-mvgd-hm', 'hm-mkl-hm'])

class WanVideoImageToVideoMultiTalkOutputs(OutputSlots):
    image_embeds: Slot[Any]
    def __init__(self, node: "Node"):
        self.image_embeds = Slot[Any](node, "image_embeds", 'WANVIDIMAGE_EMBEDS')

class WanVideoImageToVideoMultiTalk(Node[WanVideoImageToVideoMultiTalkInputs, WanVideoImageToVideoMultiTalkOutputs]):
    """
    Original name: WanVideoImageToVideoMultiTalk
    Category: WanVideoWrapper
    

    Inputs:
        - vae (Any)
        - width (int) (default: 832)
          Width of the image to encode
        - height (int) (default: 480)
          Height of the image to encode
        - frame_window_size (int) (default: 81)
          Number of frames to encode
        - motion_frame (int) (default: 25)
          Driven frame length used in the long video generation.
        - force_offload (bool) (default: True)
        - colormatch (str) (default: 'disabled')

    Outputs:
        - image_embeds (Any)
    """
    _original_name: str = 'WanVideoImageToVideoMultiTalk'

    def __init__(self, vae: Slot[Any], width: int = 832, height: int = 480, frame_window_size: int = 81, motion_frame: int = 25, force_offload: bool = True, colormatch: str = 'disabled'):
        super().__init__(**{"vae": vae, "width": width, "height": height, "frame_window_size": frame_window_size, "motion_frame": motion_frame, "force_offload": force_offload, "colormatch": colormatch})
        self.inputs = WanVideoImageToVideoMultiTalkInputs(self)
        self.outputs = WanVideoImageToVideoMultiTalkOutputs(self)
