
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for StabilityUpscaleConservativeNode
class StabilityUpscaleConservativeNodeInputs(InputSlots):
    image: Slot[Image]
    prompt: Slot[str]
    creativity: Slot[float]
    seed: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.prompt = Slot[str](node, "prompt", 'STRING')
        self.creativity = Slot[float](node, "creativity", 'FLOAT')
        self.seed = Slot[int](node, "seed", 'INT')

class StabilityUpscaleConservativeNodeOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class StabilityUpscaleConservativeNode(Node[StabilityUpscaleConservativeNodeInputs, StabilityUpscaleConservativeNodeOutputs]):
    """
    Original name: StabilityUpscaleConservativeNode
    Category: api node/image/Stability AI
    Upscale image with minimal alterations to 4K resolution.

    Inputs:
        - image (Image)
        - prompt (str) (default: '')
          What you wish to see in the output image. A strong, descriptive prompt that clearly defines elements, colors, and subjects will lead to better results.
        - creativity (float) (default: 0.35)
          Controls the likelihood of creating additional details not heavily conditioned by the init image.
        - seed (int) (default: 0)
          The random seed used for creating the noise.

    Outputs:
        - image (Image)
    """
    _original_name: str = 'StabilityUpscaleConservativeNode'

    def __init__(self, image: Slot[Image], prompt: str = '', creativity: float = 0.35, seed: int = 0):
        super().__init__(**{"image": image, "prompt": prompt, "creativity": creativity, "seed": seed})
        self.inputs = StabilityUpscaleConservativeNodeInputs(self)
        self.outputs = StabilityUpscaleConservativeNodeOutputs(self)
