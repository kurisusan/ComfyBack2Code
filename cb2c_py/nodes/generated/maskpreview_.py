
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for MaskPreview_
class MaskPreview_Inputs(InputSlots):
    mask: Slot[Any]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "mask", 'MASK')

class MaskPreview_Outputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class MaskPreview_(Node[MaskPreview_Inputs, MaskPreview_Outputs]):
    """
    Original name: MaskPreview+
    No description available.
    """
    _original_name: str = 'MaskPreview+'

    def __init__(self, mask: Slot[Any]):
        super().__init__(**{"mask": mask})
        self.inputs = MaskPreview_Inputs(self)
        self.outputs = MaskPreview_Outputs(self)
