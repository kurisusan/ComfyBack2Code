
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for VHS_DuplicateMasks
class VHS_DuplicateMasksInputs(InputSlots):
    mask: Slot[Any]
    multiply_by: Slot[int]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "mask", 'MASK')
        self.multiply_by = Slot[int](node, "multiply_by", 'INT')

class VHS_DuplicateMasksOutputs(OutputSlots):
    mask: Slot[Any]
    count: Slot[int]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "MASK", 'MASK')
        self.count = Slot[int](node, "count", 'INT')

class VHS_DuplicateMasks(Node[VHS_DuplicateMasksInputs, VHS_DuplicateMasksOutputs]):
    """
    Original name: VHS_DuplicateMasks
    No description available.
    """
    _original_name: str = 'VHS_DuplicateMasks'

    def __init__(self, mask: Slot[Any], multiply_by: int = 1):
        super().__init__(**{"mask": mask, "multiply_by": multiply_by})
        self.inputs = VHS_DuplicateMasksInputs(self)
        self.outputs = VHS_DuplicateMasksOutputs(self)
