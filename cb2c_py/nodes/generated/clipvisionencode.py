
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CLIPVisionEncode
class CLIPVisionEncodeInputs(InputSlots):
    clip_vision: Slot[Any]
    image: Slot[Image]
    crop: Slot[str]
    def __init__(self, node: "Node"):
        self.clip_vision = Slot[Any](node, "clip_vision", 'CLIP_VISION')
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.crop = Slot[str](node, "crop", ['center', 'none'])

class CLIPVisionEncodeOutputs(OutputSlots):
    clip_vision_output: Slot[Any]
    def __init__(self, node: "Node"):
        self.clip_vision_output = Slot[Any](node, "CLIP_VISION_OUTPUT", 'CLIP_VISION_OUTPUT')

class CLIPVisionEncode(Node[CLIPVisionEncodeInputs, CLIPVisionEncodeOutputs]):
    """
    Original name: CLIPVisionEncode
    No description available.
    """
    _original_name: str = 'CLIPVisionEncode'

    def __init__(self, clip_vision: Slot[Any], image: Slot[Image], crop: str):
        super().__init__(**{"clip_vision": clip_vision, "image": image, "crop": crop})
        self.inputs = CLIPVisionEncodeInputs(self)
        self.outputs = CLIPVisionEncodeOutputs(self)
