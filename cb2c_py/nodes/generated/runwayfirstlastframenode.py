
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for RunwayFirstLastFrameNode
class RunwayFirstLastFrameNodeInputs(InputSlots):
    prompt: Slot[str]
    start_frame: Slot[Image]
    end_frame: Slot[Image]
    duration: Slot[str]
    ratio: Slot[str]
    seed: Slot[int]
    def __init__(self, node: "Node"):
        self.prompt = Slot[str](node, "prompt", 'STRING')
        self.start_frame = Slot[Image](node, "start_frame", 'IMAGE')
        self.end_frame = Slot[Image](node, "end_frame", 'IMAGE')
        self.duration = Slot[str](node, "duration", 'COMBO')
        self.ratio = Slot[str](node, "ratio", 'COMBO')
        self.seed = Slot[int](node, "seed", 'INT')

class RunwayFirstLastFrameNodeOutputs(OutputSlots):
    video: Slot[Any]
    def __init__(self, node: "Node"):
        self.video = Slot[Any](node, "VIDEO", 'VIDEO')

class RunwayFirstLastFrameNode(Node[RunwayFirstLastFrameNodeInputs, RunwayFirstLastFrameNodeOutputs]):
    """
    Original name: RunwayFirstLastFrameNode
    Category: api node/video/Runway
    Upload first and last keyframes, draft a prompt, and generate a video. More complex transitions, such as cases where the Last frame is completely different from the First frame, may benefit from the longer 10s duration. This would give the generation more time to smoothly transition between the two inputs. Before diving in, review these best practices to ensure that your input selections will set your generation up for success: https://help.runwayml.com/hc/en-us/articles/34170748696595-Creating-with-Keyframes-on-Gen-3.

    Inputs:
        - prompt (str) (default: None)
          Text prompt for the generation
        - start_frame (Image)
          Start frame to be used for the video
        - end_frame (Image)
          End frame to be used for the video. Supported for gen3a_turbo only.
        - duration (Any)
        - ratio (Any)
        - seed (int)
          Random seed for generation

    Outputs:
        - video (Any)
    """
    _original_name: str = 'RunwayFirstLastFrameNode'

    def __init__(self, start_frame: Slot[Image], end_frame: Slot[Image], duration: str, ratio: str, seed: int, prompt: str = None):
        super().__init__(**{"prompt": prompt, "start_frame": start_frame, "end_frame": end_frame, "duration": duration, "ratio": ratio, "seed": seed})
        self.inputs = RunwayFirstLastFrameNodeInputs(self)
        self.outputs = RunwayFirstLastFrameNodeOutputs(self)
