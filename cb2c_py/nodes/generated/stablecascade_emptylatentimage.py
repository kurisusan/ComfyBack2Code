
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for StableCascade_EmptyLatentImage
class StableCascade_EmptyLatentImageInputs(InputSlots):
    width: Slot[int]
    height: Slot[int]
    compression: Slot[int]
    batch_size: Slot[int]
    def __init__(self, node: "Node"):
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.compression = Slot[int](node, "compression", 'INT')
        self.batch_size = Slot[int](node, "batch_size", 'INT')

class StableCascade_EmptyLatentImageOutputs(OutputSlots):
    stage_c: Slot[Latent]
    stage_b: Slot[Latent]
    def __init__(self, node: "Node"):
        self.stage_c = Slot[Latent](node, "stage_c", 'LATENT')
        self.stage_b = Slot[Latent](node, "stage_b", 'LATENT')

class StableCascade_EmptyLatentImage(Node[StableCascade_EmptyLatentImageInputs, StableCascade_EmptyLatentImageOutputs]):
    """
    Original name: StableCascade_EmptyLatentImage
    Category: latent/stable_cascade
    

    Inputs:
        - width (int) (default: 1024)
        - height (int) (default: 1024)
        - compression (int) (default: 42)
        - batch_size (int) (default: 1)

    Outputs:
        - stage_c (Latent)
        - stage_b (Latent)
    """
    _original_name: str = 'StableCascade_EmptyLatentImage'

    def __init__(self, width: int = 1024, height: int = 1024, compression: int = 42, batch_size: int = 1):
        super().__init__(**{"width": width, "height": height, "compression": compression, "batch_size": batch_size})
        self.inputs = StableCascade_EmptyLatentImageInputs(self)
        self.outputs = StableCascade_EmptyLatentImageOutputs(self)
