
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for LatentRotate
class LatentRotateInputs(InputSlots):
    samples: Slot[Latent]
    rotation: Slot[str]
    def __init__(self, node: "Node"):
        self.samples = Slot[Latent](node, "samples", 'LATENT')
        self.rotation = Slot[str](node, "rotation", ['none', '90 degrees', '180 degrees', '270 degrees'])

class LatentRotateOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class LatentRotate(Node[LatentRotateInputs, LatentRotateOutputs]):
    """
    Original name: LatentRotate
    No description available.
    """
    _original_name: str = 'LatentRotate'

    def __init__(self, samples: Slot[Latent], rotation: str):
        super().__init__(**{"samples": samples, "rotation": rotation})
        self.inputs = LatentRotateInputs(self)
        self.outputs = LatentRotateOutputs(self)
