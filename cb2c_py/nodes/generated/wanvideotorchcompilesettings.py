
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class WanVideoTorchCompileSettings(Node):
    """
    Original name: WanVideoTorchCompileSettings
    No description available.
    """
    _inputs = {
    "backend": [
        [
            "inductor",
            "cudagraphs"
        ],
        {
            "default": "inductor"
        }
    ],
    "fullgraph": [
        "BOOLEAN",
        {
            "default": False,
            "tooltip": "Enable full graph mode"
        }
    ],
    "mode": [
        [
            "default",
            "max-autotune",
            "max-autotune-no-cudagraphs",
            "reduce-overhead"
        ],
        {
            "default": "default"
        }
    ],
    "dynamic": [
        "BOOLEAN",
        {
            "default": False,
            "tooltip": "Enable dynamic mode"
        }
    ],
    "dynamo_cache_size_limit": [
        "INT",
        {
            "default": 64,
            "min": 0,
            "max": 1024,
            "step": 1,
            "tooltip": "torch._dynamo.config.cache_size_limit"
        }
    ],
    "compile_transformer_blocks_only": [
        "BOOLEAN",
        {
            "default": True,
            "tooltip": "Compile only the transformer blocks, usually enough and can make compilation faster and less error prone"
        }
    ]
}
    _outputs = [
    "WANCOMPILEARGS"
]
    _original_name = "WanVideoTorchCompileSettings"

    def __init__(self, backend="inductor", fullgraph=False, mode="default", dynamic=False, dynamo_cache_size_limit=64, compile_transformer_blocks_only=True):
        super().__init__(backend=backend, fullgraph=fullgraph, mode=mode, dynamic=dynamic, dynamo_cache_size_limit=dynamo_cache_size_limit, compile_transformer_blocks_only=compile_transformer_blocks_only)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
