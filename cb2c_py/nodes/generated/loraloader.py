
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class LoraLoader(Node):
    """
    Original name: LoraLoader
    No description available.
    """
    _inputs = {
    "model": [
        "MODEL",
        {
            "tooltip": "The diffusion model the LoRA will be applied to."
        }
    ],
    "clip": [
        "CLIP",
        {
            "tooltip": "The CLIP model the LoRA will be applied to."
        }
    ],
    "lora_name": [
        [
            "MoXinV1.safetensors",
            "Wan21_CausVid_14B_T2V_lora_rank32.safetensors",
            "Wan21_CausVid_bidirect2_T2V_1_3B_lora_rank32.safetensors",
            "blindbox_v1_mix.safetensors"
        ],
        {
            "tooltip": "The name of the LoRA."
        }
    ],
    "strength_model": [
        "FLOAT",
        {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 0.01,
            "tooltip": "How strongly to modify the diffusion model. This value can be negative."
        }
    ],
    "strength_clip": [
        "FLOAT",
        {
            "default": 1.0,
            "min": -100.0,
            "max": 100.0,
            "step": 0.01,
            "tooltip": "How strongly to modify the CLIP model. This value can be negative."
        }
    ]
}
    _outputs = [
    "MODEL",
    "CLIP"
]
    _original_name = "LoraLoader"

    def __init__(self, model, clip, lora_name, strength_model=1.0, strength_clip=1.0):
        super().__init__(model=model, clip=clip, lora_name=lora_name, strength_model=strength_model, strength_clip=strength_clip)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
