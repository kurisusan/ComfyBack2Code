
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoVACEStartToEndFrame
class WanVideoVACEStartToEndFrameInputs(InputSlots):
    num_frames: Slot[int]
    empty_frame_level: Slot[float]
    def __init__(self, node: "Node"):
        self.num_frames = Slot[int](node, "num_frames", 'INT')
        self.empty_frame_level = Slot[float](node, "empty_frame_level", 'FLOAT')

class WanVideoVACEStartToEndFrameOutputs(OutputSlots):
    images: Slot[Image]
    masks: Slot[Image]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.masks = Slot[Image](node, "masks", 'MASK')

class WanVideoVACEStartToEndFrame(Node[WanVideoVACEStartToEndFrameInputs, WanVideoVACEStartToEndFrameOutputs]):
    """
    Original name: WanVideoVACEStartToEndFrame
    No description available.
    """
    _original_name: str = 'WanVideoVACEStartToEndFrame'

    def __init__(self, num_frames: int = 81, empty_frame_level: float = 0.5):
        super().__init__(**{"num_frames": num_frames, "empty_frame_level": empty_frame_level})
        self.inputs = WanVideoVACEStartToEndFrameInputs(self)
        self.outputs = WanVideoVACEStartToEndFrameOutputs(self)
