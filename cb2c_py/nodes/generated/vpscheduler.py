
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for VPScheduler
class VPSchedulerInputs(InputSlots):
    steps: Slot[int]
    beta_d: Slot[float]
    beta_min: Slot[float]
    eps_s: Slot[float]
    def __init__(self, node: "Node"):
        self.steps = Slot[int](node, "steps", 'INT')
        self.beta_d = Slot[float](node, "beta_d", 'FLOAT')
        self.beta_min = Slot[float](node, "beta_min", 'FLOAT')
        self.eps_s = Slot[float](node, "eps_s", 'FLOAT')

class VPSchedulerOutputs(OutputSlots):
    sigmas: Slot[Any]
    def __init__(self, node: "Node"):
        self.sigmas = Slot[Any](node, "SIGMAS", 'SIGMAS')

class VPScheduler(Node[VPSchedulerInputs, VPSchedulerOutputs]):
    """
    Original name: VPScheduler
    No description available.
    """
    _original_name: str = 'VPScheduler'

    def __init__(self, steps: int = 20, beta_d: float = 19.9, beta_min: float = 0.1, eps_s: float = 0.001):
        super().__init__(**{"steps": steps, "beta_d": beta_d, "beta_min": beta_min, "eps_s": eps_s})
        self.inputs = VPSchedulerInputs(self)
        self.outputs = VPSchedulerOutputs(self)
