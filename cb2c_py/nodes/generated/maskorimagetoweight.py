
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for MaskOrImageToWeight
class MaskOrImageToWeightInputs(InputSlots):
    output_type: Slot[str]
    def __init__(self, node: "Node"):
        self.output_type = Slot[str](node, "output_type", ['list', 'pandas series', 'tensor', 'string'])

class MaskOrImageToWeightOutputs(OutputSlots):
    float: Slot[float]
    string: Slot[str]
    def __init__(self, node: "Node"):
        self.float = Slot[float](node, "FLOAT", 'FLOAT')
        self.string = Slot[str](node, "STRING", 'STRING')

class MaskOrImageToWeight(Node[MaskOrImageToWeightInputs, MaskOrImageToWeightOutputs]):
    """
    Original name: MaskOrImageToWeight
    No description available.
    """
    _original_name: str = 'MaskOrImageToWeight'

    def __init__(self, output_type: str = 'list'):
        super().__init__(**{"output_type": output_type})
        self.inputs = MaskOrImageToWeightInputs(self)
        self.outputs = MaskOrImageToWeightOutputs(self)
