
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LoadImageOutput
class LoadImageOutputInputs(InputSlots):
    image: Slot[str]
    def __init__(self, node: "Node"):
        self.image = Slot[str](node, "image", 'COMBO')

class LoadImageOutputOutputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "MASK", 'MASK')

class LoadImageOutput(Node[LoadImageOutputInputs, LoadImageOutputOutputs]):
    """
    Original name: LoadImageOutput
    Category: image
    Load an image from the output folder. When the refresh button is clicked, the node will update the image list and automatically select the first image, allowing for easy iteration.

    Inputs:
        - image (Any)

    Outputs:
        - image (Image)
        - mask (Image)
    """
    _original_name: str = 'LoadImageOutput'

    def __init__(self, image: str):
        super().__init__(**{"image": image})
        self.inputs = LoadImageOutputInputs(self)
        self.outputs = LoadImageOutputOutputs(self)
