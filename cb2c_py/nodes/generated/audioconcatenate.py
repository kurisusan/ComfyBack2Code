
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for AudioConcatenate
class AudioConcatenateInputs(InputSlots):
    audio1: Slot[Any]
    audio2: Slot[Any]
    direction: Slot[str]
    def __init__(self, node: "Node"):
        self.audio1 = Slot[Any](node, "audio1", 'AUDIO')
        self.audio2 = Slot[Any](node, "audio2", 'AUDIO')
        self.direction = Slot[str](node, "direction", ['right', 'left'])

class AudioConcatenateOutputs(OutputSlots):
    audio: Slot[Any]
    def __init__(self, node: "Node"):
        self.audio = Slot[Any](node, "AUDIO", 'AUDIO')

class AudioConcatenate(Node[AudioConcatenateInputs, AudioConcatenateOutputs]):
    """
    Original name: AudioConcatenate
    No description available.
    """
    _original_name: str = 'AudioConcatenate'

    def __init__(self, audio1: Slot[Any], audio2: Slot[Any], direction: str = 'right'):
        super().__init__(**{"audio1": audio1, "audio2": audio2, "direction": direction})
        self.inputs = AudioConcatenateInputs(self)
        self.outputs = AudioConcatenateOutputs(self)
