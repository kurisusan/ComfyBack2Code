
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for GrowMaskWithBlur
class GrowMaskWithBlurInputs(InputSlots):
    mask: Slot[Image]
    expand: Slot[int]
    incremental_expandrate: Slot[float]
    tapered_corners: Slot[bool]
    flip_input: Slot[bool]
    blur_radius: Slot[float]
    lerp_alpha: Slot[float]
    decay_factor: Slot[float]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')
        self.expand = Slot[int](node, "expand", 'INT')
        self.incremental_expandrate = Slot[float](node, "incremental_expandrate", 'FLOAT')
        self.tapered_corners = Slot[bool](node, "tapered_corners", 'BOOLEAN')
        self.flip_input = Slot[bool](node, "flip_input", 'BOOLEAN')
        self.blur_radius = Slot[float](node, "blur_radius", 'FLOAT')
        self.lerp_alpha = Slot[float](node, "lerp_alpha", 'FLOAT')
        self.decay_factor = Slot[float](node, "decay_factor", 'FLOAT')

class GrowMaskWithBlurOutputs(OutputSlots):
    mask: Slot[Image]
    mask_inverted: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')
        self.mask_inverted = Slot[Image](node, "mask_inverted", 'MASK')

class GrowMaskWithBlur(Node[GrowMaskWithBlurInputs, GrowMaskWithBlurOutputs]):
    """
    Original name: GrowMaskWithBlur
    Category: KJNodes/masking
    
# GrowMaskWithBlur
- mask: Input mask or mask batch
- expand: Expand or contract mask or mask batch by a given amount
- incremental_expandrate: increase expand rate by a given amount per frame
- tapered_corners: use tapered corners
- flip_input: flip input mask
- blur_radius: value higher than 0 will blur the mask
- lerp_alpha: alpha value for interpolation between frames
- decay_factor: decay value for interpolation between frames
- fill_holes: fill holes in the mask (slow)

    Inputs:
        - mask (Image)
        - expand (int) (default: 0)
        - incremental_expandrate (float) (default: 0.0)
        - tapered_corners (bool) (default: True)
        - flip_input (bool) (default: False)
        - blur_radius (float) (default: 0.0)
        - lerp_alpha (float) (default: 1.0)
        - decay_factor (float) (default: 1.0)

    Outputs:
        - mask (Image)
        - mask_inverted (Image)
    """
    _original_name: str = 'GrowMaskWithBlur'

    def __init__(self, mask: Slot[Image], expand: int = 0, incremental_expandrate: float = 0.0, tapered_corners: bool = True, flip_input: bool = False, blur_radius: float = 0.0, lerp_alpha: float = 1.0, decay_factor: float = 1.0):
        super().__init__(**{"mask": mask, "expand": expand, "incremental_expandrate": incremental_expandrate, "tapered_corners": tapered_corners, "flip_input": flip_input, "blur_radius": blur_radius, "lerp_alpha": lerp_alpha, "decay_factor": decay_factor})
        self.inputs = GrowMaskWithBlurInputs(self)
        self.outputs = GrowMaskWithBlurOutputs(self)
