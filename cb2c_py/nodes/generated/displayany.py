
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for DisplayAny
class DisplayAnyInputs(InputSlots):
    input: Slot[Any]
    mode: Slot[str]
    def __init__(self, node: "Node"):
        self.input = Slot[Any](node, "input", '*')
        self.mode = Slot[str](node, "mode", ['raw value', 'tensor shape'])

class DisplayAnyOutputs(OutputSlots):
    string: Slot[str]
    def __init__(self, node: "Node"):
        self.string = Slot[str](node, "STRING", 'STRING')

class DisplayAny(Node[DisplayAnyInputs, DisplayAnyOutputs]):
    """
    Original name: DisplayAny
    Category: essentials/utilities
    

    Inputs:
        - input (Any)
        - mode (str)

    Outputs:
        - string (str)
    """
    _original_name: str = 'DisplayAny'

    def __init__(self, input: Slot[Any], mode: str):
        super().__init__(**{"input": input, "mode": mode})
        self.inputs = DisplayAnyInputs(self)
        self.outputs = DisplayAnyOutputs(self)
