
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SoundReactive
class SoundReactiveInputs(InputSlots):
    sound_level: Slot[float]
    start_range_hz: Slot[int]
    end_range_hz: Slot[int]
    multiplier: Slot[float]
    smoothing_factor: Slot[float]
    normalize: Slot[bool]
    def __init__(self, node: "Node"):
        self.sound_level = Slot[float](node, "sound_level", 'FLOAT')
        self.start_range_hz = Slot[int](node, "start_range_hz", 'INT')
        self.end_range_hz = Slot[int](node, "end_range_hz", 'INT')
        self.multiplier = Slot[float](node, "multiplier", 'FLOAT')
        self.smoothing_factor = Slot[float](node, "smoothing_factor", 'FLOAT')
        self.normalize = Slot[bool](node, "normalize", 'BOOLEAN')

class SoundReactiveOutputs(OutputSlots):
    sound_level: Slot[float]
    sound_level_int: Slot[int]
    def __init__(self, node: "Node"):
        self.sound_level = Slot[float](node, "sound_level", 'FLOAT')
        self.sound_level_int = Slot[int](node, "sound_level_int", 'INT')

class SoundReactive(Node[SoundReactiveInputs, SoundReactiveOutputs]):
    """
    Original name: SoundReactive
    No description available.
    """
    _original_name: str = 'SoundReactive'

    def __init__(self, sound_level: float = 1.0, start_range_hz: int = 150, end_range_hz: int = 2000, multiplier: float = 1.0, smoothing_factor: float = 0.5, normalize: bool = False):
        super().__init__(**{"sound_level": sound_level, "start_range_hz": start_range_hz, "end_range_hz": end_range_hz, "multiplier": multiplier, "smoothing_factor": smoothing_factor, "normalize": normalize})
        self.inputs = SoundReactiveInputs(self)
        self.outputs = SoundReactiveOutputs(self)
