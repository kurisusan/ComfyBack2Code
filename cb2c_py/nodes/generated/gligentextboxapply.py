
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for GLIGENTextBoxApply
class GLIGENTextBoxApplyInputs(InputSlots):
    conditioning_to: Slot[Conditioning]
    clip: Slot[Clip]
    gligen_textbox_model: Slot[Any]
    text: Slot[str]
    width: Slot[int]
    height: Slot[int]
    x: Slot[int]
    y: Slot[int]
    def __init__(self, node: "Node"):
        self.conditioning_to = Slot[Conditioning](node, "conditioning_to", 'CONDITIONING')
        self.clip = Slot[Clip](node, "clip", 'CLIP')
        self.gligen_textbox_model = Slot[Any](node, "gligen_textbox_model", 'GLIGEN')
        self.text = Slot[str](node, "text", 'STRING')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.x = Slot[int](node, "x", 'INT')
        self.y = Slot[int](node, "y", 'INT')

class GLIGENTextBoxApplyOutputs(OutputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "CONDITIONING", 'CONDITIONING')

class GLIGENTextBoxApply(Node[GLIGENTextBoxApplyInputs, GLIGENTextBoxApplyOutputs]):
    """
    Original name: GLIGENTextBoxApply
    Category: conditioning/gligen
    

    Inputs:
        - conditioning_to (Conditioning)
        - clip (Clip)
        - gligen_textbox_model (Any)
        - text (str)
        - width (int) (default: 64)
        - height (int) (default: 64)
        - x (int) (default: 0)
        - y (int) (default: 0)

    Outputs:
        - conditioning (Conditioning)
    """
    _original_name: str = 'GLIGENTextBoxApply'

    def __init__(self, conditioning_to: Slot[Conditioning], clip: Slot[Clip], gligen_textbox_model: Slot[Any], text: str, width: int = 64, height: int = 64, x: int = 0, y: int = 0):
        super().__init__(**{"conditioning_to": conditioning_to, "clip": clip, "gligen_textbox_model": gligen_textbox_model, "text": text, "width": width, "height": height, "x": x, "y": y})
        self.inputs = GLIGENTextBoxApplyInputs(self)
        self.outputs = GLIGENTextBoxApplyOutputs(self)
