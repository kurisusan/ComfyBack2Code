
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class GLIGENTextBoxApply(Node):
    """
    Original name: GLIGENTextBoxApply
    No description available.
    """
    _inputs = {
    "conditioning_to": [
        "CONDITIONING"
    ],
    "clip": [
        "CLIP"
    ],
    "gligen_textbox_model": [
        "GLIGEN"
    ],
    "text": [
        "STRING",
        {
            "multiline": True,
            "dynamicPrompts": True
        }
    ],
    "width": [
        "INT",
        {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
        }
    ],
    "height": [
        "INT",
        {
            "default": 64,
            "min": 8,
            "max": 16384,
            "step": 8
        }
    ],
    "x": [
        "INT",
        {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
        }
    ],
    "y": [
        "INT",
        {
            "default": 0,
            "min": 0,
            "max": 16384,
            "step": 8
        }
    ]
}
    _outputs = [
    "CONDITIONING"
]
    _original_name = "GLIGENTextBoxApply"

    def __init__(self, conditioning_to, clip, gligen_textbox_model, text, width=64, height=64, x=0, y=0):
        super().__init__(conditioning_to=conditioning_to, clip=clip, gligen_textbox_model=gligen_textbox_model, text=text, width=width, height=height, x=x, y=y)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
