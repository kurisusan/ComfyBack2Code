
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for RebatchImages
class RebatchImagesInputs(InputSlots):
    images: Slot[Image]
    batch_size: Slot[int]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.batch_size = Slot[int](node, "batch_size", 'INT')

class RebatchImagesOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class RebatchImages(Node[RebatchImagesInputs, RebatchImagesOutputs]):
    """
    Original name: RebatchImages
    Category: image/batch
    

    Inputs:
        - images (Image)
        - batch_size (int) (default: 1)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'RebatchImages'

    def __init__(self, images: Slot[Image], batch_size: int = 1):
        super().__init__(**{"images": images, "batch_size": batch_size})
        self.inputs = RebatchImagesInputs(self)
        self.outputs = RebatchImagesOutputs(self)
