
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ImageUpscaleWithModelBatched
class ImageUpscaleWithModelBatchedInputs(InputSlots):
    upscale_model: Slot[Any]
    images: Slot[Image]
    per_batch: Slot[int]
    def __init__(self, node: "Node"):
        self.upscale_model = Slot[Any](node, "upscale_model", 'UPSCALE_MODEL')
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.per_batch = Slot[int](node, "per_batch", 'INT')

class ImageUpscaleWithModelBatchedOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageUpscaleWithModelBatched(Node[ImageUpscaleWithModelBatchedInputs, ImageUpscaleWithModelBatchedOutputs]):
    """
    Original name: ImageUpscaleWithModelBatched
    No description available.
    """
    _original_name: str = 'ImageUpscaleWithModelBatched'

    def __init__(self, upscale_model: Slot[Any], images: Slot[Image], per_batch: int = 16):
        super().__init__(**{"upscale_model": upscale_model, "images": images, "per_batch": per_batch})
        self.inputs = ImageUpscaleWithModelBatchedInputs(self)
        self.outputs = ImageUpscaleWithModelBatchedOutputs(self)
