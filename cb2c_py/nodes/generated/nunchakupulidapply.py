
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for NunchakuPulidApply
class NunchakuPulidApplyInputs(InputSlots):
    pulid: Slot[Any]
    image: Slot[Image]
    model: Slot[Model]
    ip_weight: Slot[float]
    def __init__(self, node: "Node"):
        self.pulid = Slot[Any](node, "pulid", 'PULID')
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.model = Slot[Model](node, "model", 'MODEL')
        self.ip_weight = Slot[float](node, "ip_weight", 'FLOAT')

class NunchakuPulidApplyOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class NunchakuPulidApply(Node[NunchakuPulidApplyInputs, NunchakuPulidApplyOutputs]):
    """
    Original name: NunchakuPulidApply
    No description available.
    """
    _original_name: str = 'NunchakuPulidApply'

    def __init__(self, pulid: Slot[Any], image: Slot[Image], model: Slot[Model], ip_weight: float = 1.0):
        super().__init__(**{"pulid": pulid, "image": image, "model": model, "ip_weight": ip_weight})
        self.inputs = NunchakuPulidApplyInputs(self)
        self.outputs = NunchakuPulidApplyOutputs(self)
