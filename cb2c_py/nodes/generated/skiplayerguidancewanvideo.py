
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SkipLayerGuidanceWanVideo
class SkipLayerGuidanceWanVideoInputs(InputSlots):
    model: Slot[Model]
    blocks: Slot[str]
    start_percent: Slot[float]
    end_percent: Slot[float]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.blocks = Slot[str](node, "blocks", 'STRING')
        self.start_percent = Slot[float](node, "start_percent", 'FLOAT')
        self.end_percent = Slot[float](node, "end_percent", 'FLOAT')

class SkipLayerGuidanceWanVideoOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class SkipLayerGuidanceWanVideo(Node[SkipLayerGuidanceWanVideoInputs, SkipLayerGuidanceWanVideoOutputs]):
    """
    Original name: SkipLayerGuidanceWanVideo
    No description available.
    """
    _original_name: str = 'SkipLayerGuidanceWanVideo'

    def __init__(self, model: Slot[Model], blocks: str = '10', start_percent: float = 0.2, end_percent: float = 1.0):
        super().__init__(**{"model": model, "blocks": blocks, "start_percent": start_percent, "end_percent": end_percent})
        self.inputs = SkipLayerGuidanceWanVideoInputs(self)
        self.outputs = SkipLayerGuidanceWanVideoOutputs(self)
