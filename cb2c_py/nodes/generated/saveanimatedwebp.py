
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SaveAnimatedWEBP
class SaveAnimatedWEBPInputs(InputSlots):
    images: Slot[Image]
    filename_prefix: Slot[str]
    fps: Slot[float]
    lossless: Slot[bool]
    quality: Slot[int]
    method: Slot[str]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')
        self.fps = Slot[float](node, "fps", 'FLOAT')
        self.lossless = Slot[bool](node, "lossless", 'BOOLEAN')
        self.quality = Slot[int](node, "quality", 'INT')
        self.method = Slot[str](node, "method", ['default', 'fastest', 'slowest'])

class SaveAnimatedWEBPOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class SaveAnimatedWEBP(Node[SaveAnimatedWEBPInputs, SaveAnimatedWEBPOutputs]):
    """
    Original name: SaveAnimatedWEBP
    Category: image/animation
    

    Inputs:
        - images (Image)
        - filename_prefix (str) (default: 'ComfyUI')
        - fps (float) (default: 6.0)
        - lossless (bool) (default: True)
        - quality (int) (default: 80)
        - method (str)

    Outputs:
        No outputs.
    """
    _original_name: str = 'SaveAnimatedWEBP'

    def __init__(self, images: Slot[Image], method: str, filename_prefix: str = 'ComfyUI', fps: float = 6.0, lossless: bool = True, quality: int = 80):
        super().__init__(**{"images": images, "filename_prefix": filename_prefix, "fps": fps, "lossless": lossless, "quality": quality, "method": method})
        self.inputs = SaveAnimatedWEBPInputs(self)
        self.outputs = SaveAnimatedWEBPOutputs(self)
