
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageGenResolutionFromLatent
class ImageGenResolutionFromLatentInputs(InputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "latent", 'LATENT')

class ImageGenResolutionFromLatentOutputs(OutputSlots):
    image_gen_width__int_: Slot[int]
    image_gen_height__int_: Slot[int]
    def __init__(self, node: "Node"):
        self.image_gen_width__int_ = Slot[int](node, "IMAGE_GEN_WIDTH (INT)", 'INT')
        self.image_gen_height__int_ = Slot[int](node, "IMAGE_GEN_HEIGHT (INT)", 'INT')

class ImageGenResolutionFromLatent(Node[ImageGenResolutionFromLatentInputs, ImageGenResolutionFromLatentOutputs]):
    """
    Original name: ImageGenResolutionFromLatent
    No description available.
    """
    _original_name: str = 'ImageGenResolutionFromLatent'

    def __init__(self, latent: Slot[Latent]):
        super().__init__(**{"latent": latent})
        self.inputs = ImageGenResolutionFromLatentInputs(self)
        self.outputs = ImageGenResolutionFromLatentOutputs(self)
