
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SDXL_Empty_Latent_Image__rgthree_
class SDXL_Empty_Latent_Image__rgthree_Inputs(InputSlots):
    dimensions: Slot[str]
    clip_scale: Slot[float]
    batch_size: Slot[int]
    def __init__(self, node: "Node"):
        self.dimensions = Slot[str](node, "dimensions", ['1536 x 640   (landscape)', '1344 x 768   (landscape)', '1216 x 832   (landscape)', '1152 x 896   (landscape)', '1024 x 1024  (square)', ' 896 x 1152  (portrait)', ' 832 x 1216  (portrait)', ' 768 x 1344  (portrait)', ' 640 x 1536  (portrait)'])
        self.clip_scale = Slot[float](node, "clip_scale", 'FLOAT')
        self.batch_size = Slot[int](node, "batch_size", 'INT')

class SDXL_Empty_Latent_Image__rgthree_Outputs(OutputSlots):
    latent: Slot[Latent]
    clip_width: Slot[int]
    clip_height: Slot[int]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')
        self.clip_width = Slot[int](node, "CLIP_WIDTH", 'INT')
        self.clip_height = Slot[int](node, "CLIP_HEIGHT", 'INT')

class SDXL_Empty_Latent_Image__rgthree_(Node[SDXL_Empty_Latent_Image__rgthree_Inputs, SDXL_Empty_Latent_Image__rgthree_Outputs]):
    """
    Original name: SDXL Empty Latent Image (rgthree)
    No description available.
    """
    _original_name: str = 'SDXL Empty Latent Image (rgthree)'

    def __init__(self, dimensions: str = '1024 x 1024  (square)', clip_scale: float = 2.0, batch_size: int = 1):
        super().__init__(**{"dimensions": dimensions, "clip_scale": clip_scale, "batch_size": batch_size})
        self.inputs = SDXL_Empty_Latent_Image__rgthree_Inputs(self)
        self.outputs = SDXL_Empty_Latent_Image__rgthree_Outputs(self)
