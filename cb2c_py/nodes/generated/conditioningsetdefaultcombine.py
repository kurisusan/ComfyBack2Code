
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ConditioningSetDefaultCombine
class ConditioningSetDefaultCombineInputs(InputSlots):
    cond: Slot[Conditioning]
    cond_DEFAULT: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.cond = Slot[Conditioning](node, "cond", 'CONDITIONING')
        self.cond_DEFAULT = Slot[Conditioning](node, "cond_DEFAULT", 'CONDITIONING')

class ConditioningSetDefaultCombineOutputs(OutputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "CONDITIONING", 'CONDITIONING')

class ConditioningSetDefaultCombine(Node[ConditioningSetDefaultCombineInputs, ConditioningSetDefaultCombineOutputs]):
    """
    Original name: ConditioningSetDefaultCombine
    Category: advanced/hooks/cond single
    

    Inputs:
        - cond (Conditioning)
        - cond_DEFAULT (Conditioning)

    Outputs:
        - conditioning (Conditioning)
    """
    _original_name: str = 'ConditioningSetDefaultCombine'

    def __init__(self, cond: Slot[Conditioning], cond_DEFAULT: Slot[Conditioning]):
        super().__init__(**{"cond": cond, "cond_DEFAULT": cond_DEFAULT})
        self.inputs = ConditioningSetDefaultCombineInputs(self)
        self.outputs = ConditioningSetDefaultCombineOutputs(self)
