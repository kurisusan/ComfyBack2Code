
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for FluxProDepthNode
class FluxProDepthNodeInputs(InputSlots):
    control_image: Slot[Image]
    prompt: Slot[str]
    prompt_upsampling: Slot[bool]
    skip_preprocessing: Slot[bool]
    guidance: Slot[Union[float, int]]
    steps: Slot[int]
    seed: Slot[int]
    def __init__(self, node: "Node"):
        self.control_image = Slot[Image](node, "control_image", 'IMAGE')
        self.prompt = Slot[str](node, "prompt", 'STRING')
        self.prompt_upsampling = Slot[bool](node, "prompt_upsampling", 'BOOLEAN')
        self.skip_preprocessing = Slot[bool](node, "skip_preprocessing", 'BOOLEAN')
        self.guidance = Slot[Union[float, int]](node, "guidance", 'FLOAT')
        self.steps = Slot[int](node, "steps", 'INT')
        self.seed = Slot[int](node, "seed", 'INT')

class FluxProDepthNodeOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class FluxProDepthNode(Node[FluxProDepthNodeInputs, FluxProDepthNodeOutputs]):
    """
    Original name: FluxProDepthNode
    No description available.
    """
    _original_name: str = 'FluxProDepthNode'

    def __init__(self, control_image: Slot[Image], prompt: str = '', prompt_upsampling: bool = False, skip_preprocessing: bool = False, guidance: Union[float, int] = 15, steps: int = 50, seed: int = 0):
        super().__init__(**{"control_image": control_image, "prompt": prompt, "prompt_upsampling": prompt_upsampling, "skip_preprocessing": skip_preprocessing, "guidance": guidance, "steps": steps, "seed": seed})
        self.inputs = FluxProDepthNodeInputs(self)
        self.outputs = FluxProDepthNodeOutputs(self)
