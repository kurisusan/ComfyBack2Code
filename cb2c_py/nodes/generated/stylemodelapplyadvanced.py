
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for StyleModelApplyAdvanced
class StyleModelApplyAdvancedInputs(InputSlots):
    conditioning: Slot[Conditioning]
    style_model: Slot[Any]
    clip_vision_output: Slot[Any]
    strength: Slot[float]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "conditioning", 'CONDITIONING')
        self.style_model = Slot[Any](node, "style_model", 'STYLE_MODEL')
        self.clip_vision_output = Slot[Any](node, "clip_vision_output", 'CLIP_VISION_OUTPUT')
        self.strength = Slot[float](node, "strength", 'FLOAT')

class StyleModelApplyAdvancedOutputs(OutputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "CONDITIONING", 'CONDITIONING')

class StyleModelApplyAdvanced(Node[StyleModelApplyAdvancedInputs, StyleModelApplyAdvancedOutputs]):
    """
    Original name: StyleModelApplyAdvanced
    No description available.
    """
    _original_name: str = 'StyleModelApplyAdvanced'

    def __init__(self, conditioning: Slot[Conditioning], style_model: Slot[Any], clip_vision_output: Slot[Any], strength: float = 1.0):
        super().__init__(**{"conditioning": conditioning, "style_model": style_model, "clip_vision_output": clip_vision_output, "strength": strength})
        self.inputs = StyleModelApplyAdvancedInputs(self)
        self.outputs = StyleModelApplyAdvancedOutputs(self)
