
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LoadImage
class LoadImageInputs(InputSlots):
    image: Slot[str]
    def __init__(self, node: "Node"):
        self.image = Slot[str](node, "image", ['example.png'])

class LoadImageOutputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "MASK", 'MASK')

class LoadImage(Node[LoadImageInputs, LoadImageOutputs]):
    """
    Original name: LoadImage
    No description available.
    """
    _original_name: str = 'LoadImage'

    def __init__(self, image: str):
        super().__init__(**{"image": image})
        self.inputs = LoadImageInputs(self)
        self.outputs = LoadImageOutputs(self)
