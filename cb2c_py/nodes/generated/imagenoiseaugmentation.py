
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ImageNoiseAugmentation
class ImageNoiseAugmentationInputs(InputSlots):
    image: Slot[Image]
    noise_aug_strength: Slot[float]
    seed: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.noise_aug_strength = Slot[float](node, "noise_aug_strength", 'FLOAT')
        self.seed = Slot[int](node, "seed", 'INT')

class ImageNoiseAugmentationOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageNoiseAugmentation(Node[ImageNoiseAugmentationInputs, ImageNoiseAugmentationOutputs]):
    """
    Original name: ImageNoiseAugmentation
    No description available.
    """
    _original_name: str = 'ImageNoiseAugmentation'

    def __init__(self, image: Slot[Image], noise_aug_strength: float = None, seed: int = 123):
        super().__init__(**{"image": image, "noise_aug_strength": noise_aug_strength, "seed": seed})
        self.inputs = ImageNoiseAugmentationInputs(self)
        self.outputs = ImageNoiseAugmentationOutputs(self)
