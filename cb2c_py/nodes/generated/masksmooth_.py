
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for MaskSmooth_
class MaskSmooth_Inputs(InputSlots):
    mask: Slot[Any]
    amount: Slot[int]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "mask", 'MASK')
        self.amount = Slot[int](node, "amount", 'INT')

class MaskSmooth_Outputs(OutputSlots):
    mask: Slot[Any]
    def __init__(self, node: "Node"):
        self.mask = Slot[Any](node, "MASK", 'MASK')

class MaskSmooth_(Node[MaskSmooth_Inputs, MaskSmooth_Outputs]):
    """
    Original name: MaskSmooth+
    No description available.
    """
    _original_name: str = 'MaskSmooth+'

    def __init__(self, mask: Slot[Any], amount: int = 0):
        super().__init__(**{"mask": mask, "amount": amount})
        self.inputs = MaskSmooth_Inputs(self)
        self.outputs = MaskSmooth_Outputs(self)
