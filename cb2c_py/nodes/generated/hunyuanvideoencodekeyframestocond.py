
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for HunyuanVideoEncodeKeyframesToCond
class HunyuanVideoEncodeKeyframesToCondInputs(InputSlots):
    model: Slot[Model]
    positive: Slot[Conditioning]
    vae: Slot[Vae]
    start_frame: Slot[Image]
    end_frame: Slot[Image]
    num_frames: Slot[int]
    tile_size: Slot[int]
    overlap: Slot[int]
    temporal_size: Slot[int]
    temporal_overlap: Slot[int]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.vae = Slot[Vae](node, "vae", 'VAE')
        self.start_frame = Slot[Image](node, "start_frame", 'IMAGE')
        self.end_frame = Slot[Image](node, "end_frame", 'IMAGE')
        self.num_frames = Slot[int](node, "num_frames", 'INT')
        self.tile_size = Slot[int](node, "tile_size", 'INT')
        self.overlap = Slot[int](node, "overlap", 'INT')
        self.temporal_size = Slot[int](node, "temporal_size", 'INT')
        self.temporal_overlap = Slot[int](node, "temporal_overlap", 'INT')

class HunyuanVideoEncodeKeyframesToCondOutputs(OutputSlots):
    model: Slot[Model]
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "negative", 'CONDITIONING')
        self.latent = Slot[Latent](node, "latent", 'LATENT')

class HunyuanVideoEncodeKeyframesToCond(Node[HunyuanVideoEncodeKeyframesToCondInputs, HunyuanVideoEncodeKeyframesToCondOutputs]):
    """
    Original name: HunyuanVideoEncodeKeyframesToCond
    No description available.
    """
    _original_name: str = 'HunyuanVideoEncodeKeyframesToCond'

    def __init__(self, model: Slot[Model], positive: Slot[Conditioning], vae: Slot[Vae], start_frame: Slot[Image], end_frame: Slot[Image], num_frames: int = 33, tile_size: int = 512, overlap: int = 64, temporal_size: int = 64, temporal_overlap: int = 8):
        super().__init__(**{"model": model, "positive": positive, "vae": vae, "start_frame": start_frame, "end_frame": end_frame, "num_frames": num_frames, "tile_size": tile_size, "overlap": overlap, "temporal_size": temporal_size, "temporal_overlap": temporal_overlap})
        self.inputs = HunyuanVideoEncodeKeyframesToCondInputs(self)
        self.outputs = HunyuanVideoEncodeKeyframesToCondOutputs(self)
