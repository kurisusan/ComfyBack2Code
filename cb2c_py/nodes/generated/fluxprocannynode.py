
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class FluxProCannyNode(Node):
    """
    Original name: FluxProCannyNode
    No description available.
    """
    _inputs = {
    "control_image": [
        "IMAGE"
    ],
    "prompt": [
        "STRING",
        {
            "multiline": True,
            "default": "",
            "tooltip": "Prompt for the image generation"
        }
    ],
    "prompt_upsampling": [
        "BOOLEAN",
        {
            "default": False,
            "tooltip": "Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation, but results are nondeterministic (same seed will not produce exactly the same result)."
        }
    ],
    "canny_low_threshold": [
        "FLOAT",
        {
            "default": 0.1,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01,
            "tooltip": "Low threshold for Canny edge detection; ignored if skip_processing is True"
        }
    ],
    "canny_high_threshold": [
        "FLOAT",
        {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01,
            "tooltip": "High threshold for Canny edge detection; ignored if skip_processing is True"
        }
    ],
    "skip_preprocessing": [
        "BOOLEAN",
        {
            "default": False,
            "tooltip": "Whether to skip preprocessing; set to True if control_image already is canny-fied, False if it is a raw image."
        }
    ],
    "guidance": [
        "FLOAT",
        {
            "default": 30,
            "min": 1,
            "max": 100,
            "tooltip": "Guidance strength for the image generation process"
        }
    ],
    "steps": [
        "INT",
        {
            "default": 50,
            "min": 15,
            "max": 50,
            "tooltip": "Number of steps for the image generation process"
        }
    ],
    "seed": [
        "INT",
        {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615,
            "control_after_generate": True,
            "tooltip": "The random seed used for creating the noise."
        }
    ]
}
    _outputs = [
    "IMAGE"
]
    _original_name = "FluxProCannyNode"

    def __init__(self, control_image, prompt="", prompt_upsampling=False, canny_low_threshold=0.1, canny_high_threshold=0.4, skip_preprocessing=False, guidance=30, steps=50, seed=0):
        super().__init__(control_image=control_image, prompt=prompt, prompt_upsampling=prompt_upsampling, canny_low_threshold=canny_low_threshold, canny_high_threshold=canny_high_threshold, skip_preprocessing=skip_preprocessing, guidance=guidance, steps=steps, seed=seed)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
