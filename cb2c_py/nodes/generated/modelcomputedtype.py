
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ModelComputeDtype
class ModelComputeDtypeInputs(InputSlots):
    model: Slot[Model]
    dtype: Slot[str]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.dtype = Slot[str](node, "dtype", ['default', 'fp32', 'fp16', 'bf16'])

class ModelComputeDtypeOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class ModelComputeDtype(Node[ModelComputeDtypeInputs, ModelComputeDtypeOutputs]):
    """
    Original name: ModelComputeDtype
    No description available.
    """
    _original_name: str = 'ModelComputeDtype'

    def __init__(self, model: Slot[Model], dtype: str):
        super().__init__(**{"model": model, "dtype": dtype})
        self.inputs = ModelComputeDtypeInputs(self)
        self.outputs = ModelComputeDtypeOutputs(self)
