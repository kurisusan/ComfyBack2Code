
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for VRAM_Debug
class VRAM_DebugInputs(InputSlots):
    empty_cache: Slot[bool]
    gc_collect: Slot[bool]
    unload_all_models: Slot[bool]
    def __init__(self, node: "Node"):
        self.empty_cache = Slot[bool](node, "empty_cache", 'BOOLEAN')
        self.gc_collect = Slot[bool](node, "gc_collect", 'BOOLEAN')
        self.unload_all_models = Slot[bool](node, "unload_all_models", 'BOOLEAN')

class VRAM_DebugOutputs(OutputSlots):
    any_output: Slot[Any]
    image_pass: Slot[Image]
    model_pass: Slot[Model]
    freemem_before: Slot[int]
    freemem_after: Slot[int]
    def __init__(self, node: "Node"):
        self.any_output = Slot[Any](node, "any_output", '*')
        self.image_pass = Slot[Image](node, "image_pass", 'IMAGE')
        self.model_pass = Slot[Model](node, "model_pass", 'MODEL')
        self.freemem_before = Slot[int](node, "freemem_before", 'INT')
        self.freemem_after = Slot[int](node, "freemem_after", 'INT')

class VRAM_Debug(Node[VRAM_DebugInputs, VRAM_DebugOutputs]):
    """
    Original name: VRAM_Debug
    No description available.
    """
    _original_name: str = 'VRAM_Debug'

    def __init__(self, empty_cache: bool = True, gc_collect: bool = True, unload_all_models: bool = False):
        super().__init__(**{"empty_cache": empty_cache, "gc_collect": gc_collect, "unload_all_models": unload_all_models})
        self.inputs = VRAM_DebugInputs(self)
        self.outputs = VRAM_DebugOutputs(self)
