
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for StringConcatenate
class StringConcatenateInputs(InputSlots):
    string_a: Slot[str]
    string_b: Slot[str]
    delimiter: Slot[str]
    def __init__(self, node: "Node"):
        self.string_a = Slot[str](node, "string_a", 'STRING')
        self.string_b = Slot[str](node, "string_b", 'STRING')
        self.delimiter = Slot[str](node, "delimiter", 'STRING')

class StringConcatenateOutputs(OutputSlots):
    string: Slot[str]
    def __init__(self, node: "Node"):
        self.string = Slot[str](node, "STRING", 'STRING')

class StringConcatenate(Node[StringConcatenateInputs, StringConcatenateOutputs]):
    """
    Original name: StringConcatenate
    No description available.
    """
    _original_name: str = 'StringConcatenate'

    def __init__(self, string_a: str, string_b: str, delimiter: str = ''):
        super().__init__(**{"string_a": string_a, "string_b": string_b, "delimiter": delimiter})
        self.inputs = StringConcatenateInputs(self)
        self.outputs = StringConcatenateOutputs(self)
