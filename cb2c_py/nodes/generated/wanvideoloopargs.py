
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for WanVideoLoopArgs
class WanVideoLoopArgsInputs(InputSlots):
    shift_skip: Slot[int]
    start_percent: Slot[float]
    end_percent: Slot[float]
    def __init__(self, node: "Node"):
        self.shift_skip = Slot[int](node, "shift_skip", 'INT')
        self.start_percent = Slot[float](node, "start_percent", 'FLOAT')
        self.end_percent = Slot[float](node, "end_percent", 'FLOAT')

class WanVideoLoopArgsOutputs(OutputSlots):
    loop_args: Slot[Any]
    def __init__(self, node: "Node"):
        self.loop_args = Slot[Any](node, "loop_args", 'LOOPARGS')

class WanVideoLoopArgs(Node[WanVideoLoopArgsInputs, WanVideoLoopArgsOutputs]):
    """
    Original name: WanVideoLoopArgs
    No description available.
    """
    _original_name: str = 'WanVideoLoopArgs'

    def __init__(self, shift_skip: int = 6, start_percent: float = 0.0, end_percent: float = 1.0):
        super().__init__(**{"shift_skip": shift_skip, "start_percent": start_percent, "end_percent": end_percent})
        self.inputs = WanVideoLoopArgsInputs(self)
        self.outputs = WanVideoLoopArgsOutputs(self)
