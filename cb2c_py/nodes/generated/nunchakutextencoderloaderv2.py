
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class NunchakuTextEncoderLoaderV2(Node):
    """
    Original name: NunchakuTextEncoderLoaderV2
    No description available.
    """
    _inputs = {
    "model_type": [
        [
            "flux.1"
        ]
    ],
    "text_encoder1": [
        [
            "clip_l.safetensors",
            "oldt5_xxl_fp8_e4m3fn_scaled.safetensors",
            "qwen_2.5_vl_fp16.safetensors",
            "t5xxl_fp8_e4m3fn_scaled.safetensors",
            "umt5_xxl_fp16.safetensors",
            "umt5_xxl_fp8_e4m3fn_scaled.safetensors"
        ]
    ],
    "text_encoder2": [
        [
            "clip_l.safetensors",
            "oldt5_xxl_fp8_e4m3fn_scaled.safetensors",
            "qwen_2.5_vl_fp16.safetensors",
            "t5xxl_fp8_e4m3fn_scaled.safetensors",
            "umt5_xxl_fp16.safetensors",
            "umt5_xxl_fp8_e4m3fn_scaled.safetensors"
        ]
    ],
    "t5_min_length": [
        "INT",
        {
            "default": 512,
            "min": 256,
            "max": 1024,
            "step": 128,
            "display": "number",
            "lazy": True
        }
    ]
}
    _outputs = [
    "CLIP"
]
    _original_name = "NunchakuTextEncoderLoaderV2"

    def __init__(self, model_type, text_encoder1, text_encoder2, t5_min_length=512):
        super().__init__(model_type=model_type, text_encoder1=text_encoder1, text_encoder2=text_encoder2, t5_min_length=t5_min_length)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
