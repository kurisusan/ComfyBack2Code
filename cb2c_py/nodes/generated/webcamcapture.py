
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WebcamCapture
class WebcamCaptureInputs(InputSlots):
    image: Slot[Any]
    width: Slot[int]
    height: Slot[int]
    capture_on_queue: Slot[bool]
    def __init__(self, node: "Node"):
        self.image = Slot[Any](node, "image", 'WEBCAM')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.capture_on_queue = Slot[bool](node, "capture_on_queue", 'BOOLEAN')

class WebcamCaptureOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class WebcamCapture(Node[WebcamCaptureInputs, WebcamCaptureOutputs]):
    """
    Original name: WebcamCapture
    No description available.
    """
    _original_name: str = 'WebcamCapture'

    def __init__(self, image: Slot[Any], width: int = 0, height: int = 0, capture_on_queue: bool = True):
        super().__init__(**{"image": image, "width": width, "height": height, "capture_on_queue": capture_on_queue})
        self.inputs = WebcamCaptureInputs(self)
        self.outputs = WebcamCaptureOutputs(self)
