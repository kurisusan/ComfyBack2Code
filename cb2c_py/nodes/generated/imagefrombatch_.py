
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ImageFromBatch_
class ImageFromBatch_Inputs(InputSlots):
    image: Slot[Image]
    start: Slot[int]
    length: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.start = Slot[int](node, "start", 'INT')
        self.length = Slot[int](node, "length", 'INT')

class ImageFromBatch_Outputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageFromBatch_(Node[ImageFromBatch_Inputs, ImageFromBatch_Outputs]):
    """
    Original name: ImageFromBatch+
    No description available.
    """
    _original_name: str = 'ImageFromBatch+'

    def __init__(self, image: Slot[Image], start: int = 0, length: int = -1):
        super().__init__(**{"image": image, "start": start, "length": length})
        self.inputs = ImageFromBatch_Inputs(self)
        self.outputs = ImageFromBatch_Outputs(self)
