
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for DrawText_
class DrawText_Inputs(InputSlots):
    text: Slot[str]
    font: Slot[str]
    size: Slot[int]
    color: Slot[str]
    background_color: Slot[str]
    shadow_distance: Slot[int]
    shadow_blur: Slot[int]
    shadow_color: Slot[str]
    horizontal_align: Slot[str]
    vertical_align: Slot[str]
    offset_x: Slot[int]
    offset_y: Slot[int]
    direction: Slot[str]
    def __init__(self, node: "Node"):
        self.text = Slot[str](node, "text", 'STRING')
        self.font = Slot[str](node, "font", ['ShareTechMono-Regular.ttf'])
        self.size = Slot[int](node, "size", 'INT')
        self.color = Slot[str](node, "color", 'STRING')
        self.background_color = Slot[str](node, "background_color", 'STRING')
        self.shadow_distance = Slot[int](node, "shadow_distance", 'INT')
        self.shadow_blur = Slot[int](node, "shadow_blur", 'INT')
        self.shadow_color = Slot[str](node, "shadow_color", 'STRING')
        self.horizontal_align = Slot[str](node, "horizontal_align", ['left', 'center', 'right'])
        self.vertical_align = Slot[str](node, "vertical_align", ['top', 'center', 'bottom'])
        self.offset_x = Slot[int](node, "offset_x", 'INT')
        self.offset_y = Slot[int](node, "offset_y", 'INT')
        self.direction = Slot[str](node, "direction", ['ltr', 'rtl'])

class DrawText_Outputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "MASK", 'MASK')

class DrawText_(Node[DrawText_Inputs, DrawText_Outputs]):
    """
    Original name: DrawText+
    Category: essentials/text
    

    Inputs:
        - text (str) (default: 'Hello, World!')
        - font (str)
        - size (int) (default: 56)
        - color (str) (default: '#FFFFFF')
        - background_color (str) (default: '#00000000')
        - shadow_distance (int) (default: 0)
        - shadow_blur (int) (default: 0)
        - shadow_color (str) (default: '#000000')
        - horizontal_align (str)
        - vertical_align (str)
        - offset_x (int) (default: 0)
        - offset_y (int) (default: 0)
        - direction (str)

    Outputs:
        - image (Image)
        - mask (Image)
    """
    _original_name: str = 'DrawText+'

    def __init__(self, font: str, horizontal_align: str, vertical_align: str, direction: str, text: str = 'Hello, World!', size: int = 56, color: str = '#FFFFFF', background_color: str = '#00000000', shadow_distance: int = 0, shadow_blur: int = 0, shadow_color: str = '#000000', offset_x: int = 0, offset_y: int = 0):
        super().__init__(**{"text": text, "font": font, "size": size, "color": color, "background_color": background_color, "shadow_distance": shadow_distance, "shadow_blur": shadow_blur, "shadow_color": shadow_color, "horizontal_align": horizontal_align, "vertical_align": vertical_align, "offset_x": offset_x, "offset_y": offset_y, "direction": direction})
        self.inputs = DrawText_Inputs(self)
        self.outputs = DrawText_Outputs(self)
