
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for VHS_DuplicateLatents
class VHS_DuplicateLatentsInputs(InputSlots):
    latents: Slot[Latent]
    multiply_by: Slot[int]
    def __init__(self, node: "Node"):
        self.latents = Slot[Latent](node, "latents", 'LATENT')
        self.multiply_by = Slot[int](node, "multiply_by", 'INT')

class VHS_DuplicateLatentsOutputs(OutputSlots):
    latent: Slot[Latent]
    count: Slot[int]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')
        self.count = Slot[int](node, "count", 'INT')

class VHS_DuplicateLatents(Node[VHS_DuplicateLatentsInputs, VHS_DuplicateLatentsOutputs]):
    """
    Original name: VHS_DuplicateLatents
    No description available.
    """
    _original_name: str = 'VHS_DuplicateLatents'

    def __init__(self, latents: Slot[Latent], multiply_by: int = 1):
        super().__init__(**{"latents": latents, "multiply_by": multiply_by})
        self.inputs = VHS_DuplicateLatentsInputs(self)
        self.outputs = VHS_DuplicateLatentsOutputs(self)
