
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for SaveImageWithAlpha
class SaveImageWithAlphaInputs(InputSlots):
    images: Slot[Image]
    mask: Slot[Any]
    filename_prefix: Slot[str]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.mask = Slot[Any](node, "mask", 'MASK')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')

class SaveImageWithAlphaOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class SaveImageWithAlpha(Node[SaveImageWithAlphaInputs, SaveImageWithAlphaOutputs]):
    """
    Original name: SaveImageWithAlpha
    No description available.
    """
    _original_name: str = 'SaveImageWithAlpha'

    def __init__(self, images: Slot[Image], mask: Slot[Any], filename_prefix: str = 'ComfyUI'):
        super().__init__(**{"images": images, "mask": mask, "filename_prefix": filename_prefix})
        self.inputs = SaveImageWithAlphaInputs(self)
        self.outputs = SaveImageWithAlphaOutputs(self)
