
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class WanVideoMagCache(Node):
    """
    Original name: WanVideoMagCache
    No description available.
    """
    _inputs = {
    "magcache_thresh": [
        "FLOAT",
        {
            "default": 0.02,
            "min": 0.0,
            "max": 0.3,
            "step": 0.001,
            "tooltip": "How strongly to cache the output of diffusion model. This value must be non-negative."
        }
    ],
    "magcache_K": [
        "INT",
        {
            "default": 4,
            "min": 0,
            "max": 6,
            "step": 1,
            "tooltip": "The maxium skip steps of MagCache."
        }
    ],
    "start_step": [
        "INT",
        {
            "default": 1,
            "min": 0,
            "max": 9999,
            "step": 1,
            "tooltip": "Step to start applying MagCache"
        }
    ],
    "end_step": [
        "INT",
        {
            "default": -1,
            "min": -1,
            "max": 9999,
            "step": 1,
            "tooltip": "Step to end applying MagCache"
        }
    ],
    "cache_device": [
        [
            "main_device",
            "offload_device"
        ],
        {
            "default": "offload_device",
            "tooltip": "Device to cache to"
        }
    ]
}
    _outputs = [
    "CACHEARGS"
]
    _original_name = "WanVideoMagCache"

    def __init__(self, magcache_thresh=0.02, magcache_K=4, start_step=1, end_step=-1, cache_device="offload_device"):
        super().__init__(magcache_thresh=magcache_thresh, magcache_K=magcache_K, start_step=start_step, end_step=end_step, cache_device=cache_device)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
