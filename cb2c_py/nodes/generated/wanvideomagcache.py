
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for WanVideoMagCache
class WanVideoMagCacheInputs(InputSlots):
    magcache_thresh: Slot[float]
    magcache_K: Slot[int]
    start_step: Slot[int]
    end_step: Slot[int]
    cache_device: Slot[str]
    def __init__(self, node: "Node"):
        self.magcache_thresh = Slot[float](node, "magcache_thresh", 'FLOAT')
        self.magcache_K = Slot[int](node, "magcache_K", 'INT')
        self.start_step = Slot[int](node, "start_step", 'INT')
        self.end_step = Slot[int](node, "end_step", 'INT')
        self.cache_device = Slot[str](node, "cache_device", ['main_device', 'offload_device'])

class WanVideoMagCacheOutputs(OutputSlots):
    cache_args: Slot[Any]
    def __init__(self, node: "Node"):
        self.cache_args = Slot[Any](node, "cache_args", 'CACHEARGS')

class WanVideoMagCache(Node[WanVideoMagCacheInputs, WanVideoMagCacheOutputs]):
    """
    Original name: WanVideoMagCache
    Category: WanVideoWrapper
    MagCache for WanVideoWrapper, source https://github.com/Zehong-Ma/MagCache

    Inputs:
        - magcache_thresh (float) (default: 0.02)
          How strongly to cache the output of diffusion model. This value must be non-negative.
        - magcache_K (int) (default: 4)
          The maxium skip steps of MagCache.
        - start_step (int) (default: 1)
          Step to start applying MagCache
        - end_step (int) (default: -1)
          Step to end applying MagCache
        - cache_device (str) (default: 'offload_device')
          Device to cache to

    Outputs:
        - cache_args (Any)
    """
    _original_name: str = 'WanVideoMagCache'

    def __init__(self, magcache_thresh: float = 0.02, magcache_K: int = 4, start_step: int = 1, end_step: int = -1, cache_device: str = 'offload_device'):
        super().__init__(**{"magcache_thresh": magcache_thresh, "magcache_K": magcache_K, "start_step": start_step, "end_step": end_step, "cache_device": cache_device})
        self.inputs = WanVideoMagCacheInputs(self)
        self.outputs = WanVideoMagCacheOutputs(self)
