
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for TrimVideoLatent
class TrimVideoLatentInputs(InputSlots):
    samples: Slot[Latent]
    trim_amount: Slot[int]
    def __init__(self, node: "Node"):
        self.samples = Slot[Latent](node, "samples", 'LATENT')
        self.trim_amount = Slot[int](node, "trim_amount", 'INT')

class TrimVideoLatentOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class TrimVideoLatent(Node[TrimVideoLatentInputs, TrimVideoLatentOutputs]):
    """
    Original name: TrimVideoLatent
    No description available.
    """
    _original_name: str = 'TrimVideoLatent'

    def __init__(self, samples: Slot[Latent], trim_amount: int = 0):
        super().__init__(**{"samples": samples, "trim_amount": trim_amount})
        self.inputs = TrimVideoLatentInputs(self)
        self.outputs = TrimVideoLatentOutputs(self)
