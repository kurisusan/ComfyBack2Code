
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SD3AttentionSeekerLG_
class SD3AttentionSeekerLG_Inputs(InputSlots):
    clip: Slot[Clip]
    apply_to_query: Slot[bool]
    apply_to_key: Slot[bool]
    apply_to_value: Slot[bool]
    apply_to_out: Slot[bool]
    clip_l_0: Slot[float]
    clip_l_1: Slot[float]
    clip_l_2: Slot[float]
    clip_l_3: Slot[float]
    clip_l_4: Slot[float]
    clip_l_5: Slot[float]
    clip_l_6: Slot[float]
    clip_l_7: Slot[float]
    clip_l_8: Slot[float]
    clip_l_9: Slot[float]
    clip_l_10: Slot[float]
    clip_l_11: Slot[float]
    clip_g_0: Slot[float]
    clip_g_1: Slot[float]
    clip_g_2: Slot[float]
    clip_g_3: Slot[float]
    clip_g_4: Slot[float]
    clip_g_5: Slot[float]
    clip_g_6: Slot[float]
    clip_g_7: Slot[float]
    clip_g_8: Slot[float]
    clip_g_9: Slot[float]
    clip_g_10: Slot[float]
    clip_g_11: Slot[float]
    clip_g_12: Slot[float]
    clip_g_13: Slot[float]
    clip_g_14: Slot[float]
    clip_g_15: Slot[float]
    clip_g_16: Slot[float]
    clip_g_17: Slot[float]
    clip_g_18: Slot[float]
    clip_g_19: Slot[float]
    clip_g_20: Slot[float]
    clip_g_21: Slot[float]
    clip_g_22: Slot[float]
    clip_g_23: Slot[float]
    clip_g_24: Slot[float]
    clip_g_25: Slot[float]
    clip_g_26: Slot[float]
    clip_g_27: Slot[float]
    clip_g_28: Slot[float]
    clip_g_29: Slot[float]
    clip_g_30: Slot[float]
    clip_g_31: Slot[float]
    def __init__(self, node: "Node"):
        self.clip = Slot[Clip](node, "clip", 'CLIP')
        self.apply_to_query = Slot[bool](node, "apply_to_query", 'BOOLEAN')
        self.apply_to_key = Slot[bool](node, "apply_to_key", 'BOOLEAN')
        self.apply_to_value = Slot[bool](node, "apply_to_value", 'BOOLEAN')
        self.apply_to_out = Slot[bool](node, "apply_to_out", 'BOOLEAN')
        self.clip_l_0 = Slot[float](node, "clip_l_0", 'FLOAT')
        self.clip_l_1 = Slot[float](node, "clip_l_1", 'FLOAT')
        self.clip_l_2 = Slot[float](node, "clip_l_2", 'FLOAT')
        self.clip_l_3 = Slot[float](node, "clip_l_3", 'FLOAT')
        self.clip_l_4 = Slot[float](node, "clip_l_4", 'FLOAT')
        self.clip_l_5 = Slot[float](node, "clip_l_5", 'FLOAT')
        self.clip_l_6 = Slot[float](node, "clip_l_6", 'FLOAT')
        self.clip_l_7 = Slot[float](node, "clip_l_7", 'FLOAT')
        self.clip_l_8 = Slot[float](node, "clip_l_8", 'FLOAT')
        self.clip_l_9 = Slot[float](node, "clip_l_9", 'FLOAT')
        self.clip_l_10 = Slot[float](node, "clip_l_10", 'FLOAT')
        self.clip_l_11 = Slot[float](node, "clip_l_11", 'FLOAT')
        self.clip_g_0 = Slot[float](node, "clip_g_0", 'FLOAT')
        self.clip_g_1 = Slot[float](node, "clip_g_1", 'FLOAT')
        self.clip_g_2 = Slot[float](node, "clip_g_2", 'FLOAT')
        self.clip_g_3 = Slot[float](node, "clip_g_3", 'FLOAT')
        self.clip_g_4 = Slot[float](node, "clip_g_4", 'FLOAT')
        self.clip_g_5 = Slot[float](node, "clip_g_5", 'FLOAT')
        self.clip_g_6 = Slot[float](node, "clip_g_6", 'FLOAT')
        self.clip_g_7 = Slot[float](node, "clip_g_7", 'FLOAT')
        self.clip_g_8 = Slot[float](node, "clip_g_8", 'FLOAT')
        self.clip_g_9 = Slot[float](node, "clip_g_9", 'FLOAT')
        self.clip_g_10 = Slot[float](node, "clip_g_10", 'FLOAT')
        self.clip_g_11 = Slot[float](node, "clip_g_11", 'FLOAT')
        self.clip_g_12 = Slot[float](node, "clip_g_12", 'FLOAT')
        self.clip_g_13 = Slot[float](node, "clip_g_13", 'FLOAT')
        self.clip_g_14 = Slot[float](node, "clip_g_14", 'FLOAT')
        self.clip_g_15 = Slot[float](node, "clip_g_15", 'FLOAT')
        self.clip_g_16 = Slot[float](node, "clip_g_16", 'FLOAT')
        self.clip_g_17 = Slot[float](node, "clip_g_17", 'FLOAT')
        self.clip_g_18 = Slot[float](node, "clip_g_18", 'FLOAT')
        self.clip_g_19 = Slot[float](node, "clip_g_19", 'FLOAT')
        self.clip_g_20 = Slot[float](node, "clip_g_20", 'FLOAT')
        self.clip_g_21 = Slot[float](node, "clip_g_21", 'FLOAT')
        self.clip_g_22 = Slot[float](node, "clip_g_22", 'FLOAT')
        self.clip_g_23 = Slot[float](node, "clip_g_23", 'FLOAT')
        self.clip_g_24 = Slot[float](node, "clip_g_24", 'FLOAT')
        self.clip_g_25 = Slot[float](node, "clip_g_25", 'FLOAT')
        self.clip_g_26 = Slot[float](node, "clip_g_26", 'FLOAT')
        self.clip_g_27 = Slot[float](node, "clip_g_27", 'FLOAT')
        self.clip_g_28 = Slot[float](node, "clip_g_28", 'FLOAT')
        self.clip_g_29 = Slot[float](node, "clip_g_29", 'FLOAT')
        self.clip_g_30 = Slot[float](node, "clip_g_30", 'FLOAT')
        self.clip_g_31 = Slot[float](node, "clip_g_31", 'FLOAT')

class SD3AttentionSeekerLG_Outputs(OutputSlots):
    clip: Slot[Clip]
    def __init__(self, node: "Node"):
        self.clip = Slot[Clip](node, "CLIP", 'CLIP')

class SD3AttentionSeekerLG_(Node[SD3AttentionSeekerLG_Inputs, SD3AttentionSeekerLG_Outputs]):
    """
    Original name: SD3AttentionSeekerLG+
    No description available.
    """
    _original_name: str = 'SD3AttentionSeekerLG+'

    def __init__(self, clip: Slot[Clip], apply_to_query: bool = True, apply_to_key: bool = True, apply_to_value: bool = True, apply_to_out: bool = True, clip_l_0: float = 1.0, clip_l_1: float = 1.0, clip_l_2: float = 1.0, clip_l_3: float = 1.0, clip_l_4: float = 1.0, clip_l_5: float = 1.0, clip_l_6: float = 1.0, clip_l_7: float = 1.0, clip_l_8: float = 1.0, clip_l_9: float = 1.0, clip_l_10: float = 1.0, clip_l_11: float = 1.0, clip_g_0: float = 1.0, clip_g_1: float = 1.0, clip_g_2: float = 1.0, clip_g_3: float = 1.0, clip_g_4: float = 1.0, clip_g_5: float = 1.0, clip_g_6: float = 1.0, clip_g_7: float = 1.0, clip_g_8: float = 1.0, clip_g_9: float = 1.0, clip_g_10: float = 1.0, clip_g_11: float = 1.0, clip_g_12: float = 1.0, clip_g_13: float = 1.0, clip_g_14: float = 1.0, clip_g_15: float = 1.0, clip_g_16: float = 1.0, clip_g_17: float = 1.0, clip_g_18: float = 1.0, clip_g_19: float = 1.0, clip_g_20: float = 1.0, clip_g_21: float = 1.0, clip_g_22: float = 1.0, clip_g_23: float = 1.0, clip_g_24: float = 1.0, clip_g_25: float = 1.0, clip_g_26: float = 1.0, clip_g_27: float = 1.0, clip_g_28: float = 1.0, clip_g_29: float = 1.0, clip_g_30: float = 1.0, clip_g_31: float = 1.0):
        super().__init__(**{"clip": clip, "apply_to_query": apply_to_query, "apply_to_key": apply_to_key, "apply_to_value": apply_to_value, "apply_to_out": apply_to_out, "clip_l_0": clip_l_0, "clip_l_1": clip_l_1, "clip_l_2": clip_l_2, "clip_l_3": clip_l_3, "clip_l_4": clip_l_4, "clip_l_5": clip_l_5, "clip_l_6": clip_l_6, "clip_l_7": clip_l_7, "clip_l_8": clip_l_8, "clip_l_9": clip_l_9, "clip_l_10": clip_l_10, "clip_l_11": clip_l_11, "clip_g_0": clip_g_0, "clip_g_1": clip_g_1, "clip_g_2": clip_g_2, "clip_g_3": clip_g_3, "clip_g_4": clip_g_4, "clip_g_5": clip_g_5, "clip_g_6": clip_g_6, "clip_g_7": clip_g_7, "clip_g_8": clip_g_8, "clip_g_9": clip_g_9, "clip_g_10": clip_g_10, "clip_g_11": clip_g_11, "clip_g_12": clip_g_12, "clip_g_13": clip_g_13, "clip_g_14": clip_g_14, "clip_g_15": clip_g_15, "clip_g_16": clip_g_16, "clip_g_17": clip_g_17, "clip_g_18": clip_g_18, "clip_g_19": clip_g_19, "clip_g_20": clip_g_20, "clip_g_21": clip_g_21, "clip_g_22": clip_g_22, "clip_g_23": clip_g_23, "clip_g_24": clip_g_24, "clip_g_25": clip_g_25, "clip_g_26": clip_g_26, "clip_g_27": clip_g_27, "clip_g_28": clip_g_28, "clip_g_29": clip_g_29, "clip_g_30": clip_g_30, "clip_g_31": clip_g_31})
        self.inputs = SD3AttentionSeekerLG_Inputs(self)
        self.outputs = SD3AttentionSeekerLG_Outputs(self)
