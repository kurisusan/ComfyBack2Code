
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for KlingLipSyncTextToVideoNode
class KlingLipSyncTextToVideoNodeInputs(InputSlots):
    video: Slot[Any]
    text: Slot[str]
    voice: Slot[str]
    voice_speed: Slot[Union[float, int]]
    def __init__(self, node: "Node"):
        self.video = Slot[Any](node, "video", 'VIDEO')
        self.text = Slot[str](node, "text", 'STRING')
        self.voice = Slot[str](node, "voice", ['Melody', 'Sunny', 'Sage', 'Ace', 'Blossom', 'Peppy', 'Dove', 'Shine', 'Anchor', 'Lyric', 'Tender', 'Siren', 'Zippy', 'Bud', 'Sprite', 'Candy', 'Beacon', 'Rock', 'Titan', 'Grace', 'Helen', 'Lore', 'Crag', 'Prattle', 'Hearth', 'The Reader', 'Commercial Lady', '阳光少年', '懂事小弟', '运动少年', '青春少女', '温柔小妹', '元气少女', '阳光男生', '幽默小哥', '文艺小哥', '甜美邻家', '温柔姐姐', '职场女青', '活泼男童', '俏皮女童', '稳重老爸', '温柔妈妈', '严肃上司', '优雅贵妇', '慈祥爷爷', '唠叨爷爷', '唠叨奶奶', '和蔼奶奶', '东北老铁', '重庆小伙', '四川妹子', '潮汕大叔', '台湾男生', '西安掌柜', '天津姐姐', '新闻播报男', '译制片男', '撒娇女友', '刀片烟嗓', '乖巧正太'])
        self.voice_speed = Slot[Union[float, int]](node, "voice_speed", 'FLOAT')

class KlingLipSyncTextToVideoNodeOutputs(OutputSlots):
    video: Slot[Any]
    video_id: Slot[str]
    duration: Slot[str]
    def __init__(self, node: "Node"):
        self.video = Slot[Any](node, "VIDEO", 'VIDEO')
        self.video_id = Slot[str](node, "video_id", 'STRING')
        self.duration = Slot[str](node, "duration", 'STRING')

class KlingLipSyncTextToVideoNode(Node[KlingLipSyncTextToVideoNodeInputs, KlingLipSyncTextToVideoNodeOutputs]):
    """
    Original name: KlingLipSyncTextToVideoNode
    No description available.
    """
    _original_name: str = 'KlingLipSyncTextToVideoNode'

    def __init__(self, video: Slot[Any], text: str = None, voice: str = 'Melody', voice_speed: Union[float, int] = 1):
        super().__init__(**{"video": video, "text": text, "voice": voice, "voice_speed": voice_speed})
        self.inputs = KlingLipSyncTextToVideoNodeInputs(self)
        self.outputs = KlingLipSyncTextToVideoNodeOutputs(self)
