
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SkipLayerGuidanceDiTSimple
class SkipLayerGuidanceDiTSimpleInputs(InputSlots):
    model: Slot[Model]
    double_layers: Slot[str]
    single_layers: Slot[str]
    start_percent: Slot[float]
    end_percent: Slot[float]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.double_layers = Slot[str](node, "double_layers", 'STRING')
        self.single_layers = Slot[str](node, "single_layers", 'STRING')
        self.start_percent = Slot[float](node, "start_percent", 'FLOAT')
        self.end_percent = Slot[float](node, "end_percent", 'FLOAT')

class SkipLayerGuidanceDiTSimpleOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class SkipLayerGuidanceDiTSimple(Node[SkipLayerGuidanceDiTSimpleInputs, SkipLayerGuidanceDiTSimpleOutputs]):
    """
    Original name: SkipLayerGuidanceDiTSimple
    No description available.
    """
    _original_name: str = 'SkipLayerGuidanceDiTSimple'

    def __init__(self, model: Slot[Model], double_layers: str = '7, 8, 9', single_layers: str = '7, 8, 9', start_percent: float = 0.0, end_percent: float = 1.0):
        super().__init__(**{"model": model, "double_layers": double_layers, "single_layers": single_layers, "start_percent": start_percent, "end_percent": end_percent})
        self.inputs = SkipLayerGuidanceDiTSimpleInputs(self)
        self.outputs = SkipLayerGuidanceDiTSimpleOutputs(self)
