
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SetShakkerLabsUnionControlNetType
class SetShakkerLabsUnionControlNetTypeInputs(InputSlots):
    control_net: Slot[Any]
    type: Slot[str]
    def __init__(self, node: "Node"):
        self.control_net = Slot[Any](node, "control_net", 'CONTROL_NET')
        self.type = Slot[str](node, "type", ['auto', 'canny', 'tile', 'depth', 'blur', 'pose', 'gray', 'low quality'])

class SetShakkerLabsUnionControlNetTypeOutputs(OutputSlots):
    control_net: Slot[Any]
    def __init__(self, node: "Node"):
        self.control_net = Slot[Any](node, "CONTROL_NET", 'CONTROL_NET')

class SetShakkerLabsUnionControlNetType(Node[SetShakkerLabsUnionControlNetTypeInputs, SetShakkerLabsUnionControlNetTypeOutputs]):
    """
    Original name: SetShakkerLabsUnionControlNetType
    No description available.
    """
    _original_name: str = 'SetShakkerLabsUnionControlNetType'

    def __init__(self, control_net: Slot[Any], type: str):
        super().__init__(**{"control_net": control_net, "type": type})
        self.inputs = SetShakkerLabsUnionControlNetTypeInputs(self)
        self.outputs = SetShakkerLabsUnionControlNetTypeOutputs(self)
