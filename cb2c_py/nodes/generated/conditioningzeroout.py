
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ConditioningZeroOut
class ConditioningZeroOutInputs(InputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "conditioning", 'CONDITIONING')

class ConditioningZeroOutOutputs(OutputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "CONDITIONING", 'CONDITIONING')

class ConditioningZeroOut(Node[ConditioningZeroOutInputs, ConditioningZeroOutOutputs]):
    """
    Original name: ConditioningZeroOut
    Category: advanced/conditioning
    

    Inputs:
        - conditioning (Conditioning)

    Outputs:
        - conditioning (Conditioning)
    """
    _original_name: str = 'ConditioningZeroOut'

    def __init__(self, conditioning: Slot[Conditioning]):
        super().__init__(**{"conditioning": conditioning})
        self.inputs = ConditioningZeroOutInputs(self)
        self.outputs = ConditioningZeroOutOutputs(self)
