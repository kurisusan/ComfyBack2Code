
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for UNETLoaderMultiGPU
class UNETLoaderMultiGPUInputs(InputSlots):
    unet_name: Slot[str]
    weight_dtype: Slot[str]
    def __init__(self, node: "Node"):
        self.unet_name = Slot[str](node, "unet_name", [])
        self.weight_dtype = Slot[str](node, "weight_dtype", ['default', 'fp8_e4m3fn', 'fp8_e4m3fn_fast', 'fp8_e5m2'])

class UNETLoaderMultiGPUOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class UNETLoaderMultiGPU(Node[UNETLoaderMultiGPUInputs, UNETLoaderMultiGPUOutputs]):
    """
    Original name: UNETLoaderMultiGPU
    Category: multigpu
    

    Inputs:
        - unet_name (str)
        - weight_dtype (str)

    Outputs:
        - model (Model)
    """
    _original_name: str = 'UNETLoaderMultiGPU'

    def __init__(self, unet_name: str, weight_dtype: str):
        super().__init__(**{"unet_name": unet_name, "weight_dtype": weight_dtype})
        self.inputs = UNETLoaderMultiGPUInputs(self)
        self.outputs = UNETLoaderMultiGPUOutputs(self)
