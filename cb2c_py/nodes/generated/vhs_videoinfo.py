
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_VideoInfo
class VHS_VideoInfoInputs(InputSlots):
    video_info: Slot[Any]
    def __init__(self, node: "Node"):
        self.video_info = Slot[Any](node, "video_info", 'VHS_VIDEOINFO')

class VHS_VideoInfoOutputs(OutputSlots):
    source_fps_: Slot[float]
    source_frame_count_: Slot[int]
    source_duration_: Slot[float]
    source_width_: Slot[int]
    source_height_: Slot[int]
    loaded_fps_: Slot[float]
    loaded_frame_count_: Slot[int]
    loaded_duration_: Slot[float]
    loaded_width_: Slot[int]
    loaded_height_: Slot[int]
    def __init__(self, node: "Node"):
        self.source_fps_ = Slot[float](node, "source_fpsðŸŸ¨", 'FLOAT')
        self.source_frame_count_ = Slot[int](node, "source_frame_countðŸŸ¨", 'INT')
        self.source_duration_ = Slot[float](node, "source_durationðŸŸ¨", 'FLOAT')
        self.source_width_ = Slot[int](node, "source_widthðŸŸ¨", 'INT')
        self.source_height_ = Slot[int](node, "source_heightðŸŸ¨", 'INT')
        self.loaded_fps_ = Slot[float](node, "loaded_fpsðŸŸ¦", 'FLOAT')
        self.loaded_frame_count_ = Slot[int](node, "loaded_frame_countðŸŸ¦", 'INT')
        self.loaded_duration_ = Slot[float](node, "loaded_durationðŸŸ¦", 'FLOAT')
        self.loaded_width_ = Slot[int](node, "loaded_widthðŸŸ¦", 'INT')
        self.loaded_height_ = Slot[int](node, "loaded_heightðŸŸ¦", 'INT')

class VHS_VideoInfo(Node[VHS_VideoInfoInputs, VHS_VideoInfoOutputs]):
    """
    Original name: VHS_VideoInfo
    Category: Video Helper Suite ðŸŽ¥ðŸ…¥ðŸ…—ðŸ…¢
    Video Info ðŸŽ¥ðŸ…¥ðŸ…—ðŸ…¢<div style="font-size: 0.8em"><div id=VHS_shortdesc>Splits information on a video into a numerous outputs</div></div><div style="font-size: 0.8em"><div vhs_title="Inputs" style="display: flex; font-size: 0.8em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">Inputs: <div vhs_title="video_info" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">video_info: A connection to a Load Video node</div></div></div></div><div vhs_title="Outputs" style="display: flex; font-size: 0.8em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">Outputs: <div vhs_title="source_fpsðŸŸ¨" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">source_fpsðŸŸ¨: The frame rate of the video</div></div><div vhs_title="source_frame_countðŸŸ¨" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">source_frame_countðŸŸ¨: How many total frames the video contains before accounting for frame rate or select_every_nth</div></div><div vhs_title="source_durationðŸŸ¨" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">source_durationðŸŸ¨: The length of images just returned in seconds</div></div><div vhs_title="source_widthðŸŸ¨" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">source_widthðŸŸ¨: The width</div></div><div vhs_title="source_heightðŸŸ¨" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">source_heightðŸŸ¨: The height</div></div><div vhs_title="loaded_fpsðŸŸ¦" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">loaded_fpsðŸŸ¦: The frame rate after accounting for force_rate and select_every_nth. This output is of particular use as it can be connected to the converted frame_rate input of a Video Combine node to ensure audio remains synchronized.</div></div><div vhs_title="loaded_frame_countðŸŸ¦" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">loaded_frame_countðŸŸ¦: The number of frames returned by the current execution. Identical to the frame_count returned by the node itself</div></div><div vhs_title="loaded_durationðŸŸ¦" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">loaded_durationðŸŸ¦: The duration in seconds of returned images after accounting for frame_load_cap</div></div><div vhs_title="loaded_widthðŸŸ¦" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">loaded_widthðŸŸ¦: The width of the video after scaling. These coordinates are in image space even if loading to latent space</div></div><div vhs_title="loaded_heightðŸŸ¦" style="display: flex; font-size: 1em" class="VHS_collapse"><div style="color: #AAA; height: 1.5em;">[<span style="font-family: monospace">-</span>]</div><div style="width: 100%">loaded_heightðŸŸ¦: The height of the video after scaling. These coordinates are in image space even if loading to latent space</div></div></div></div></div>

    Inputs:
        - video_info (Any)

    Outputs:
        - source_fps_ (float)
        - source_frame_count_ (int)
        - source_duration_ (float)
        - source_width_ (int)
        - source_height_ (int)
        - loaded_fps_ (float)
        - loaded_frame_count_ (int)
        - loaded_duration_ (float)
        - loaded_width_ (int)
        - loaded_height_ (int)
    """
    _original_name: str = 'VHS_VideoInfo'

    def __init__(self, video_info: Slot[Any]):
        super().__init__(**{"video_info": video_info})
        self.inputs = VHS_VideoInfoInputs(self)
        self.outputs = VHS_VideoInfoOutputs(self)
