
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_VideoInfo
class VHS_VideoInfoInputs(InputSlots):
    video_info: Slot[Any]
    def __init__(self, node: "Node"):
        self.video_info = Slot[Any](node, "video_info", 'VHS_VIDEOINFO')

class VHS_VideoInfoOutputs(OutputSlots):
    source_fps_: Slot[float]
    source_frame_count_: Slot[int]
    source_duration_: Slot[float]
    source_width_: Slot[int]
    source_height_: Slot[int]
    loaded_fps_: Slot[float]
    loaded_frame_count_: Slot[int]
    loaded_duration_: Slot[float]
    loaded_width_: Slot[int]
    loaded_height_: Slot[int]
    def __init__(self, node: "Node"):
        self.source_fps_ = Slot[float](node, "source_fpsðŸŸ¨", 'FLOAT')
        self.source_frame_count_ = Slot[int](node, "source_frame_countðŸŸ¨", 'INT')
        self.source_duration_ = Slot[float](node, "source_durationðŸŸ¨", 'FLOAT')
        self.source_width_ = Slot[int](node, "source_widthðŸŸ¨", 'INT')
        self.source_height_ = Slot[int](node, "source_heightðŸŸ¨", 'INT')
        self.loaded_fps_ = Slot[float](node, "loaded_fpsðŸŸ¦", 'FLOAT')
        self.loaded_frame_count_ = Slot[int](node, "loaded_frame_countðŸŸ¦", 'INT')
        self.loaded_duration_ = Slot[float](node, "loaded_durationðŸŸ¦", 'FLOAT')
        self.loaded_width_ = Slot[int](node, "loaded_widthðŸŸ¦", 'INT')
        self.loaded_height_ = Slot[int](node, "loaded_heightðŸŸ¦", 'INT')

class VHS_VideoInfo(Node[VHS_VideoInfoInputs, VHS_VideoInfoOutputs]):
    """
    Original name: VHS_VideoInfo
    No description available.
    """
    _original_name: str = 'VHS_VideoInfo'

    def __init__(self, video_info: Slot[Any]):
        super().__init__(**{"video_info": video_info})
        self.inputs = VHS_VideoInfoInputs(self)
        self.outputs = VHS_VideoInfoOutputs(self)
