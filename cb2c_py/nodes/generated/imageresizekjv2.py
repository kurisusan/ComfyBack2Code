
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class ImageResizeKJv2(Node):
    """
    Original name: ImageResizeKJv2
    No description available.
    """
    _inputs = {
    "image": [
        "IMAGE"
    ],
    "width": [
        "INT",
        {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 1
        }
    ],
    "height": [
        "INT",
        {
            "default": 512,
            "min": 0,
            "max": 16384,
            "step": 1
        }
    ],
    "upscale_method": [
        [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
        ]
    ],
    "keep_proportion": [
        [
            "stretch",
            "resize",
            "pad",
            "pad_edge",
            "crop"
        ],
        {
            "default": False
        }
    ],
    "pad_color": [
        "STRING",
        {
            "default": "0, 0, 0",
            "tooltip": "Color to use for padding."
        }
    ],
    "crop_position": [
        [
            "center",
            "top",
            "bottom",
            "left",
            "right"
        ],
        {
            "default": "center"
        }
    ],
    "divisible_by": [
        "INT",
        {
            "default": 2,
            "min": 0,
            "max": 512,
            "step": 1
        }
    ]
}
    _outputs = [
    "IMAGE",
    "INT",
    "INT",
    "MASK"
]
    _original_name = "ImageResizeKJv2"

    def __init__(self, image, upscale_method, width=512, height=512, keep_proportion=False, pad_color="0, 0, 0", crop_position="center", divisible_by=2):
        super().__init__(image=image, width=width, height=height, upscale_method=upscale_method, keep_proportion=keep_proportion, pad_color=pad_color, crop_position=crop_position, divisible_by=divisible_by)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
