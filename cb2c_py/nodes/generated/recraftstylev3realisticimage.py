
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for RecraftStyleV3RealisticImage
class RecraftStyleV3RealisticImageInputs(InputSlots):
    substyle: Slot[str]
    def __init__(self, node: "Node"):
        self.substyle = Slot[str](node, "substyle", ['None', 'b_and_w', 'enterprise', 'evening_light', 'faded_nostalgia', 'forest_life', 'hard_flash', 'hdr', 'motion_blur', 'mystic_naturalism', 'natural_light', 'natural_tones', 'organic_calm', 'real_life_glow', 'retro_realism', 'retro_snapshot', 'studio_portrait', 'urban_drama', 'village_realism', 'warm_folk'])

class RecraftStyleV3RealisticImageOutputs(OutputSlots):
    recraft_style: Slot[Any]
    def __init__(self, node: "Node"):
        self.recraft_style = Slot[Any](node, "recraft_style", 'RECRAFT_V3_STYLE')

class RecraftStyleV3RealisticImage(Node[RecraftStyleV3RealisticImageInputs, RecraftStyleV3RealisticImageOutputs]):
    """
    Original name: RecraftStyleV3RealisticImage
    No description available.
    """
    _original_name: str = 'RecraftStyleV3RealisticImage'

    def __init__(self, substyle: str):
        super().__init__(**{"substyle": substyle})
        self.inputs = RecraftStyleV3RealisticImageInputs(self)
        self.outputs = RecraftStyleV3RealisticImageOutputs(self)
