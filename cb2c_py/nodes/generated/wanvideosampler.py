
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class WanVideoSampler(Node):
    """
    Original name: WanVideoSampler
    No description available.
    """
    _inputs = {
    "model": [
        "WANVIDEOMODEL"
    ],
    "image_embeds": [
        "WANVIDIMAGE_EMBEDS"
    ],
    "steps": [
        "INT",
        {
            "default": 30,
            "min": 1
        }
    ],
    "cfg": [
        "FLOAT",
        {
            "default": 6.0,
            "min": 0.0,
            "max": 30.0,
            "step": 0.01
        }
    ],
    "shift": [
        "FLOAT",
        {
            "default": 5.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
        }
    ],
    "seed": [
        "INT",
        {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
        }
    ],
    "force_offload": [
        "BOOLEAN",
        {
            "default": True,
            "tooltip": "Moves the model to the offload device after sampling"
        }
    ],
    "scheduler": [
        [
            "unipc",
            "unipc/beta",
            "dpm++",
            "dpm++/beta",
            "dpm++_sde",
            "dpm++_sde/beta",
            "euler",
            "euler/beta",
            "euler/accvideo",
            "deis",
            "lcm",
            "lcm/beta",
            "flowmatch_causvid",
            "flowmatch_distill",
            "multitalk"
        ],
        {
            "default": "unipc"
        }
    ],
    "riflex_freq_index": [
        "INT",
        {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1,
            "tooltip": "Frequency index for RIFLEX, disabled when 0, default 6. Allows for new frames to be generated after without looping"
        }
    ]
}
    _outputs = [
    "LATENT"
]
    _original_name = "WanVideoSampler"

    def __init__(self, model, image_embeds, steps=30, cfg=6.0, shift=5.0, seed=0, force_offload=True, scheduler="unipc", riflex_freq_index=0):
        super().__init__(model=model, image_embeds=image_embeds, steps=steps, cfg=cfg, shift=shift, seed=seed, force_offload=force_offload, scheduler=scheduler, riflex_freq_index=riflex_freq_index)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
