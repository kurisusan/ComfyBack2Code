
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for TorchCompileModel
class TorchCompileModelInputs(InputSlots):
    model: Slot[Model]
    backend: Slot[str]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.backend = Slot[str](node, "backend", ['inductor', 'cudagraphs'])

class TorchCompileModelOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class TorchCompileModel(Node[TorchCompileModelInputs, TorchCompileModelOutputs]):
    """
    Original name: TorchCompileModel
    No description available.
    """
    _original_name: str = 'TorchCompileModel'

    def __init__(self, model: Slot[Model], backend: str):
        super().__init__(**{"model": model, "backend": backend})
        self.inputs = TorchCompileModelInputs(self)
        self.outputs = TorchCompileModelOutputs(self)
