
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CaseConverter
class CaseConverterInputs(InputSlots):
    string: Slot[str]
    mode: Slot[str]
    def __init__(self, node: "Node"):
        self.string = Slot[str](node, "string", 'STRING')
        self.mode = Slot[str](node, "mode", 'COMBO')

class CaseConverterOutputs(OutputSlots):
    string: Slot[str]
    def __init__(self, node: "Node"):
        self.string = Slot[str](node, "STRING", 'STRING')

class CaseConverter(Node[CaseConverterInputs, CaseConverterOutputs]):
    """
    Original name: CaseConverter
    Category: utils/string
    

    Inputs:
        - string (str)
        - mode (Any)

    Outputs:
        - string (str)
    """
    _original_name: str = 'CaseConverter'

    def __init__(self, string: str, mode: str):
        super().__init__(**{"string": string, "mode": mode})
        self.inputs = CaseConverterInputs(self)
        self.outputs = CaseConverterOutputs(self)
