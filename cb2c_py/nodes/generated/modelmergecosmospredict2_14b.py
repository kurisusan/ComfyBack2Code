
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ModelMergeCosmosPredict2_14B
class ModelMergeCosmosPredict2_14BInputs(InputSlots):
    model1: Slot[Model]
    model2: Slot[Model]
    pos_embedder_: Slot[float]
    x_embedder_: Slot[float]
    t_embedder_: Slot[float]
    t_embedding_norm_: Slot[float]
    blocks_0_: Slot[float]
    blocks_1_: Slot[float]
    blocks_2_: Slot[float]
    blocks_3_: Slot[float]
    blocks_4_: Slot[float]
    blocks_5_: Slot[float]
    blocks_6_: Slot[float]
    blocks_7_: Slot[float]
    blocks_8_: Slot[float]
    blocks_9_: Slot[float]
    blocks_10_: Slot[float]
    blocks_11_: Slot[float]
    blocks_12_: Slot[float]
    blocks_13_: Slot[float]
    blocks_14_: Slot[float]
    blocks_15_: Slot[float]
    blocks_16_: Slot[float]
    blocks_17_: Slot[float]
    blocks_18_: Slot[float]
    blocks_19_: Slot[float]
    blocks_20_: Slot[float]
    blocks_21_: Slot[float]
    blocks_22_: Slot[float]
    blocks_23_: Slot[float]
    blocks_24_: Slot[float]
    blocks_25_: Slot[float]
    blocks_26_: Slot[float]
    blocks_27_: Slot[float]
    blocks_28_: Slot[float]
    blocks_29_: Slot[float]
    blocks_30_: Slot[float]
    blocks_31_: Slot[float]
    blocks_32_: Slot[float]
    blocks_33_: Slot[float]
    blocks_34_: Slot[float]
    blocks_35_: Slot[float]
    final_layer_: Slot[float]
    def __init__(self, node: "Node"):
        self.model1 = Slot[Model](node, "model1", 'MODEL')
        self.model2 = Slot[Model](node, "model2", 'MODEL')
        self.pos_embedder_ = Slot[float](node, "pos_embedder_", 'FLOAT')
        self.x_embedder_ = Slot[float](node, "x_embedder_", 'FLOAT')
        self.t_embedder_ = Slot[float](node, "t_embedder_", 'FLOAT')
        self.t_embedding_norm_ = Slot[float](node, "t_embedding_norm_", 'FLOAT')
        self.blocks_0_ = Slot[float](node, "blocks_0_", 'FLOAT')
        self.blocks_1_ = Slot[float](node, "blocks_1_", 'FLOAT')
        self.blocks_2_ = Slot[float](node, "blocks_2_", 'FLOAT')
        self.blocks_3_ = Slot[float](node, "blocks_3_", 'FLOAT')
        self.blocks_4_ = Slot[float](node, "blocks_4_", 'FLOAT')
        self.blocks_5_ = Slot[float](node, "blocks_5_", 'FLOAT')
        self.blocks_6_ = Slot[float](node, "blocks_6_", 'FLOAT')
        self.blocks_7_ = Slot[float](node, "blocks_7_", 'FLOAT')
        self.blocks_8_ = Slot[float](node, "blocks_8_", 'FLOAT')
        self.blocks_9_ = Slot[float](node, "blocks_9_", 'FLOAT')
        self.blocks_10_ = Slot[float](node, "blocks_10_", 'FLOAT')
        self.blocks_11_ = Slot[float](node, "blocks_11_", 'FLOAT')
        self.blocks_12_ = Slot[float](node, "blocks_12_", 'FLOAT')
        self.blocks_13_ = Slot[float](node, "blocks_13_", 'FLOAT')
        self.blocks_14_ = Slot[float](node, "blocks_14_", 'FLOAT')
        self.blocks_15_ = Slot[float](node, "blocks_15_", 'FLOAT')
        self.blocks_16_ = Slot[float](node, "blocks_16_", 'FLOAT')
        self.blocks_17_ = Slot[float](node, "blocks_17_", 'FLOAT')
        self.blocks_18_ = Slot[float](node, "blocks_18_", 'FLOAT')
        self.blocks_19_ = Slot[float](node, "blocks_19_", 'FLOAT')
        self.blocks_20_ = Slot[float](node, "blocks_20_", 'FLOAT')
        self.blocks_21_ = Slot[float](node, "blocks_21_", 'FLOAT')
        self.blocks_22_ = Slot[float](node, "blocks_22_", 'FLOAT')
        self.blocks_23_ = Slot[float](node, "blocks_23_", 'FLOAT')
        self.blocks_24_ = Slot[float](node, "blocks_24_", 'FLOAT')
        self.blocks_25_ = Slot[float](node, "blocks_25_", 'FLOAT')
        self.blocks_26_ = Slot[float](node, "blocks_26_", 'FLOAT')
        self.blocks_27_ = Slot[float](node, "blocks_27_", 'FLOAT')
        self.blocks_28_ = Slot[float](node, "blocks_28_", 'FLOAT')
        self.blocks_29_ = Slot[float](node, "blocks_29_", 'FLOAT')
        self.blocks_30_ = Slot[float](node, "blocks_30_", 'FLOAT')
        self.blocks_31_ = Slot[float](node, "blocks_31_", 'FLOAT')
        self.blocks_32_ = Slot[float](node, "blocks_32_", 'FLOAT')
        self.blocks_33_ = Slot[float](node, "blocks_33_", 'FLOAT')
        self.blocks_34_ = Slot[float](node, "blocks_34_", 'FLOAT')
        self.blocks_35_ = Slot[float](node, "blocks_35_", 'FLOAT')
        self.final_layer_ = Slot[float](node, "final_layer_", 'FLOAT')

class ModelMergeCosmosPredict2_14BOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class ModelMergeCosmosPredict2_14B(Node[ModelMergeCosmosPredict2_14BInputs, ModelMergeCosmosPredict2_14BOutputs]):
    """
    Original name: ModelMergeCosmosPredict2_14B
    No description available.
    """
    _original_name: str = 'ModelMergeCosmosPredict2_14B'

    def __init__(self, model1: Slot[Model], model2: Slot[Model], pos_embedder_: float = 1.0, x_embedder_: float = 1.0, t_embedder_: float = 1.0, t_embedding_norm_: float = 1.0, blocks_0_: float = 1.0, blocks_1_: float = 1.0, blocks_2_: float = 1.0, blocks_3_: float = 1.0, blocks_4_: float = 1.0, blocks_5_: float = 1.0, blocks_6_: float = 1.0, blocks_7_: float = 1.0, blocks_8_: float = 1.0, blocks_9_: float = 1.0, blocks_10_: float = 1.0, blocks_11_: float = 1.0, blocks_12_: float = 1.0, blocks_13_: float = 1.0, blocks_14_: float = 1.0, blocks_15_: float = 1.0, blocks_16_: float = 1.0, blocks_17_: float = 1.0, blocks_18_: float = 1.0, blocks_19_: float = 1.0, blocks_20_: float = 1.0, blocks_21_: float = 1.0, blocks_22_: float = 1.0, blocks_23_: float = 1.0, blocks_24_: float = 1.0, blocks_25_: float = 1.0, blocks_26_: float = 1.0, blocks_27_: float = 1.0, blocks_28_: float = 1.0, blocks_29_: float = 1.0, blocks_30_: float = 1.0, blocks_31_: float = 1.0, blocks_32_: float = 1.0, blocks_33_: float = 1.0, blocks_34_: float = 1.0, blocks_35_: float = 1.0, final_layer_: float = 1.0):
        super().__init__(**{"model1": model1, "model2": model2, "pos_embedder.": pos_embedder_, "x_embedder.": x_embedder_, "t_embedder.": t_embedder_, "t_embedding_norm.": t_embedding_norm_, "blocks.0.": blocks_0_, "blocks.1.": blocks_1_, "blocks.2.": blocks_2_, "blocks.3.": blocks_3_, "blocks.4.": blocks_4_, "blocks.5.": blocks_5_, "blocks.6.": blocks_6_, "blocks.7.": blocks_7_, "blocks.8.": blocks_8_, "blocks.9.": blocks_9_, "blocks.10.": blocks_10_, "blocks.11.": blocks_11_, "blocks.12.": blocks_12_, "blocks.13.": blocks_13_, "blocks.14.": blocks_14_, "blocks.15.": blocks_15_, "blocks.16.": blocks_16_, "blocks.17.": blocks_17_, "blocks.18.": blocks_18_, "blocks.19.": blocks_19_, "blocks.20.": blocks_20_, "blocks.21.": blocks_21_, "blocks.22.": blocks_22_, "blocks.23.": blocks_23_, "blocks.24.": blocks_24_, "blocks.25.": blocks_25_, "blocks.26.": blocks_26_, "blocks.27.": blocks_27_, "blocks.28.": blocks_28_, "blocks.29.": blocks_29_, "blocks.30.": blocks_30_, "blocks.31.": blocks_31_, "blocks.32.": blocks_32_, "blocks.33.": blocks_33_, "blocks.34.": blocks_34_, "blocks.35.": blocks_35_, "final_layer.": final_layer_})
        self.inputs = ModelMergeCosmosPredict2_14BInputs(self)
        self.outputs = ModelMergeCosmosPredict2_14BOutputs(self)
