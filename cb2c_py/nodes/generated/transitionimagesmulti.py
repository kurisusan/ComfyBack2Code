
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for TransitionImagesMulti
class TransitionImagesMultiInputs(InputSlots):
    inputcount: Slot[int]
    image_1: Slot[Image]
    image_2: Slot[Image]
    interpolation: Slot[str]
    transition_type: Slot[str]
    transitioning_frames: Slot[int]
    blur_radius: Slot[float]
    reverse: Slot[bool]
    device: Slot[str]
    def __init__(self, node: "Node"):
        self.inputcount = Slot[int](node, "inputcount", 'INT')
        self.image_1 = Slot[Image](node, "image_1", 'IMAGE')
        self.image_2 = Slot[Image](node, "image_2", 'IMAGE')
        self.interpolation = Slot[str](node, "interpolation", ['linear', 'ease_in', 'ease_out', 'ease_in_out', 'bounce', 'elastic', 'glitchy', 'exponential_ease_out'])
        self.transition_type = Slot[str](node, "transition_type", ['horizontal slide', 'vertical slide', 'box', 'circle', 'horizontal door', 'vertical door', 'fade'])
        self.transitioning_frames = Slot[int](node, "transitioning_frames", 'INT')
        self.blur_radius = Slot[float](node, "blur_radius", 'FLOAT')
        self.reverse = Slot[bool](node, "reverse", 'BOOLEAN')
        self.device = Slot[str](node, "device", ['CPU', 'GPU'])

class TransitionImagesMultiOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class TransitionImagesMulti(Node[TransitionImagesMultiInputs, TransitionImagesMultiOutputs]):
    """
    Original name: TransitionImagesMulti
    Category: KJNodes/image
    
Creates transitions between images.


    Inputs:
        - inputcount (int) (default: 2)
        - image_1 (Image)
        - image_2 (Image)
        - interpolation (str)
        - transition_type (str)
        - transitioning_frames (int) (default: 1)
        - blur_radius (float) (default: 0.0)
        - reverse (bool) (default: False)
        - device (str) (default: 'CPU')

    Outputs:
        - image (Image)
    """
    _original_name: str = 'TransitionImagesMulti'

    def __init__(self, image_1: Slot[Image], image_2: Slot[Image], interpolation: str, transition_type: str, inputcount: int = 2, transitioning_frames: int = 1, blur_radius: float = 0.0, reverse: bool = False, device: str = 'CPU'):
        super().__init__(**{"inputcount": inputcount, "image_1": image_1, "image_2": image_2, "interpolation": interpolation, "transition_type": transition_type, "transitioning_frames": transitioning_frames, "blur_radius": blur_radius, "reverse": reverse, "device": device})
        self.inputs = TransitionImagesMultiInputs(self)
        self.outputs = TransitionImagesMultiOutputs(self)
