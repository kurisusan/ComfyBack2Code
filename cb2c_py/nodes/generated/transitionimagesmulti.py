
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class TransitionImagesMulti(Node):
    """
    Original name: TransitionImagesMulti
    No description available.
    """
    _inputs = {
    "inputcount": [
        "INT",
        {
            "default": 2,
            "min": 2,
            "max": 1000,
            "step": 1
        }
    ],
    "image_1": [
        "IMAGE"
    ],
    "image_2": [
        "IMAGE"
    ],
    "interpolation": [
        [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out",
            "bounce",
            "elastic",
            "glitchy",
            "exponential_ease_out"
        ]
    ],
    "transition_type": [
        [
            "horizontal slide",
            "vertical slide",
            "box",
            "circle",
            "horizontal door",
            "vertical door",
            "fade"
        ]
    ],
    "transitioning_frames": [
        "INT",
        {
            "default": 1,
            "min": 0,
            "max": 4096,
            "step": 1
        }
    ],
    "blur_radius": [
        "FLOAT",
        {
            "default": 0.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.1
        }
    ],
    "reverse": [
        "BOOLEAN",
        {
            "default": False
        }
    ],
    "device": [
        [
            "CPU",
            "GPU"
        ],
        {
            "default": "CPU"
        }
    ]
}
    _outputs = [
    "IMAGE"
]
    _original_name = "TransitionImagesMulti"

    def __init__(self, image_1, image_2, interpolation, transition_type, inputcount=2, transitioning_frames=1, blur_radius=0.0, reverse=False, device="CPU"):
        super().__init__(inputcount=inputcount, image_1=image_1, image_2=image_2, interpolation=interpolation, transition_type=transition_type, transitioning_frames=transitioning_frames, blur_radius=blur_radius, reverse=reverse, device=device)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
