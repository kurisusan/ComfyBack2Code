
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for FilterZeroMasksAndCorrespondingImages
class FilterZeroMasksAndCorrespondingImagesInputs(InputSlots):
    masks: Slot[Any]
    def __init__(self, node: "Node"):
        self.masks = Slot[Any](node, "masks", 'MASK')

class FilterZeroMasksAndCorrespondingImagesOutputs(OutputSlots):
    non_zero_masks_out: Slot[Any]
    non_zero_mask_images_out: Slot[Image]
    zero_mask_images_out: Slot[Image]
    zero_mask_images_out_indexes: Slot[Any]
    def __init__(self, node: "Node"):
        self.non_zero_masks_out = Slot[Any](node, "non_zero_masks_out", 'MASK')
        self.non_zero_mask_images_out = Slot[Image](node, "non_zero_mask_images_out", 'IMAGE')
        self.zero_mask_images_out = Slot[Image](node, "zero_mask_images_out", 'IMAGE')
        self.zero_mask_images_out_indexes = Slot[Any](node, "zero_mask_images_out_indexes", 'INDEXES')

class FilterZeroMasksAndCorrespondingImages(Node[FilterZeroMasksAndCorrespondingImagesInputs, FilterZeroMasksAndCorrespondingImagesOutputs]):
    """
    Original name: FilterZeroMasksAndCorrespondingImages
    No description available.
    """
    _original_name: str = 'FilterZeroMasksAndCorrespondingImages'

    def __init__(self, masks: Slot[Any]):
        super().__init__(**{"masks": masks})
        self.inputs = FilterZeroMasksAndCorrespondingImagesInputs(self)
        self.outputs = FilterZeroMasksAndCorrespondingImagesOutputs(self)
