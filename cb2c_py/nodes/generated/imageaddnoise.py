
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageAddNoise
class ImageAddNoiseInputs(InputSlots):
    image: Slot[Image]
    seed: Slot[int]
    strength: Slot[float]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.seed = Slot[int](node, "seed", 'INT')
        self.strength = Slot[float](node, "strength", 'FLOAT')

class ImageAddNoiseOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageAddNoise(Node[ImageAddNoiseInputs, ImageAddNoiseOutputs]):
    """
    Original name: ImageAddNoise
    Category: image
    

    Inputs:
        - image (Image)
        - seed (int) (default: 0)
          The random seed used for creating the noise.
        - strength (float) (default: 0.5)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'ImageAddNoise'

    def __init__(self, image: Slot[Image], seed: int = 0, strength: float = 0.5):
        super().__init__(**{"image": image, "seed": seed, "strength": strength})
        self.inputs = ImageAddNoiseInputs(self)
        self.outputs = ImageAddNoiseOutputs(self)
