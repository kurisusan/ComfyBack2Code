
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SaveSVGNode
class SaveSVGNodeInputs(InputSlots):
    svg: Slot[Any]
    filename_prefix: Slot[str]
    def __init__(self, node: "Node"):
        self.svg = Slot[Any](node, "svg", 'SVG')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')

class SaveSVGNodeOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class SaveSVGNode(Node[SaveSVGNodeInputs, SaveSVGNodeOutputs]):
    """
    Original name: SaveSVGNode
    No description available.
    """
    _original_name: str = 'SaveSVGNode'

    def __init__(self, svg: Slot[Any], filename_prefix: str = 'svg/ComfyUI'):
        super().__init__(**{"svg": svg, "filename_prefix": filename_prefix})
        self.inputs = SaveSVGNodeInputs(self)
        self.outputs = SaveSVGNodeOutputs(self)
