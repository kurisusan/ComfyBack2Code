
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageEnhanceDifference_
class ImageEnhanceDifference_Inputs(InputSlots):
    image1: Slot[Image]
    image2: Slot[Image]
    exponent: Slot[float]
    def __init__(self, node: "Node"):
        self.image1 = Slot[Image](node, "image1", 'IMAGE')
        self.image2 = Slot[Image](node, "image2", 'IMAGE')
        self.exponent = Slot[float](node, "exponent", 'FLOAT')

class ImageEnhanceDifference_Outputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageEnhanceDifference_(Node[ImageEnhanceDifference_Inputs, ImageEnhanceDifference_Outputs]):
    """
    Original name: ImageEnhanceDifference+
    Category: essentials/image analysis
    

    Inputs:
        - image1 (Image)
        - image2 (Image)
        - exponent (float) (default: 0.75)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'ImageEnhanceDifference+'

    def __init__(self, image1: Slot[Image], image2: Slot[Image], exponent: float = 0.75):
        super().__init__(**{"image1": image1, "image2": image2, "exponent": exponent})
        self.inputs = ImageEnhanceDifference_Inputs(self)
        self.outputs = ImageEnhanceDifference_Outputs(self)
