
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for KlingImage2VideoNode
class KlingImage2VideoNodeInputs(InputSlots):
    start_frame: Slot[Image]
    prompt: Slot[str]
    negative_prompt: Slot[str]
    model_name: Slot[str]
    cfg_scale: Slot[float]
    mode: Slot[str]
    aspect_ratio: Slot[str]
    duration: Slot[str]
    def __init__(self, node: "Node"):
        self.start_frame = Slot[Image](node, "start_frame", 'IMAGE')
        self.prompt = Slot[str](node, "prompt", 'STRING')
        self.negative_prompt = Slot[str](node, "negative_prompt", 'STRING')
        self.model_name = Slot[str](node, "model_name", 'COMBO')
        self.cfg_scale = Slot[float](node, "cfg_scale", 'FLOAT')
        self.mode = Slot[str](node, "mode", 'COMBO')
        self.aspect_ratio = Slot[str](node, "aspect_ratio", 'COMBO')
        self.duration = Slot[str](node, "duration", 'COMBO')

class KlingImage2VideoNodeOutputs(OutputSlots):
    video: Slot[Any]
    video_id: Slot[str]
    duration: Slot[str]
    def __init__(self, node: "Node"):
        self.video = Slot[Any](node, "VIDEO", 'VIDEO')
        self.video_id = Slot[str](node, "video_id", 'STRING')
        self.duration = Slot[str](node, "duration", 'STRING')

class KlingImage2VideoNode(Node[KlingImage2VideoNodeInputs, KlingImage2VideoNodeOutputs]):
    """
    Original name: KlingImage2VideoNode
    Category: api node/video/Kling
    Kling Image to Video Node

    Inputs:
        - start_frame (Image) (default: None)
          The reference image used to generate the video.
        - prompt (str) (default: None)
          Positive text prompt
        - negative_prompt (str) (default: None)
          Negative text prompt
        - model_name (Any) (default: 'kling-v2-master')
        - cfg_scale (float) (default: 0.8)
        - mode (Any) (default: 'std')
        - aspect_ratio (Any) (default: '16:9')
        - duration (Any) (default: '5')

    Outputs:
        - video (Any)
        - video_id (str)
        - duration (str)
    """
    _original_name: str = 'KlingImage2VideoNode'

    def __init__(self, start_frame: Slot[Image] = None, prompt: str = None, negative_prompt: str = None, model_name: str = 'kling-v2-master', cfg_scale: float = 0.8, mode: str = 'std', aspect_ratio: str = '16:9', duration: str = '5'):
        super().__init__(**{"start_frame": start_frame, "prompt": prompt, "negative_prompt": negative_prompt, "model_name": model_name, "cfg_scale": cfg_scale, "mode": mode, "aspect_ratio": aspect_ratio, "duration": duration})
        self.inputs = KlingImage2VideoNodeInputs(self)
        self.outputs = KlingImage2VideoNodeOutputs(self)
