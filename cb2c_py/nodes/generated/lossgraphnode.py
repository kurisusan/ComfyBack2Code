
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LossGraphNode
class LossGraphNodeInputs(InputSlots):
    loss: Slot[Any]
    filename_prefix: Slot[str]
    def __init__(self, node: "Node"):
        self.loss = Slot[Any](node, "loss", 'LOSS_MAP')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')

class LossGraphNodeOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class LossGraphNode(Node[LossGraphNodeInputs, LossGraphNodeOutputs]):
    """
    Original name: LossGraphNode
    Category: training
    Plots the loss graph and saves it to the output directory.

    Inputs:
        - loss (Any) (default: {})
        - filename_prefix (str) (default: 'loss_graph')

    Outputs:
        No outputs.
    """
    _original_name: str = 'LossGraphNode'

    def __init__(self, loss: Slot[Any] = {}, filename_prefix: str = 'loss_graph'):
        super().__init__(**{"loss": loss, "filename_prefix": filename_prefix})
        self.inputs = LossGraphNodeInputs(self)
        self.outputs = LossGraphNodeOutputs(self)
