
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ImageTile_
class ImageTile_Inputs(InputSlots):
    image: Slot[Image]
    rows: Slot[int]
    cols: Slot[int]
    overlap: Slot[float]
    overlap_x: Slot[int]
    overlap_y: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.rows = Slot[int](node, "rows", 'INT')
        self.cols = Slot[int](node, "cols", 'INT')
        self.overlap = Slot[float](node, "overlap", 'FLOAT')
        self.overlap_x = Slot[int](node, "overlap_x", 'INT')
        self.overlap_y = Slot[int](node, "overlap_y", 'INT')

class ImageTile_Outputs(OutputSlots):
    image: Slot[Image]
    tile_width: Slot[int]
    tile_height: Slot[int]
    overlap_x: Slot[int]
    overlap_y: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.tile_width = Slot[int](node, "tile_width", 'INT')
        self.tile_height = Slot[int](node, "tile_height", 'INT')
        self.overlap_x = Slot[int](node, "overlap_x", 'INT')
        self.overlap_y = Slot[int](node, "overlap_y", 'INT')

class ImageTile_(Node[ImageTile_Inputs, ImageTile_Outputs]):
    """
    Original name: ImageTile+
    No description available.
    """
    _original_name: str = 'ImageTile+'

    def __init__(self, image: Slot[Image], rows: int = 2, cols: int = 2, overlap: float = 0, overlap_x: int = 0, overlap_y: int = 0):
        super().__init__(**{"image": image, "rows": rows, "cols": cols, "overlap": overlap, "overlap_x": overlap_x, "overlap_y": overlap_y})
        self.inputs = ImageTile_Inputs(self)
        self.outputs = ImageTile_Outputs(self)
