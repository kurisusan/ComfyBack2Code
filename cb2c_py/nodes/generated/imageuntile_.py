
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageUntile_
class ImageUntile_Inputs(InputSlots):
    tiles: Slot[Image]
    overlap_x: Slot[int]
    overlap_y: Slot[int]
    rows: Slot[int]
    cols: Slot[int]
    def __init__(self, node: "Node"):
        self.tiles = Slot[Image](node, "tiles", 'IMAGE')
        self.overlap_x = Slot[int](node, "overlap_x", 'INT')
        self.overlap_y = Slot[int](node, "overlap_y", 'INT')
        self.rows = Slot[int](node, "rows", 'INT')
        self.cols = Slot[int](node, "cols", 'INT')

class ImageUntile_Outputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageUntile_(Node[ImageUntile_Inputs, ImageUntile_Outputs]):
    """
    Original name: ImageUntile+
    Category: essentials/image manipulation
    

    Inputs:
        - tiles (Image)
        - overlap_x (int) (default: 0)
        - overlap_y (int) (default: 0)
        - rows (int) (default: 2)
        - cols (int) (default: 2)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'ImageUntile+'

    def __init__(self, tiles: Slot[Image], overlap_x: int = 0, overlap_y: int = 0, rows: int = 2, cols: int = 2):
        super().__init__(**{"tiles": tiles, "overlap_x": overlap_x, "overlap_y": overlap_y, "rows": rows, "cols": cols})
        self.inputs = ImageUntile_Inputs(self)
        self.outputs = ImageUntile_Outputs(self)
