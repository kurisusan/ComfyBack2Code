
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for StringContains
class StringContainsInputs(InputSlots):
    string: Slot[str]
    substring: Slot[str]
    case_sensitive: Slot[bool]
    def __init__(self, node: "Node"):
        self.string = Slot[str](node, "string", 'STRING')
        self.substring = Slot[str](node, "substring", 'STRING')
        self.case_sensitive = Slot[bool](node, "case_sensitive", 'BOOLEAN')

class StringContainsOutputs(OutputSlots):
    contains: Slot[bool]
    def __init__(self, node: "Node"):
        self.contains = Slot[bool](node, "contains", 'BOOLEAN')

class StringContains(Node[StringContainsInputs, StringContainsOutputs]):
    """
    Original name: StringContains
    Category: utils/string
    

    Inputs:
        - string (str)
        - substring (str)
        - case_sensitive (bool) (default: True)

    Outputs:
        - contains (bool)
    """
    _original_name: str = 'StringContains'

    def __init__(self, string: str, substring: str, case_sensitive: bool = True):
        super().__init__(**{"string": string, "substring": substring, "case_sensitive": case_sensitive})
        self.inputs = StringContainsInputs(self)
        self.outputs = StringContainsOutputs(self)
