
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class WanVideoDiffusionForcingSampler(Node):
    """
    Original name: WanVideoDiffusionForcingSampler
    No description available.
    """
    _inputs = {
    "model": [
        "WANVIDEOMODEL"
    ],
    "text_embeds": [
        "WANVIDEOTEXTEMBEDS"
    ],
    "image_embeds": [
        "WANVIDIMAGE_EMBEDS"
    ],
    "addnoise_condition": [
        "INT",
        {
            "default": 10,
            "min": 0,
            "max": 1000,
            "tooltip": "Improves consistency in long video generation"
        }
    ],
    "fps": [
        "FLOAT",
        {
            "default": 24.0,
            "min": 1.0,
            "max": 120.0,
            "step": 0.01
        }
    ],
    "steps": [
        "INT",
        {
            "default": 30,
            "min": 1
        }
    ],
    "cfg": [
        "FLOAT",
        {
            "default": 6.0,
            "min": 0.0,
            "max": 30.0,
            "step": 0.01
        }
    ],
    "shift": [
        "FLOAT",
        {
            "default": 8.0,
            "min": 0.0,
            "max": 1000.0,
            "step": 0.01
        }
    ],
    "seed": [
        "INT",
        {
            "default": 0,
            "min": 0,
            "max": 18446744073709551615
        }
    ],
    "force_offload": [
        "BOOLEAN",
        {
            "default": True,
            "tooltip": "Moves the model to the offload device after sampling"
        }
    ],
    "scheduler": [
        [
            "unipc",
            "unipc/beta",
            "euler",
            "euler/beta",
            "lcm",
            "lcm/beta"
        ],
        {
            "default": "unipc"
        }
    ]
}
    _outputs = [
    "LATENT"
]
    _original_name = "WanVideoDiffusionForcingSampler"

    def __init__(self, model, text_embeds, image_embeds, addnoise_condition=10, fps=24.0, steps=30, cfg=6.0, shift=8.0, seed=0, force_offload=True, scheduler="unipc"):
        super().__init__(model=model, text_embeds=text_embeds, image_embeds=image_embeds, addnoise_condition=addnoise_condition, fps=fps, steps=steps, cfg=cfg, shift=shift, seed=seed, force_offload=force_offload, scheduler=scheduler)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
