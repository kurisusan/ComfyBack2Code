
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImagePadForOutpaintMasked
class ImagePadForOutpaintMaskedInputs(InputSlots):
    image: Slot[Image]
    left: Slot[int]
    top: Slot[int]
    right: Slot[int]
    bottom: Slot[int]
    feathering: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.left = Slot[int](node, "left", 'INT')
        self.top = Slot[int](node, "top", 'INT')
        self.right = Slot[int](node, "right", 'INT')
        self.bottom = Slot[int](node, "bottom", 'INT')
        self.feathering = Slot[int](node, "feathering", 'INT')

class ImagePadForOutpaintMaskedOutputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "MASK", 'MASK')

class ImagePadForOutpaintMasked(Node[ImagePadForOutpaintMaskedInputs, ImagePadForOutpaintMaskedOutputs]):
    """
    Original name: ImagePadForOutpaintMasked
    Category: image
    

    Inputs:
        - image (Image)
        - left (int) (default: 0)
        - top (int) (default: 0)
        - right (int) (default: 0)
        - bottom (int) (default: 0)
        - feathering (int) (default: 0)

    Outputs:
        - image (Image)
        - mask (Image)
    """
    _original_name: str = 'ImagePadForOutpaintMasked'

    def __init__(self, image: Slot[Image], left: int = 0, top: int = 0, right: int = 0, bottom: int = 0, feathering: int = 0):
        super().__init__(**{"image": image, "left": left, "top": top, "right": right, "bottom": bottom, "feathering": feathering})
        self.inputs = ImagePadForOutpaintMaskedInputs(self)
        self.outputs = ImagePadForOutpaintMaskedOutputs(self)
