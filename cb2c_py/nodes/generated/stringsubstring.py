
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for StringSubstring
class StringSubstringInputs(InputSlots):
    string: Slot[str]
    start: Slot[int]
    end: Slot[int]
    def __init__(self, node: "Node"):
        self.string = Slot[str](node, "string", 'STRING')
        self.start = Slot[int](node, "start", 'INT')
        self.end = Slot[int](node, "end", 'INT')

class StringSubstringOutputs(OutputSlots):
    string: Slot[str]
    def __init__(self, node: "Node"):
        self.string = Slot[str](node, "STRING", 'STRING')

class StringSubstring(Node[StringSubstringInputs, StringSubstringOutputs]):
    """
    Original name: StringSubstring
    Category: utils/string
    

    Inputs:
        - string (str)
        - start (int)
        - end (int)

    Outputs:
        - string (str)
    """
    _original_name: str = 'StringSubstring'

    def __init__(self, string: str, start: int, end: int):
        super().__init__(**{"string": string, "start": start, "end": end})
        self.inputs = StringSubstringInputs(self)
        self.outputs = StringSubstringOutputs(self)
