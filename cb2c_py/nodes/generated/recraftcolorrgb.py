
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for RecraftColorRGB
class RecraftColorRGBInputs(InputSlots):
    r: Slot[int]
    g: Slot[int]
    b: Slot[int]
    def __init__(self, node: "Node"):
        self.r = Slot[int](node, "r", 'INT')
        self.g = Slot[int](node, "g", 'INT')
        self.b = Slot[int](node, "b", 'INT')

class RecraftColorRGBOutputs(OutputSlots):
    recraft_color: Slot[Any]
    def __init__(self, node: "Node"):
        self.recraft_color = Slot[Any](node, "recraft_color", 'RECRAFT_COLOR')

class RecraftColorRGB(Node[RecraftColorRGBInputs, RecraftColorRGBOutputs]):
    """
    Original name: RecraftColorRGB
    Category: api node/image/Recraft
    Create Recraft Color by choosing specific RGB values.

    Inputs:
        - r (int) (default: 0)
          Red value of color.
        - g (int) (default: 0)
          Green value of color.
        - b (int) (default: 0)
          Blue value of color.

    Outputs:
        - recraft_color (Any)
    """
    _original_name: str = 'RecraftColorRGB'

    def __init__(self, r: int = 0, g: int = 0, b: int = 0):
        super().__init__(**{"r": r, "g": g, "b": b})
        self.inputs = RecraftColorRGBInputs(self)
        self.outputs = RecraftColorRGBOutputs(self)
