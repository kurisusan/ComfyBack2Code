
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for PerpNegGuider
class PerpNegGuiderInputs(InputSlots):
    model: Slot[Model]
    positive: Slot[Conditioning]
    negative: Slot[Conditioning]
    empty_conditioning: Slot[Conditioning]
    cfg: Slot[float]
    neg_scale: Slot[float]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.positive = Slot[Conditioning](node, "positive", 'CONDITIONING')
        self.negative = Slot[Conditioning](node, "negative", 'CONDITIONING')
        self.empty_conditioning = Slot[Conditioning](node, "empty_conditioning", 'CONDITIONING')
        self.cfg = Slot[float](node, "cfg", 'FLOAT')
        self.neg_scale = Slot[float](node, "neg_scale", 'FLOAT')

class PerpNegGuiderOutputs(OutputSlots):
    guider: Slot[Any]
    def __init__(self, node: "Node"):
        self.guider = Slot[Any](node, "GUIDER", 'GUIDER')

class PerpNegGuider(Node[PerpNegGuiderInputs, PerpNegGuiderOutputs]):
    """
    Original name: PerpNegGuider
    Category: _for_testing
    

    Inputs:
        - model (Model)
        - positive (Conditioning)
        - negative (Conditioning)
        - empty_conditioning (Conditioning)
        - cfg (float) (default: 8.0)
        - neg_scale (float) (default: 1.0)

    Outputs:
        - guider (Any)
    """
    _original_name: str = 'PerpNegGuider'

    def __init__(self, model: Slot[Model], positive: Slot[Conditioning], negative: Slot[Conditioning], empty_conditioning: Slot[Conditioning], cfg: float = 8.0, neg_scale: float = 1.0):
        super().__init__(**{"model": model, "positive": positive, "negative": negative, "empty_conditioning": empty_conditioning, "cfg": cfg, "neg_scale": neg_scale})
        self.inputs = PerpNegGuiderInputs(self)
        self.outputs = PerpNegGuiderOutputs(self)
