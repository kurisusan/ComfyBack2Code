
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for RebatchLatents
class RebatchLatentsInputs(InputSlots):
    latents: Slot[Latent]
    batch_size: Slot[int]
    def __init__(self, node: "Node"):
        self.latents = Slot[Latent](node, "latents", 'LATENT')
        self.batch_size = Slot[int](node, "batch_size", 'INT')

class RebatchLatentsOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class RebatchLatents(Node[RebatchLatentsInputs, RebatchLatentsOutputs]):
    """
    Original name: RebatchLatents
    No description available.
    """
    _original_name: str = 'RebatchLatents'

    def __init__(self, latents: Slot[Latent], batch_size: int = 1):
        super().__init__(**{"latents": latents, "batch_size": batch_size})
        self.inputs = RebatchLatentsInputs(self)
        self.outputs = RebatchLatentsOutputs(self)
