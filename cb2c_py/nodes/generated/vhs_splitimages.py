
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_SplitImages
class VHS_SplitImagesInputs(InputSlots):
    images: Slot[Image]
    split_index: Slot[int]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.split_index = Slot[int](node, "split_index", 'INT')

class VHS_SplitImagesOutputs(OutputSlots):
    image_a: Slot[Image]
    a_count: Slot[int]
    image_b: Slot[Image]
    b_count: Slot[int]
    def __init__(self, node: "Node"):
        self.image_a = Slot[Image](node, "IMAGE_A", 'IMAGE')
        self.a_count = Slot[int](node, "A_count", 'INT')
        self.image_b = Slot[Image](node, "IMAGE_B", 'IMAGE')
        self.b_count = Slot[int](node, "B_count", 'INT')

class VHS_SplitImages(Node[VHS_SplitImagesInputs, VHS_SplitImagesOutputs]):
    """
    Original name: VHS_SplitImages
    No description available.
    """
    _original_name: str = 'VHS_SplitImages'

    def __init__(self, images: Slot[Image], split_index: int = 0):
        super().__init__(**{"images": images, "split_index": split_index})
        self.inputs = VHS_SplitImagesInputs(self)
        self.outputs = VHS_SplitImagesOutputs(self)
