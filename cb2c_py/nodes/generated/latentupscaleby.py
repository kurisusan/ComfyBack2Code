
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for LatentUpscaleBy
class LatentUpscaleByInputs(InputSlots):
    samples: Slot[Latent]
    upscale_method: Slot[str]
    scale_by: Slot[float]
    def __init__(self, node: "Node"):
        self.samples = Slot[Latent](node, "samples", 'LATENT')
        self.upscale_method = Slot[str](node, "upscale_method", ['nearest-exact', 'bilinear', 'area', 'bicubic', 'bislerp'])
        self.scale_by = Slot[float](node, "scale_by", 'FLOAT')

class LatentUpscaleByOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class LatentUpscaleBy(Node[LatentUpscaleByInputs, LatentUpscaleByOutputs]):
    """
    Original name: LatentUpscaleBy
    No description available.
    """
    _original_name: str = 'LatentUpscaleBy'

    def __init__(self, samples: Slot[Latent], upscale_method: str, scale_by: float = 1.5):
        super().__init__(**{"samples": samples, "upscale_method": upscale_method, "scale_by": scale_by})
        self.inputs = LatentUpscaleByInputs(self)
        self.outputs = LatentUpscaleByOutputs(self)
