
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class ControlNetApplyAdvanced(Node):
    """
    Original name: ControlNetApplyAdvanced
    No description available.
    """
    _inputs = {
    "positive": [
        "CONDITIONING"
    ],
    "negative": [
        "CONDITIONING"
    ],
    "control_net": [
        "CONTROL_NET"
    ],
    "image": [
        "IMAGE"
    ],
    "strength": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 10.0,
            "step": 0.01
        }
    ],
    "start_percent": [
        "FLOAT",
        {
            "default": 0.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
        }
    ],
    "end_percent": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 1.0,
            "step": 0.001
        }
    ]
}
    _outputs = [
    "CONDITIONING",
    "CONDITIONING"
]
    _original_name = "ControlNetApplyAdvanced"

    def __init__(self, positive, negative, control_net, image, strength=1.0, start_percent=0.0, end_percent=1.0):
        super().__init__(positive=positive, negative=negative, control_net=control_net, image=image, strength=strength, start_percent=start_percent, end_percent=end_percent)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
