
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for LatentBatchSeedBehavior
class LatentBatchSeedBehaviorInputs(InputSlots):
    samples: Slot[Latent]
    seed_behavior: Slot[str]
    def __init__(self, node: "Node"):
        self.samples = Slot[Latent](node, "samples", 'LATENT')
        self.seed_behavior = Slot[str](node, "seed_behavior", ['random', 'fixed'])

class LatentBatchSeedBehaviorOutputs(OutputSlots):
    latent: Slot[Latent]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')

class LatentBatchSeedBehavior(Node[LatentBatchSeedBehaviorInputs, LatentBatchSeedBehaviorOutputs]):
    """
    Original name: LatentBatchSeedBehavior
    No description available.
    """
    _original_name: str = 'LatentBatchSeedBehavior'

    def __init__(self, samples: Slot[Latent], seed_behavior: str = 'fixed'):
        super().__init__(**{"samples": samples, "seed_behavior": seed_behavior})
        self.inputs = LatentBatchSeedBehaviorInputs(self)
        self.outputs = LatentBatchSeedBehaviorOutputs(self)
