
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VAEDecodeAudio
class VAEDecodeAudioInputs(InputSlots):
    samples: Slot[Latent]
    vae: Slot[Vae]
    def __init__(self, node: "Node"):
        self.samples = Slot[Latent](node, "samples", 'LATENT')
        self.vae = Slot[Vae](node, "vae", 'VAE')

class VAEDecodeAudioOutputs(OutputSlots):
    audio: Slot[Any]
    def __init__(self, node: "Node"):
        self.audio = Slot[Any](node, "AUDIO", 'AUDIO')

class VAEDecodeAudio(Node[VAEDecodeAudioInputs, VAEDecodeAudioOutputs]):
    """
    Original name: VAEDecodeAudio
    Category: latent/audio
    

    Inputs:
        - samples (Latent)
        - vae (Vae)

    Outputs:
        - audio (Any)
    """
    _original_name: str = 'VAEDecodeAudio'

    def __init__(self, samples: Slot[Latent], vae: Slot[Vae]):
        super().__init__(**{"samples": samples, "vae": vae})
        self.inputs = VAEDecodeAudioInputs(self)
        self.outputs = VAEDecodeAudioOutputs(self)
