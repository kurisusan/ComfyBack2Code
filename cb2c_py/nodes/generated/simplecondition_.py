
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SimpleCondition_
class SimpleCondition_Inputs(InputSlots):
    evaluate: Slot[Any]
    on_true: Slot[Any]
    def __init__(self, node: "Node"):
        self.evaluate = Slot[Any](node, "evaluate", '*')
        self.on_true = Slot[Any](node, "on_true", '*')

class SimpleCondition_Outputs(OutputSlots):
    result: Slot[Any]
    def __init__(self, node: "Node"):
        self.result = Slot[Any](node, "result", '*')

class SimpleCondition_(Node[SimpleCondition_Inputs, SimpleCondition_Outputs]):
    """
    Original name: SimpleCondition+
    Category: essentials/utilities
    

    Inputs:
        - evaluate (Any) (default: 0)
        - on_true (Any) (default: 0)

    Outputs:
        - result (Any)
    """
    _original_name: str = 'SimpleCondition+'

    def __init__(self, evaluate: Slot[Any] = 0, on_true: Slot[Any] = 0):
        super().__init__(**{"evaluate": evaluate, "on_true": on_true})
        self.inputs = SimpleCondition_Inputs(self)
        self.outputs = SimpleCondition_Outputs(self)
