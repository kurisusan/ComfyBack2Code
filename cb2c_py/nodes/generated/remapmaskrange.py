
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for RemapMaskRange
class RemapMaskRangeInputs(InputSlots):
    mask: Slot[Image]
    min: Slot[float]
    max: Slot[float]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')
        self.min = Slot[float](node, "min", 'FLOAT')
        self.max = Slot[float](node, "max", 'FLOAT')

class RemapMaskRangeOutputs(OutputSlots):
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')

class RemapMaskRange(Node[RemapMaskRangeInputs, RemapMaskRangeOutputs]):
    """
    Original name: RemapMaskRange
    No description available.
    """
    _original_name: str = 'RemapMaskRange'

    def __init__(self, mask: Slot[Image], min: float = 0.0, max: float = 1.0):
        super().__init__(**{"mask": mask, "min": min, "max": max})
        self.inputs = RemapMaskRangeInputs(self)
        self.outputs = RemapMaskRangeOutputs(self)
