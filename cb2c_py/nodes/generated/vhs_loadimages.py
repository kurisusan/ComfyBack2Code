
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_LoadImages
class VHS_LoadImagesInputs(InputSlots):
    directory: Slot[str]
    def __init__(self, node: "Node"):
        self.directory = Slot[str](node, "directory", ['3d'])

class VHS_LoadImagesOutputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Image]
    frame_count: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Image](node, "MASK", 'MASK')
        self.frame_count = Slot[int](node, "frame_count", 'INT')

class VHS_LoadImages(Node[VHS_LoadImagesInputs, VHS_LoadImagesOutputs]):
    """
    Original name: VHS_LoadImages
    No description available.
    """
    _original_name: str = 'VHS_LoadImages'

    def __init__(self, directory: str):
        super().__init__(**{"directory": directory})
        self.inputs = VHS_LoadImagesInputs(self)
        self.outputs = VHS_LoadImagesOutputs(self)
