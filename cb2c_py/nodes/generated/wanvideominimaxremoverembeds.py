
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for WanVideoMiniMaxRemoverEmbeds
class WanVideoMiniMaxRemoverEmbedsInputs(InputSlots):
    width: Slot[int]
    height: Slot[int]
    num_frames: Slot[int]
    latents: Slot[Latent]
    mask_latents: Slot[Latent]
    def __init__(self, node: "Node"):
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.num_frames = Slot[int](node, "num_frames", 'INT')
        self.latents = Slot[Latent](node, "latents", 'LATENT')
        self.mask_latents = Slot[Latent](node, "mask_latents", 'LATENT')

class WanVideoMiniMaxRemoverEmbedsOutputs(OutputSlots):
    image_embeds: Slot[Any]
    def __init__(self, node: "Node"):
        self.image_embeds = Slot[Any](node, "image_embeds", 'WANVIDIMAGE_EMBEDS')

class WanVideoMiniMaxRemoverEmbeds(Node[WanVideoMiniMaxRemoverEmbedsInputs, WanVideoMiniMaxRemoverEmbedsOutputs]):
    """
    Original name: WanVideoMiniMaxRemoverEmbeds
    No description available.
    """
    _original_name: str = 'WanVideoMiniMaxRemoverEmbeds'

    def __init__(self, latents: Slot[Latent], mask_latents: Slot[Latent], width: int = 832, height: int = 480, num_frames: int = 81):
        super().__init__(**{"width": width, "height": height, "num_frames": num_frames, "latents": latents, "mask_latents": mask_latents})
        self.inputs = WanVideoMiniMaxRemoverEmbedsInputs(self)
        self.outputs = WanVideoMiniMaxRemoverEmbedsOutputs(self)
