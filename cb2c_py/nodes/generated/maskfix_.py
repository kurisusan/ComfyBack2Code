
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for MaskFix_
class MaskFix_Inputs(InputSlots):
    mask: Slot[Image]
    erode_dilate: Slot[int]
    fill_holes: Slot[int]
    remove_isolated_pixels: Slot[int]
    smooth: Slot[int]
    blur: Slot[int]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')
        self.erode_dilate = Slot[int](node, "erode_dilate", 'INT')
        self.fill_holes = Slot[int](node, "fill_holes", 'INT')
        self.remove_isolated_pixels = Slot[int](node, "remove_isolated_pixels", 'INT')
        self.smooth = Slot[int](node, "smooth", 'INT')
        self.blur = Slot[int](node, "blur", 'INT')

class MaskFix_Outputs(OutputSlots):
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "MASK", 'MASK')

class MaskFix_(Node[MaskFix_Inputs, MaskFix_Outputs]):
    """
    Original name: MaskFix+
    Category: essentials/mask
    

    Inputs:
        - mask (Image)
        - erode_dilate (int) (default: 0)
        - fill_holes (int) (default: 0)
        - remove_isolated_pixels (int) (default: 0)
        - smooth (int) (default: 0)
        - blur (int) (default: 0)

    Outputs:
        - mask (Image)
    """
    _original_name: str = 'MaskFix+'

    def __init__(self, mask: Slot[Image], erode_dilate: int = 0, fill_holes: int = 0, remove_isolated_pixels: int = 0, smooth: int = 0, blur: int = 0):
        super().__init__(**{"mask": mask, "erode_dilate": erode_dilate, "fill_holes": fill_holes, "remove_isolated_pixels": remove_isolated_pixels, "smooth": smooth, "blur": blur})
        self.inputs = MaskFix_Inputs(self)
        self.outputs = MaskFix_Outputs(self)
