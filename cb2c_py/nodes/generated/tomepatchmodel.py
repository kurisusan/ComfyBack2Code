
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for TomePatchModel
class TomePatchModelInputs(InputSlots):
    model: Slot[Model]
    ratio: Slot[float]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.ratio = Slot[float](node, "ratio", 'FLOAT')

class TomePatchModelOutputs(OutputSlots):
    model: Slot[Model]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "MODEL", 'MODEL')

class TomePatchModel(Node[TomePatchModelInputs, TomePatchModelOutputs]):
    """
    Original name: TomePatchModel
    No description available.
    """
    _original_name: str = 'TomePatchModel'

    def __init__(self, model: Slot[Model], ratio: float = 0.3):
        super().__init__(**{"model": model, "ratio": ratio})
        self.inputs = TomePatchModelInputs(self)
        self.outputs = TomePatchModelOutputs(self)
