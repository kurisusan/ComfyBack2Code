
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_VideoCombine
class VHS_VideoCombineInputs(InputSlots):
    images: Slot[Image]
    frame_rate: Slot[Union[float, int]]
    loop_count: Slot[int]
    filename_prefix: Slot[str]
    format: Slot[str]
    pingpong: Slot[bool]
    save_output: Slot[bool]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.frame_rate = Slot[Union[float, int]](node, "frame_rate", 'FLOAT')
        self.loop_count = Slot[int](node, "loop_count", 'INT')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')
        self.format = Slot[str](node, "format", ['image/gif', 'image/webp', 'video/ffmpeg-gif', 'video/8bit-png', 'video/nvenc_av1-mp4', 'video/webm', 'video/h265-mp4', 'video/ProRes', 'video/h264-mp4', 'video/nvenc_hevc-mp4', 'video/av1-webm', 'video/16bit-png', 'video/nvenc_h264-mp4'])
        self.pingpong = Slot[bool](node, "pingpong", 'BOOLEAN')
        self.save_output = Slot[bool](node, "save_output", 'BOOLEAN')

class VHS_VideoCombineOutputs(OutputSlots):
    filenames: Slot[Any]
    def __init__(self, node: "Node"):
        self.filenames = Slot[Any](node, "Filenames", 'VHS_FILENAMES')

class VHS_VideoCombine(Node[VHS_VideoCombineInputs, VHS_VideoCombineOutputs]):
    """
    Original name: VHS_VideoCombine
    No description available.
    """
    _original_name: str = 'VHS_VideoCombine'

    def __init__(self, images: Slot[Image], format: str, frame_rate: Union[float, int] = 8, loop_count: int = 0, filename_prefix: str = 'AnimateDiff', pingpong: bool = False, save_output: bool = True):
        super().__init__(**{"images": images, "frame_rate": frame_rate, "loop_count": loop_count, "filename_prefix": filename_prefix, "format": format, "pingpong": pingpong, "save_output": save_output})
        self.inputs = VHS_VideoCombineInputs(self)
        self.outputs = VHS_VideoCombineOutputs(self)
