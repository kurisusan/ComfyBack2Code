
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for NormalizedAmplitudeToFloatList
class NormalizedAmplitudeToFloatListInputs(InputSlots):
    normalized_amp: Slot[Any]
    def __init__(self, node: "Node"):
        self.normalized_amp = Slot[Any](node, "normalized_amp", 'NORMALIZED_AMPLITUDE')

class NormalizedAmplitudeToFloatListOutputs(OutputSlots):
    float: Slot[float]
    def __init__(self, node: "Node"):
        self.float = Slot[float](node, "FLOAT", 'FLOAT')

class NormalizedAmplitudeToFloatList(Node[NormalizedAmplitudeToFloatListInputs, NormalizedAmplitudeToFloatListOutputs]):
    """
    Original name: NormalizedAmplitudeToFloatList
    No description available.
    """
    _original_name: str = 'NormalizedAmplitudeToFloatList'

    def __init__(self, normalized_amp: Slot[Any]):
        super().__init__(**{"normalized_amp": normalized_amp})
        self.inputs = NormalizedAmplitudeToFloatListInputs(self)
        self.outputs = NormalizedAmplitudeToFloatListOutputs(self)
