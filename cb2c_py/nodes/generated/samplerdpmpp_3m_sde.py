
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for SamplerDPMPP_3M_SDE
class SamplerDPMPP_3M_SDEInputs(InputSlots):
    eta: Slot[float]
    s_noise: Slot[float]
    noise_device: Slot[str]
    def __init__(self, node: "Node"):
        self.eta = Slot[float](node, "eta", 'FLOAT')
        self.s_noise = Slot[float](node, "s_noise", 'FLOAT')
        self.noise_device = Slot[str](node, "noise_device", ['gpu', 'cpu'])

class SamplerDPMPP_3M_SDEOutputs(OutputSlots):
    sampler: Slot[Any]
    def __init__(self, node: "Node"):
        self.sampler = Slot[Any](node, "SAMPLER", 'SAMPLER')

class SamplerDPMPP_3M_SDE(Node[SamplerDPMPP_3M_SDEInputs, SamplerDPMPP_3M_SDEOutputs]):
    """
    Original name: SamplerDPMPP_3M_SDE
    No description available.
    """
    _original_name: str = 'SamplerDPMPP_3M_SDE'

    def __init__(self, noise_device: str, eta: float = 1.0, s_noise: float = 1.0):
        super().__init__(**{"eta": eta, "s_noise": s_noise, "noise_device": noise_device})
        self.inputs = SamplerDPMPP_3M_SDEInputs(self)
        self.outputs = SamplerDPMPP_3M_SDEOutputs(self)
