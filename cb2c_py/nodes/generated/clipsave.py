
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CLIPSave
class CLIPSaveInputs(InputSlots):
    clip: Slot[Clip]
    filename_prefix: Slot[str]
    def __init__(self, node: "Node"):
        self.clip = Slot[Clip](node, "clip", 'CLIP')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')

class CLIPSaveOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class CLIPSave(Node[CLIPSaveInputs, CLIPSaveOutputs]):
    """
    Original name: CLIPSave
    No description available.
    """
    _original_name: str = 'CLIPSave'

    def __init__(self, clip: Slot[Clip], filename_prefix: str = 'clip/ComfyUI'):
        super().__init__(**{"clip": clip, "filename_prefix": filename_prefix})
        self.inputs = CLIPSaveInputs(self)
        self.outputs = CLIPSaveOutputs(self)
