
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_SelectMasks
class VHS_SelectMasksInputs(InputSlots):
    mask: Slot[Image]
    indexes: Slot[str]
    err_if_missing: Slot[bool]
    err_if_empty: Slot[bool]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')
        self.indexes = Slot[str](node, "indexes", 'STRING')
        self.err_if_missing = Slot[bool](node, "err_if_missing", 'BOOLEAN')
        self.err_if_empty = Slot[bool](node, "err_if_empty", 'BOOLEAN')

class VHS_SelectMasksOutputs(OutputSlots):
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "MASK", 'MASK')

class VHS_SelectMasks(Node[VHS_SelectMasksInputs, VHS_SelectMasksOutputs]):
    """
    Original name: VHS_SelectMasks
    No description available.
    """
    _original_name: str = 'VHS_SelectMasks'

    def __init__(self, mask: Slot[Image], indexes: str = '0', err_if_missing: bool = True, err_if_empty: bool = True):
        super().__init__(**{"mask": mask, "indexes": indexes, "err_if_missing": err_if_missing, "err_if_empty": err_if_empty})
        self.inputs = VHS_SelectMasksInputs(self)
        self.outputs = VHS_SelectMasksOutputs(self)
