
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for LumaConceptsNode
class LumaConceptsNodeInputs(InputSlots):
    concept1: Slot[str]
    concept2: Slot[str]
    concept3: Slot[str]
    concept4: Slot[str]
    def __init__(self, node: "Node"):
        self.concept1 = Slot[str](node, "concept1", ['None', 'truck_left', 'pan_right', 'pedestal_down', 'low_angle', 'pedestal_up', 'selfie', 'pan_left', 'roll_right', 'zoom_in', 'over_the_shoulder', 'orbit_right', 'orbit_left', 'static', 'tiny_planet', 'high_angle', 'bolt_cam', 'dolly_zoom', 'overhead', 'zoom_out', 'handheld', 'roll_left', 'pov', 'aerial_drone', 'push_in', 'crane_down', 'truck_right', 'tilt_down', 'elevator_doors', 'tilt_up', 'ground_level', 'pull_out', 'aerial', 'crane_up', 'eye_level'])
        self.concept2 = Slot[str](node, "concept2", ['None', 'truck_left', 'pan_right', 'pedestal_down', 'low_angle', 'pedestal_up', 'selfie', 'pan_left', 'roll_right', 'zoom_in', 'over_the_shoulder', 'orbit_right', 'orbit_left', 'static', 'tiny_planet', 'high_angle', 'bolt_cam', 'dolly_zoom', 'overhead', 'zoom_out', 'handheld', 'roll_left', 'pov', 'aerial_drone', 'push_in', 'crane_down', 'truck_right', 'tilt_down', 'elevator_doors', 'tilt_up', 'ground_level', 'pull_out', 'aerial', 'crane_up', 'eye_level'])
        self.concept3 = Slot[str](node, "concept3", ['None', 'truck_left', 'pan_right', 'pedestal_down', 'low_angle', 'pedestal_up', 'selfie', 'pan_left', 'roll_right', 'zoom_in', 'over_the_shoulder', 'orbit_right', 'orbit_left', 'static', 'tiny_planet', 'high_angle', 'bolt_cam', 'dolly_zoom', 'overhead', 'zoom_out', 'handheld', 'roll_left', 'pov', 'aerial_drone', 'push_in', 'crane_down', 'truck_right', 'tilt_down', 'elevator_doors', 'tilt_up', 'ground_level', 'pull_out', 'aerial', 'crane_up', 'eye_level'])
        self.concept4 = Slot[str](node, "concept4", ['None', 'truck_left', 'pan_right', 'pedestal_down', 'low_angle', 'pedestal_up', 'selfie', 'pan_left', 'roll_right', 'zoom_in', 'over_the_shoulder', 'orbit_right', 'orbit_left', 'static', 'tiny_planet', 'high_angle', 'bolt_cam', 'dolly_zoom', 'overhead', 'zoom_out', 'handheld', 'roll_left', 'pov', 'aerial_drone', 'push_in', 'crane_down', 'truck_right', 'tilt_down', 'elevator_doors', 'tilt_up', 'ground_level', 'pull_out', 'aerial', 'crane_up', 'eye_level'])

class LumaConceptsNodeOutputs(OutputSlots):
    luma_concepts: Slot[Any]
    def __init__(self, node: "Node"):
        self.luma_concepts = Slot[Any](node, "luma_concepts", 'LUMA_CONCEPTS')

class LumaConceptsNode(Node[LumaConceptsNodeInputs, LumaConceptsNodeOutputs]):
    """
    Original name: LumaConceptsNode
    No description available.
    """
    _original_name: str = 'LumaConceptsNode'

    def __init__(self, concept1: str, concept2: str, concept3: str, concept4: str):
        super().__init__(**{"concept1": concept1, "concept2": concept2, "concept3": concept3, "concept4": concept4})
        self.inputs = LumaConceptsNodeInputs(self)
        self.outputs = LumaConceptsNodeOutputs(self)
