
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for SaveImageKJ
class SaveImageKJInputs(InputSlots):
    images: Slot[Image]
    filename_prefix: Slot[str]
    output_folder: Slot[str]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')
        self.output_folder = Slot[str](node, "output_folder", 'STRING')

class SaveImageKJOutputs(OutputSlots):
    filename: Slot[str]
    def __init__(self, node: "Node"):
        self.filename = Slot[str](node, "filename", 'STRING')

class SaveImageKJ(Node[SaveImageKJInputs, SaveImageKJOutputs]):
    """
    Original name: SaveImageKJ
    No description available.
    """
    _original_name: str = 'SaveImageKJ'

    def __init__(self, images: Slot[Image], filename_prefix: str = 'ComfyUI', output_folder: str = 'output'):
        super().__init__(**{"images": images, "filename_prefix": filename_prefix, "output_folder": output_folder})
        self.inputs = SaveImageKJInputs(self)
        self.outputs = SaveImageKJOutputs(self)
