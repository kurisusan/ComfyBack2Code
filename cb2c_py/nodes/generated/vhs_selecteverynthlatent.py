
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for VHS_SelectEveryNthLatent
class VHS_SelectEveryNthLatentInputs(InputSlots):
    latents: Slot[Latent]
    select_every_nth: Slot[int]
    skip_first_latents: Slot[int]
    def __init__(self, node: "Node"):
        self.latents = Slot[Latent](node, "latents", 'LATENT')
        self.select_every_nth = Slot[int](node, "select_every_nth", 'INT')
        self.skip_first_latents = Slot[int](node, "skip_first_latents", 'INT')

class VHS_SelectEveryNthLatentOutputs(OutputSlots):
    latent: Slot[Latent]
    count: Slot[int]
    def __init__(self, node: "Node"):
        self.latent = Slot[Latent](node, "LATENT", 'LATENT')
        self.count = Slot[int](node, "count", 'INT')

class VHS_SelectEveryNthLatent(Node[VHS_SelectEveryNthLatentInputs, VHS_SelectEveryNthLatentOutputs]):
    """
    Original name: VHS_SelectEveryNthLatent
    No description available.
    """
    _original_name: str = 'VHS_SelectEveryNthLatent'

    def __init__(self, latents: Slot[Latent], select_every_nth: int = 1, skip_first_latents: int = 0):
        super().__init__(**{"latents": latents, "select_every_nth": select_every_nth, "skip_first_latents": skip_first_latents})
        self.inputs = VHS_SelectEveryNthLatentInputs(self)
        self.outputs = VHS_SelectEveryNthLatentOutputs(self)
