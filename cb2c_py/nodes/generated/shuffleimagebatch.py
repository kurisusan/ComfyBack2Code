
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ShuffleImageBatch
class ShuffleImageBatchInputs(InputSlots):
    images: Slot[Image]
    seed: Slot[int]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.seed = Slot[int](node, "seed", 'INT')

class ShuffleImageBatchOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ShuffleImageBatch(Node[ShuffleImageBatchInputs, ShuffleImageBatchOutputs]):
    """
    Original name: ShuffleImageBatch
    No description available.
    """
    _original_name: str = 'ShuffleImageBatch'

    def __init__(self, images: Slot[Image], seed: int = 123):
        super().__init__(**{"images": images, "seed": seed})
        self.inputs = ShuffleImageBatchInputs(self)
        self.outputs = ShuffleImageBatchOutputs(self)
