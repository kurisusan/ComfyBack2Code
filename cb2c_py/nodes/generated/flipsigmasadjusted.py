
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for FlipSigmasAdjusted
class FlipSigmasAdjustedInputs(InputSlots):
    sigmas: Slot[Any]
    divide_by_last_sigma: Slot[bool]
    divide_by: Slot[Union[float, int]]
    offset_by: Slot[int]
    def __init__(self, node: "Node"):
        self.sigmas = Slot[Any](node, "sigmas", 'SIGMAS')
        self.divide_by_last_sigma = Slot[bool](node, "divide_by_last_sigma", 'BOOLEAN')
        self.divide_by = Slot[Union[float, int]](node, "divide_by", 'FLOAT')
        self.offset_by = Slot[int](node, "offset_by", 'INT')

class FlipSigmasAdjustedOutputs(OutputSlots):
    sigmas: Slot[Any]
    sigmas_string: Slot[str]
    def __init__(self, node: "Node"):
        self.sigmas = Slot[Any](node, "SIGMAS", 'SIGMAS')
        self.sigmas_string = Slot[str](node, "sigmas_string", 'STRING')

class FlipSigmasAdjusted(Node[FlipSigmasAdjustedInputs, FlipSigmasAdjustedOutputs]):
    """
    Original name: FlipSigmasAdjusted
    Category: KJNodes/noise
    

    Inputs:
        - sigmas (Any)
        - divide_by_last_sigma (bool) (default: False)
        - divide_by (float) (default: 1)
        - offset_by (int) (default: 1)

    Outputs:
        - sigmas (Any)
        - sigmas_string (str)
    """
    _original_name: str = 'FlipSigmasAdjusted'

    def __init__(self, sigmas: Slot[Any], divide_by_last_sigma: bool = False, divide_by: Union[float, int] = 1, offset_by: int = 1):
        super().__init__(**{"sigmas": sigmas, "divide_by_last_sigma": divide_by_last_sigma, "divide_by": divide_by, "offset_by": offset_by})
        self.inputs = FlipSigmasAdjustedInputs(self)
        self.outputs = FlipSigmasAdjustedOutputs(self)
