
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for MaskBatchMulti
class MaskBatchMultiInputs(InputSlots):
    inputcount: Slot[int]
    mask_1: Slot[Any]
    mask_2: Slot[Any]
    def __init__(self, node: "Node"):
        self.inputcount = Slot[int](node, "inputcount", 'INT')
        self.mask_1 = Slot[Any](node, "mask_1", 'MASK')
        self.mask_2 = Slot[Any](node, "mask_2", 'MASK')

class MaskBatchMultiOutputs(OutputSlots):
    masks: Slot[Any]
    def __init__(self, node: "Node"):
        self.masks = Slot[Any](node, "masks", 'MASK')

class MaskBatchMulti(Node[MaskBatchMultiInputs, MaskBatchMultiOutputs]):
    """
    Original name: MaskBatchMulti
    No description available.
    """
    _original_name: str = 'MaskBatchMulti'

    def __init__(self, mask_1: Slot[Any], mask_2: Slot[Any], inputcount: int = 2):
        super().__init__(**{"inputcount": inputcount, "mask_1": mask_1, "mask_2": mask_2})
        self.inputs = MaskBatchMultiInputs(self)
        self.outputs = MaskBatchMultiOutputs(self)
