
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SaveImage
class SaveImageInputs(InputSlots):
    images: Slot[Image]
    filename_prefix: Slot[str]
    def __init__(self, node: "Node"):
        self.images = Slot[Image](node, "images", 'IMAGE')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')

class SaveImageOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class SaveImage(Node[SaveImageInputs, SaveImageOutputs]):
    """
    Original name: SaveImage
    Category: image
    Saves the input images to your ComfyUI output directory.

    Inputs:
        - images (Image)
          The images to save.
        - filename_prefix (str) (default: 'ComfyUI')
          The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes.

    Outputs:
        No outputs.
    """
    _original_name: str = 'SaveImage'

    def __init__(self, images: Slot[Image], filename_prefix: str = 'ComfyUI'):
        super().__init__(**{"images": images, "filename_prefix": filename_prefix})
        self.inputs = SaveImageInputs(self)
        self.outputs = SaveImageOutputs(self)
