
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for KlingVirtualTryOnNode
class KlingVirtualTryOnNodeInputs(InputSlots):
    human_image: Slot[Image]
    cloth_image: Slot[Image]
    model_name: Slot[str]
    def __init__(self, node: "Node"):
        self.human_image = Slot[Image](node, "human_image", 'IMAGE')
        self.cloth_image = Slot[Image](node, "cloth_image", 'IMAGE')
        self.model_name = Slot[str](node, "model_name", 'COMBO')

class KlingVirtualTryOnNodeOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class KlingVirtualTryOnNode(Node[KlingVirtualTryOnNodeInputs, KlingVirtualTryOnNodeOutputs]):
    """
    Original name: KlingVirtualTryOnNode
    Category: api node/image/Kling
    Kling Virtual Try On Node. Input a human image and a cloth image to try on the cloth on the human. You can merge multiple clothing item pictures into one image with a white background.

    Inputs:
        - human_image (Image)
        - cloth_image (Image)
        - model_name (Any) (default: 'kolors-virtual-try-on-v1')

    Outputs:
        - image (Image)
    """
    _original_name: str = 'KlingVirtualTryOnNode'

    def __init__(self, human_image: Slot[Image], cloth_image: Slot[Image], model_name: str = 'kolors-virtual-try-on-v1'):
        super().__init__(**{"human_image": human_image, "cloth_image": cloth_image, "model_name": model_name})
        self.inputs = KlingVirtualTryOnNodeInputs(self)
        self.outputs = KlingVirtualTryOnNodeOutputs(self)
