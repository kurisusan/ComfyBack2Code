
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CustomControlNetWeightsFluxFromList
class CustomControlNetWeightsFluxFromListInputs(InputSlots):
    list_of_floats: Slot[float]
    def __init__(self, node: "Node"):
        self.list_of_floats = Slot[float](node, "list_of_floats", 'FLOAT')

class CustomControlNetWeightsFluxFromListOutputs(OutputSlots):
    cn_weights: Slot[Any]
    tk_shortcut: Slot[Any]
    def __init__(self, node: "Node"):
        self.cn_weights = Slot[Any](node, "CN_WEIGHTS", 'CONTROL_NET_WEIGHTS')
        self.tk_shortcut = Slot[Any](node, "TK_SHORTCUT", 'TIMESTEP_KEYFRAME')

class CustomControlNetWeightsFluxFromList(Node[CustomControlNetWeightsFluxFromListInputs, CustomControlNetWeightsFluxFromListOutputs]):
    """
    Original name: CustomControlNetWeightsFluxFromList
    Category: KJNodes/controlnet
    Creates controlnet weights from a list of floats for Advanced-ControlNet

    Inputs:
        - list_of_floats (float)

    Outputs:
        - cn_weights (Any)
        - tk_shortcut (Any)
    """
    _original_name: str = 'CustomControlNetWeightsFluxFromList'

    def __init__(self, list_of_floats: float):
        super().__init__(**{"list_of_floats": list_of_floats})
        self.inputs = CustomControlNetWeightsFluxFromListInputs(self)
        self.outputs = CustomControlNetWeightsFluxFromListOutputs(self)
