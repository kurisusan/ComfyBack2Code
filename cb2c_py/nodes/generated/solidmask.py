
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SolidMask
class SolidMaskInputs(InputSlots):
    value: Slot[float]
    width: Slot[int]
    height: Slot[int]
    def __init__(self, node: "Node"):
        self.value = Slot[float](node, "value", 'FLOAT')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')

class SolidMaskOutputs(OutputSlots):
    mask: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "MASK", 'MASK')

class SolidMask(Node[SolidMaskInputs, SolidMaskOutputs]):
    """
    Original name: SolidMask
    Category: mask
    

    Inputs:
        - value (float) (default: 1.0)
        - width (int) (default: 512)
        - height (int) (default: 512)

    Outputs:
        - mask (Image)
    """
    _original_name: str = 'SolidMask'

    def __init__(self, value: float = 1.0, width: int = 512, height: int = 512):
        super().__init__(**{"value": value, "width": width, "height": height})
        self.inputs = SolidMaskInputs(self)
        self.outputs = SolidMaskOutputs(self)
