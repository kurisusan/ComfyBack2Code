
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ControlNetAuxSimpleAddText
class ControlNetAuxSimpleAddTextInputs(InputSlots):
    image: Slot[Image]
    text: Slot[str]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.text = Slot[str](node, "text", 'STRING')

class ControlNetAuxSimpleAddTextOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ControlNetAuxSimpleAddText(Node[ControlNetAuxSimpleAddTextInputs, ControlNetAuxSimpleAddTextOutputs]):
    """
    Original name: ControlNetAuxSimpleAddText
    Category: ControlNet Preprocessors
    

    Inputs:
        - image (Image)
        - text (str) (default: '')

    Outputs:
        - image (Image)
    """
    _original_name: str = 'ControlNetAuxSimpleAddText'

    def __init__(self, image: Slot[Image], text: str = ''):
        super().__init__(**{"image": image, "text": text})
        self.inputs = ControlNetAuxSimpleAddTextInputs(self)
        self.outputs = ControlNetAuxSimpleAddTextOutputs(self)
