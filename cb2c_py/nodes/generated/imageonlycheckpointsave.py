
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageOnlyCheckpointSave
class ImageOnlyCheckpointSaveInputs(InputSlots):
    model: Slot[Model]
    clip_vision: Slot[Any]
    vae: Slot[Vae]
    filename_prefix: Slot[str]
    def __init__(self, node: "Node"):
        self.model = Slot[Model](node, "model", 'MODEL')
        self.clip_vision = Slot[Any](node, "clip_vision", 'CLIP_VISION')
        self.vae = Slot[Vae](node, "vae", 'VAE')
        self.filename_prefix = Slot[str](node, "filename_prefix", 'STRING')

class ImageOnlyCheckpointSaveOutputs(OutputSlots):

    def __init__(self, node: "Node"):
        pass

class ImageOnlyCheckpointSave(Node[ImageOnlyCheckpointSaveInputs, ImageOnlyCheckpointSaveOutputs]):
    """
    Original name: ImageOnlyCheckpointSave
    No description available.
    """
    _original_name: str = 'ImageOnlyCheckpointSave'

    def __init__(self, model: Slot[Model], clip_vision: Slot[Any], vae: Slot[Vae], filename_prefix: str = 'checkpoints/ComfyUI'):
        super().__init__(**{"model": model, "clip_vision": clip_vision, "vae": vae, "filename_prefix": filename_prefix})
        self.inputs = ImageOnlyCheckpointSaveInputs(self)
        self.outputs = ImageOnlyCheckpointSaveOutputs(self)
