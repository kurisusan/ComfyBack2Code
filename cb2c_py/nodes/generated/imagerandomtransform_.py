
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for ImageRandomTransform_
class ImageRandomTransform_Inputs(InputSlots):
    image: Slot[Image]
    seed: Slot[int]
    repeat: Slot[int]
    variation: Slot[float]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.seed = Slot[int](node, "seed", 'INT')
        self.repeat = Slot[int](node, "repeat", 'INT')
        self.variation = Slot[float](node, "variation", 'FLOAT')

class ImageRandomTransform_Outputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class ImageRandomTransform_(Node[ImageRandomTransform_Inputs, ImageRandomTransform_Outputs]):
    """
    Original name: ImageRandomTransform+
    Category: essentials/image manipulation
    

    Inputs:
        - image (Image)
        - seed (int) (default: 0)
        - repeat (int) (default: 1)
        - variation (float) (default: 0.1)

    Outputs:
        - image (Image)
    """
    _original_name: str = 'ImageRandomTransform+'

    def __init__(self, image: Slot[Image], seed: int = 0, repeat: int = 1, variation: float = 0.1):
        super().__init__(**{"image": image, "seed": seed, "repeat": repeat, "variation": variation})
        self.inputs = ImageRandomTransform_Inputs(self)
        self.outputs = ImageRandomTransform_Outputs(self)
