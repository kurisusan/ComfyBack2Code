
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for LotusConditioning
class LotusConditioningInputs(InputSlots):

    def __init__(self, node: "Node"):
        pass

class LotusConditioningOutputs(OutputSlots):
    conditioning: Slot[Conditioning]
    def __init__(self, node: "Node"):
        self.conditioning = Slot[Conditioning](node, "conditioning", 'CONDITIONING')

class LotusConditioning(Node[LotusConditioningInputs, LotusConditioningOutputs]):
    """
    Original name: LotusConditioning
    No description available.
    """
    _original_name: str = 'LotusConditioning'

    def __init__(self, ):
        super().__init__(**{})
        self.inputs = LotusConditioningInputs(self)
        self.outputs = LotusConditioningOutputs(self)
