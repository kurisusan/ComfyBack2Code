
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CreateHookModelAsLoraModelOnly
class CreateHookModelAsLoraModelOnlyInputs(InputSlots):
    ckpt_name: Slot[str]
    strength_model: Slot[float]
    def __init__(self, node: "Node"):
        self.ckpt_name = Slot[str](node, "ckpt_name", ['v1-5-pruned-emaonly.safetensors'])
        self.strength_model = Slot[float](node, "strength_model", 'FLOAT')

class CreateHookModelAsLoraModelOnlyOutputs(OutputSlots):
    hooks: Slot[Any]
    def __init__(self, node: "Node"):
        self.hooks = Slot[Any](node, "HOOKS", 'HOOKS')

class CreateHookModelAsLoraModelOnly(Node[CreateHookModelAsLoraModelOnlyInputs, CreateHookModelAsLoraModelOnlyOutputs]):
    """
    Original name: CreateHookModelAsLoraModelOnly
    No description available.
    """
    _original_name: str = 'CreateHookModelAsLoraModelOnly'

    def __init__(self, ckpt_name: str, strength_model: float = 1.0):
        super().__init__(**{"ckpt_name": ckpt_name, "strength_model": strength_model})
        self.inputs = CreateHookModelAsLoraModelOnlyInputs(self)
        self.outputs = CreateHookModelAsLoraModelOnlyOutputs(self)
