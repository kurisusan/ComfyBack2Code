
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SamplerER_SDE
class SamplerER_SDEInputs(InputSlots):
    solver_type: Slot[str]
    max_stage: Slot[int]
    eta: Slot[float]
    s_noise: Slot[float]
    def __init__(self, node: "Node"):
        self.solver_type = Slot[str](node, "solver_type", 'COMBO')
        self.max_stage = Slot[int](node, "max_stage", 'INT')
        self.eta = Slot[float](node, "eta", 'FLOAT')
        self.s_noise = Slot[float](node, "s_noise", 'FLOAT')

class SamplerER_SDEOutputs(OutputSlots):
    sampler: Slot[Any]
    def __init__(self, node: "Node"):
        self.sampler = Slot[Any](node, "SAMPLER", 'SAMPLER')

class SamplerER_SDE(Node[SamplerER_SDEInputs, SamplerER_SDEOutputs]):
    """
    Original name: SamplerER_SDE
    Category: sampling/custom_sampling/samplers
    

    Inputs:
        - solver_type (Any)
        - max_stage (int) (default: 3)
        - eta (float) (default: 1.0)
          Stochastic strength of reverse-time SDE.
When eta=0, it reduces to deterministic ODE. This setting doesn't apply to ER-SDE solver type.
        - s_noise (float) (default: 1.0)

    Outputs:
        - sampler (Any)
    """
    _original_name: str = 'SamplerER_SDE'

    def __init__(self, solver_type: str, max_stage: int = 3, eta: float = 1.0, s_noise: float = 1.0):
        super().__init__(**{"solver_type": solver_type, "max_stage": max_stage, "eta": eta, "s_noise": s_noise})
        self.inputs = SamplerER_SDEInputs(self)
        self.outputs = SamplerER_SDEOutputs(self)
