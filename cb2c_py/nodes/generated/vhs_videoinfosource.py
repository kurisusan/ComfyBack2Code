
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for VHS_VideoInfoSource
class VHS_VideoInfoSourceInputs(InputSlots):
    video_info: Slot[Any]
    def __init__(self, node: "Node"):
        self.video_info = Slot[Any](node, "video_info", 'VHS_VIDEOINFO')

class VHS_VideoInfoSourceOutputs(OutputSlots):
    fps_: Slot[float]
    frame_count_: Slot[int]
    duration_: Slot[float]
    width_: Slot[int]
    height_: Slot[int]
    def __init__(self, node: "Node"):
        self.fps_ = Slot[float](node, "fpsðŸŸ¨", 'FLOAT')
        self.frame_count_ = Slot[int](node, "frame_countðŸŸ¨", 'INT')
        self.duration_ = Slot[float](node, "durationðŸŸ¨", 'FLOAT')
        self.width_ = Slot[int](node, "widthðŸŸ¨", 'INT')
        self.height_ = Slot[int](node, "heightðŸŸ¨", 'INT')

class VHS_VideoInfoSource(Node[VHS_VideoInfoSourceInputs, VHS_VideoInfoSourceOutputs]):
    """
    Original name: VHS_VideoInfoSource
    No description available.
    """
    _original_name: str = 'VHS_VideoInfoSource'

    def __init__(self, video_info: Slot[Any]):
        super().__init__(**{"video_info": video_info})
        self.inputs = VHS_VideoInfoSourceInputs(self)
        self.outputs = VHS_VideoInfoSourceOutputs(self)
