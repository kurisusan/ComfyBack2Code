
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for MinimaxTextToVideoNode
class MinimaxTextToVideoNodeInputs(InputSlots):
    prompt_text: Slot[str]
    model: Slot[str]
    def __init__(self, node: "Node"):
        self.prompt_text = Slot[str](node, "prompt_text", 'STRING')
        self.model = Slot[str](node, "model", ['T2V-01', 'T2V-01-Director'])

class MinimaxTextToVideoNodeOutputs(OutputSlots):
    video: Slot[Any]
    def __init__(self, node: "Node"):
        self.video = Slot[Any](node, "VIDEO", 'VIDEO')

class MinimaxTextToVideoNode(Node[MinimaxTextToVideoNodeInputs, MinimaxTextToVideoNodeOutputs]):
    """
    Original name: MinimaxTextToVideoNode
    No description available.
    """
    _original_name: str = 'MinimaxTextToVideoNode'

    def __init__(self, prompt_text: str = '', model: str = 'T2V-01'):
        super().__init__(**{"prompt_text": prompt_text, "model": model})
        self.inputs = MinimaxTextToVideoNodeInputs(self)
        self.outputs = MinimaxTextToVideoNodeOutputs(self)
