
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CreateHookKeyframesFromFloats
class CreateHookKeyframesFromFloatsInputs(InputSlots):
    floats_strength: Slot[Any]
    start_percent: Slot[float]
    end_percent: Slot[float]
    print_keyframes: Slot[bool]
    def __init__(self, node: "Node"):
        self.floats_strength = Slot[Any](node, "floats_strength", 'FLOATS')
        self.start_percent = Slot[float](node, "start_percent", 'FLOAT')
        self.end_percent = Slot[float](node, "end_percent", 'FLOAT')
        self.print_keyframes = Slot[bool](node, "print_keyframes", 'BOOLEAN')

class CreateHookKeyframesFromFloatsOutputs(OutputSlots):
    hook_kf: Slot[Any]
    def __init__(self, node: "Node"):
        self.hook_kf = Slot[Any](node, "HOOK_KF", 'HOOK_KEYFRAMES')

class CreateHookKeyframesFromFloats(Node[CreateHookKeyframesFromFloatsInputs, CreateHookKeyframesFromFloatsOutputs]):
    """
    Original name: CreateHookKeyframesFromFloats
    Category: advanced/hooks/scheduling
    

    Inputs:
        - floats_strength (Any) (default: -1)
        - start_percent (float) (default: 0.0)
        - end_percent (float) (default: 1.0)
        - print_keyframes (bool) (default: False)

    Outputs:
        - hook_kf (Any)
    """
    _original_name: str = 'CreateHookKeyframesFromFloats'

    def __init__(self, floats_strength: Slot[Any] = -1, start_percent: float = 0.0, end_percent: float = 1.0, print_keyframes: bool = False):
        super().__init__(**{"floats_strength": floats_strength, "start_percent": start_percent, "end_percent": end_percent, "print_keyframes": print_keyframes})
        self.inputs = CreateHookKeyframesFromFloatsInputs(self)
        self.outputs = CreateHookKeyframesFromFloatsOutputs(self)
