
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for SamplerEulerAncestralCFGPP
class SamplerEulerAncestralCFGPPInputs(InputSlots):
    eta: Slot[float]
    s_noise: Slot[float]
    def __init__(self, node: "Node"):
        self.eta = Slot[float](node, "eta", 'FLOAT')
        self.s_noise = Slot[float](node, "s_noise", 'FLOAT')

class SamplerEulerAncestralCFGPPOutputs(OutputSlots):
    sampler: Slot[Any]
    def __init__(self, node: "Node"):
        self.sampler = Slot[Any](node, "SAMPLER", 'SAMPLER')

class SamplerEulerAncestralCFGPP(Node[SamplerEulerAncestralCFGPPInputs, SamplerEulerAncestralCFGPPOutputs]):
    """
    Original name: SamplerEulerAncestralCFGPP
    Category: sampling/custom_sampling/samplers
    

    Inputs:
        - eta (float) (default: 1.0)
        - s_noise (float) (default: 1.0)

    Outputs:
        - sampler (Any)
    """
    _original_name: str = 'SamplerEulerAncestralCFGPP'

    def __init__(self, eta: float = 1.0, s_noise: float = 1.0):
        super().__init__(**{"eta": eta, "s_noise": s_noise})
        self.inputs = SamplerEulerAncestralCFGPPInputs(self)
        self.outputs = SamplerEulerAncestralCFGPPOutputs(self)
