
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for CreateMagicMask
class CreateMagicMaskInputs(InputSlots):
    frames: Slot[int]
    depth: Slot[int]
    distortion: Slot[float]
    seed: Slot[int]
    transitions: Slot[int]
    frame_width: Slot[int]
    frame_height: Slot[int]
    def __init__(self, node: "Node"):
        self.frames = Slot[int](node, "frames", 'INT')
        self.depth = Slot[int](node, "depth", 'INT')
        self.distortion = Slot[float](node, "distortion", 'FLOAT')
        self.seed = Slot[int](node, "seed", 'INT')
        self.transitions = Slot[int](node, "transitions", 'INT')
        self.frame_width = Slot[int](node, "frame_width", 'INT')
        self.frame_height = Slot[int](node, "frame_height", 'INT')

class CreateMagicMaskOutputs(OutputSlots):
    mask: Slot[Image]
    mask_inverted: Slot[Image]
    def __init__(self, node: "Node"):
        self.mask = Slot[Image](node, "mask", 'MASK')
        self.mask_inverted = Slot[Image](node, "mask_inverted", 'MASK')

class CreateMagicMask(Node[CreateMagicMaskInputs, CreateMagicMaskOutputs]):
    """
    Original name: CreateMagicMask
    No description available.
    """
    _original_name: str = 'CreateMagicMask'

    def __init__(self, frames: int = 16, depth: int = 12, distortion: float = 1.5, seed: int = 123, transitions: int = 1, frame_width: int = 512, frame_height: int = 512):
        super().__init__(**{"frames": frames, "depth": depth, "distortion": distortion, "seed": seed, "transitions": transitions, "frame_width": frame_width, "frame_height": frame_height})
        self.inputs = CreateMagicMaskInputs(self)
        self.outputs = CreateMagicMaskOutputs(self)
