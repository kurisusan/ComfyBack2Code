
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for GetImageSizeAndCount
class GetImageSizeAndCountInputs(InputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')

class GetImageSizeAndCountOutputs(OutputSlots):
    image: Slot[Image]
    width: Slot[int]
    height: Slot[int]
    count: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.width = Slot[int](node, "width", 'INT')
        self.height = Slot[int](node, "height", 'INT')
        self.count = Slot[int](node, "count", 'INT')

class GetImageSizeAndCount(Node[GetImageSizeAndCountInputs, GetImageSizeAndCountOutputs]):
    """
    Original name: GetImageSizeAndCount
    No description available.
    """
    _original_name: str = 'GetImageSizeAndCount'

    def __init__(self, image: Slot[Image]):
        super().__init__(**{"image": image})
        self.inputs = GetImageSizeAndCountInputs(self)
        self.outputs = GetImageSizeAndCountOutputs(self)
