
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for ImageUncropByMask
class ImageUncropByMaskInputs(InputSlots):
    destination: Slot[Image]
    source: Slot[Image]
    mask: Slot[Any]
    bbox: Slot[Any]
    def __init__(self, node: "Node"):
        self.destination = Slot[Image](node, "destination", 'IMAGE')
        self.source = Slot[Image](node, "source", 'IMAGE')
        self.mask = Slot[Any](node, "mask", 'MASK')
        self.bbox = Slot[Any](node, "bbox", 'BBOX')

class ImageUncropByMaskOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')

class ImageUncropByMask(Node[ImageUncropByMaskInputs, ImageUncropByMaskOutputs]):
    """
    Original name: ImageUncropByMask
    No description available.
    """
    _original_name: str = 'ImageUncropByMask'

    def __init__(self, destination: Slot[Image], source: Slot[Image], mask: Slot[Any], bbox: Slot[Any]):
        super().__init__(**{"destination": destination, "source": source, "mask": mask, "bbox": bbox})
        self.inputs = ImageUncropByMaskInputs(self)
        self.outputs = ImageUncropByMaskOutputs(self)
