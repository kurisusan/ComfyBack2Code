
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List

# Define input and output slot classes for VHS_LoadVideoFFmpeg
class VHS_LoadVideoFFmpegInputs(InputSlots):
    video: Slot[str]
    force_rate: Slot[float]
    custom_width: Slot[int]
    custom_height: Slot[int]
    frame_load_cap: Slot[int]
    start_time: Slot[float]
    def __init__(self, node: "Node"):
        self.video = Slot[str](node, "video", [])
        self.force_rate = Slot[float](node, "force_rate", 'FLOAT')
        self.custom_width = Slot[int](node, "custom_width", 'INT')
        self.custom_height = Slot[int](node, "custom_height", 'INT')
        self.frame_load_cap = Slot[int](node, "frame_load_cap", 'INT')
        self.start_time = Slot[float](node, "start_time", 'FLOAT')

class VHS_LoadVideoFFmpegOutputs(OutputSlots):
    image: Slot[Image]
    mask: Slot[Any]
    audio: Slot[Any]
    video_info: Slot[Any]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')
        self.mask = Slot[Any](node, "mask", 'MASK')
        self.audio = Slot[Any](node, "audio", 'AUDIO')
        self.video_info = Slot[Any](node, "video_info", 'VHS_VIDEOINFO')

class VHS_LoadVideoFFmpeg(Node[VHS_LoadVideoFFmpegInputs, VHS_LoadVideoFFmpegOutputs]):
    """
    Original name: VHS_LoadVideoFFmpeg
    No description available.
    """
    _original_name: str = 'VHS_LoadVideoFFmpeg'

    def __init__(self, video: str, force_rate: float = 0, custom_width: int = 0, custom_height: int = 0, frame_load_cap: int = 0, start_time: float = 0):
        super().__init__(**{"video": video, "force_rate": force_rate, "custom_width": custom_width, "custom_height": custom_height, "frame_load_cap": frame_load_cap, "start_time": start_time})
        self.inputs = VHS_LoadVideoFFmpegInputs(self)
        self.outputs = VHS_LoadVideoFFmpegOutputs(self)
