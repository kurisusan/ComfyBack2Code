
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node

class SamplerDPMAdaptative(Node):
    """
    Original name: SamplerDPMAdaptative
    No description available.
    """
    _inputs = {
    "order": [
        "INT",
        {
            "default": 3,
            "min": 2,
            "max": 3
        }
    ],
    "rtol": [
        "FLOAT",
        {
            "default": 0.05,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": False
        }
    ],
    "atol": [
        "FLOAT",
        {
            "default": 0.0078,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": False
        }
    ],
    "h_init": [
        "FLOAT",
        {
            "default": 0.05,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": False
        }
    ],
    "pcoeff": [
        "FLOAT",
        {
            "default": 0.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": False
        }
    ],
    "icoeff": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": False
        }
    ],
    "dcoeff": [
        "FLOAT",
        {
            "default": 0.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": False
        }
    ],
    "accept_safety": [
        "FLOAT",
        {
            "default": 0.81,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": False
        }
    ],
    "eta": [
        "FLOAT",
        {
            "default": 0.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": False
        }
    ],
    "s_noise": [
        "FLOAT",
        {
            "default": 1.0,
            "min": 0.0,
            "max": 100.0,
            "step": 0.01,
            "round": False
        }
    ]
}
    _outputs = [
    "SAMPLER"
]
    _original_name = "SamplerDPMAdaptative"

    def __init__(self, order=3, rtol=0.05, atol=0.0078, h_init=0.05, pcoeff=0.0, icoeff=1.0, dcoeff=0.0, accept_safety=0.81, eta=0.0, s_noise=1.0):
        super().__init__(order=order, rtol=rtol, atol=atol, h_init=h_init, pcoeff=pcoeff, icoeff=icoeff, dcoeff=dcoeff, accept_safety=accept_safety, eta=eta, s_noise=s_noise)

    @classmethod
    def get_inputs(cls):
        return cls._inputs

    @classmethod
    def get_outputs(cls):
        return cls._outputs
