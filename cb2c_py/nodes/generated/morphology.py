
# This file is auto-generated by generate_nodes.py
# Do not edit this file directly.

from ..base_node import Node, InputSlots, OutputSlots, Slot, Model, Conditioning, Latent, Image, Vae, Clip
from typing import Dict, Any, List, Union

# Define input and output slot classes for Morphology
class MorphologyInputs(InputSlots):
    image: Slot[Image]
    operation: Slot[str]
    kernel_size: Slot[int]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "image", 'IMAGE')
        self.operation = Slot[str](node, "operation", ['erode', 'dilate', 'open', 'close', 'gradient', 'bottom_hat', 'top_hat'])
        self.kernel_size = Slot[int](node, "kernel_size", 'INT')

class MorphologyOutputs(OutputSlots):
    image: Slot[Image]
    def __init__(self, node: "Node"):
        self.image = Slot[Image](node, "IMAGE", 'IMAGE')

class Morphology(Node[MorphologyInputs, MorphologyOutputs]):
    """
    Original name: Morphology
    No description available.
    """
    _original_name: str = 'Morphology'

    def __init__(self, image: Slot[Image], operation: str, kernel_size: int = 3):
        super().__init__(**{"image": image, "operation": operation, "kernel_size": kernel_size})
        self.inputs = MorphologyInputs(self)
        self.outputs = MorphologyOutputs(self)
